{"version":3,"file":"mp.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@polymer/polymer/lib/elements/dom-module.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/element-mixin.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/properties-changed.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/properties-mixin.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/property-accessors.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/property-effects.js","webpack:///./node_modules/@polymer/polymer/lib/mixins/template-stamp.js","webpack:///./node_modules/@polymer/polymer/lib/utils/async.js","webpack:///./node_modules/@polymer/polymer/lib/utils/boot.js","webpack:///./node_modules/@polymer/polymer/lib/utils/case-map.js","webpack:///./node_modules/@polymer/polymer/lib/utils/html-tag.js","webpack:///./node_modules/@polymer/polymer/lib/utils/mixin.js","webpack:///./node_modules/@polymer/polymer/lib/utils/path.js","webpack:///./node_modules/@polymer/polymer/lib/utils/resolve-url.js","webpack:///./node_modules/@polymer/polymer/lib/utils/settings.js","webpack:///./node_modules/@polymer/polymer/lib/utils/style-gather.js","webpack:///./node_modules/@polymer/polymer/lib/utils/telemetry.js","webpack:///./node_modules/@polymer/polymer/lib/utils/wrap.js","webpack:///./node_modules/@polymer/polymer/polymer-element.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/css-vendor/dist/css-vendor.esm.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./node_modules/is-in-browser/dist/module.js","webpack:///./node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/apis/index.js","webpack:///./src/apis/web/IntersectionObserver.js","webpack:///./src/apis/web/TrackerAPI.js","webpack:///./src/apis/web/createSelectorQuery.js","webpack:///./src/apis/web/loadFontFace.js","webpack:///./src/components/button/index.js","webpack:///./src/components/checkbox-group/index.js","webpack:///./src/components/checkbox/index.js","webpack:///./src/components/form/mixin.js","webpack:///./src/components/icon/index.js","webpack:///./src/components/image/index.js","webpack:///./src/components/image/modeStyle.js","webpack:///./src/components/index.js","webpack:///./src/components/index.less?6a6f","webpack:///./src/components/input/index.js","webpack:///./src/components/label/index.js","webpack:///./src/components/radio-group/index.js","webpack:///./src/components/radio/index.js","webpack:///./src/components/scroll-view/index.js","webpack:///./src/components/shared/Button.js","webpack:///./src/components/shared/Checkbox.js","webpack:///./src/components/shared/Icon.js","webpack:///./src/components/shared/Loading.js","webpack:///./src/components/shared/assets/svgData.js","webpack:///./src/components/shared/createSprite.js","webpack:///./src/components/text/index.js","webpack:///./src/components/view/View.js","webpack:///./src/components/view/index.js","webpack:///./src/form/mixin.js","webpack:///./src/framework/App/index.js","webpack:///./src/framework/Component/index.js","webpack:///./src/framework/ComponentRegistry/getComponentClass.js","webpack:///./src/framework/ComponentRegistry/index.js","webpack:///./src/framework/EventHub.js","webpack:///./src/framework/Page/index.js","webpack:///./src/framework/PageRegistry/index.js","webpack:///./src/framework/Platform/index.js","webpack:///./src/framework/StyleSheet/index.web.js","webpack:///./src/framework/SubPackage/index.js","webpack:///./src/framework/common/commonLogic.js","webpack:///./src/framework/common/commonUI.js","webpack:///./src/framework/common/global.js","webpack:///./src/framework/createComponent/index.js","webpack:///./src/framework/createComponent/normalizeClassNameProps.js","webpack:///./src/framework/createComponent/normalizeClassNameStyle.js","webpack:///./src/framework/createComponent/normalizeStyle.js","webpack:///./src/framework/index.js","webpack:///./src/framework/legacy/CustomComponent.js","webpack:///./src/framework/legacy/PageComponent.js","webpack:///./src/framework/legacy/Scene.js","webpack:///./src/framework/mixins/BasicEventMixin.js","webpack:///./src/framework/mixins/MessageHandleMixin.js","webpack:///./src/framework/mixins/PureRenderMixin.js","webpack:///./src/framework/mixins/RefMixin.js","webpack:///./src/framework/mixins/TrackPageUpdateMixin.js","webpack:///./src/framework/startupParams/index.js","webpack:///./src/framework/utils/camelCase.js","webpack:///./src/framework/utils/env.js","webpack:///./src/framework/utils/filterCssValue.js","webpack:///./src/framework/utils/isNumber.js","webpack:///./src/framework/utils/normalizeComponentProps.js","webpack:///./src/framework/utils/pageInfoAndUrl.js","webpack:///./src/framework/utils/resolvePageUrl.js","webpack:///./src/framework/utils/resolveUrl.js","webpack:///./src/framework/utils/ruleTransform.js","webpack:///./src/framework/utils/transformChildrenToSlots.js","webpack:///./src/framework/utils/transformStyle.js","webpack:///./src/framework/utils/unit.js","webpack:///./src/framework/web/bootstrap.js","webpack:///./src/framework/web/getMessageChannel.js","webpack:///./src/index.js","webpack:///./src/nerv/children.ts","webpack:///./src/nerv/clone-element.ts","webpack:///./src/nerv/component.ts","webpack:///./src/nerv/create-class.ts","webpack:///./src/nerv/create-context.ts","webpack:///./src/nerv/create-element.ts","webpack:///./src/nerv/create-ref.ts","webpack:///./src/nerv/current-owner.ts","webpack:///./src/nerv/dom.ts","webpack:///./src/nerv/emiter.ts","webpack:///./src/nerv/event.ts","webpack:///./src/nerv/fragment.ts","webpack:///./src/nerv/full-component.ts","webpack:///./src/nerv/hooks.ts","webpack:///./src/nerv/hydrate.ts","webpack:///./src/nerv/index.ts","webpack:///./src/nerv/lifecycle.ts","webpack:///./src/nerv/memo.ts","webpack:///./src/nerv/options.ts","webpack:///./src/nerv/passive-event.ts","webpack:///./src/nerv/prop-types.ts","webpack:///./src/nerv/pure-component.ts","webpack:///./src/nerv/render-queue.ts","webpack:///./src/nerv/render.ts","webpack:///./src/nerv/shared/index.ts","webpack:///./src/nerv/utils/env.ts","webpack:///./src/nerv/utils/index.ts","webpack:///./src/nerv/utils/is.ts","webpack:///./src/nerv/utils/next-tick.ts","webpack:///./src/nerv/utils/shallow-equal.ts","webpack:///./src/nerv/utils/simple-map.ts","webpack:///./src/nerv/vdom/create-element.ts","webpack:///./src/nerv/vdom/create-portal.ts","webpack:///./src/nerv/vdom/create-vnode.ts","webpack:///./src/nerv/vdom/create-void.ts","webpack:///./src/nerv/vdom/create-vtext.ts","webpack:///./src/nerv/vdom/h.ts","webpack:///./src/nerv/vdom/patch.ts","webpack:///./src/nerv/vdom/ref.ts","webpack:///./src/nerv/vdom/svg-property-config.ts","webpack:///./src/nerv/vdom/unmount.ts","webpack:///./src/nerv/version.ts","webpack:///./src/text/Text.js","webpack:///./src/text/index.js","webpack:///./src/utils/EventEmitter.js","webpack:///./src/utils/TestMixin.js","webpack:///./src/utils/addEvents.js","webpack:///./src/utils/callBridge.js","webpack:///./src/utils/callInternalAPI.js","webpack:///./src/utils/consts.js","webpack:///./src/utils/debounce.js","webpack:///./src/utils/escapeLogParams.js","webpack:///./src/utils/eventReg.js","webpack:///./src/utils/focusInput.js","webpack:///./src/utils/gerror.js","webpack:///./src/utils/getData.js","webpack:///./src/utils/isDebug.js","webpack:///./src/utils/isNodeVisible.js","webpack:///./src/utils/log.js","webpack:///./src/utils/mergeArray.js","webpack:///./src/utils/objectKeys.js","webpack:///./src/utils/reportError.js","webpack:///./src/utils/requestAnimationFrame.js","webpack:///./src/utils/rgba2Color.js","webpack:///./src/utils/setData.js","webpack:///./src/utils/shallowEqual.js","webpack:///./src/utils/startsWith.js","webpack:///./src/utils/startupParams/index.js","webpack:///./src/utils/startupParams/startupParamsHolder.js","webpack:///./src/utils/stringToPath.js","webpack:///./src/utils/supportsPassive.js","webpack:///./src/utils/system.js","webpack:///./src/utils/throttle.js","webpack:///./src/utils/trackTap.js","webpack:///./src/utils/trackerStore.js","webpack:///./src/utils/types.js","webpack:///./src/view/AnimationViewMixin.js","webpack:///./src/view/View.js","webpack:///./src/view/utils.js","webpack:///./src/web-components/common/base.js","webpack:///./src/web-components/common/hover.js","webpack:///./src/web-components/index.js","webpack:///./src/web-components/label.js","webpack:///./src/web-components/utils/config.js","webpack:///./src/web-components/utils/tools.js","webpack:///./src/web-components/view.js","webpack:///./src/xml-runtime/EmptyComponent.js","webpack:///./src/xml-runtime/EmptyComponentFactory.js","webpack:///./src/xml-runtime/createBlock.js","webpack:///./src/xml-runtime/createRoot.js","webpack:///./src/xml-runtime/createTemplate.js","webpack:///./src/xml-runtime/getLooseDataMember.js","webpack:///./src/xml-runtime/getSJSMember.js","webpack:///./src/xml-runtime/index.js","webpack:///./src/xml-runtime/iterate.js","webpack:///./src/xml-runtime/renderSlot.js","webpack:///./src/xml-runtime/resolveScopedSlots.js","webpack:///./src/xml-runtime/toString.js","webpack:///./src/xml-runtime/useTemplate.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = require(\"regenerator-runtime\");\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\nimport { strictTemplatePolicy } from '../utils/settings.js';\n\nlet modules = {};\nlet lcModules = {};\n/**\n * Sets a dom-module into the global registry by id.\n *\n * @param {string} id dom-module id\n * @param {DomModule} module dom-module instance\n * @return {void}\n */\nfunction setModule(id, module) {\n  // store id separate from lowercased id so that\n  // in all cases mixedCase id will stored distinctly\n  // and lowercase version is a fallback\n  modules[id] = lcModules[id.toLowerCase()] = module;\n}\n/**\n * Retrieves a dom-module from the global registry by id.\n *\n * @param {string} id dom-module id\n * @return {DomModule!} dom-module instance\n */\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nexport class DomModule extends HTMLElement {\n\n  /** @override */\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   *\n   * @export\n   * @nocollapse Referred to indirectly in style-gather.js\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * @param {string} name Name of attribute.\n   * @param {?string} old Old value of attribute.\n   * @param {?string} value Current value of attribute.\n   * @param {?string} namespace Attribute namespace.\n   * @return {void}\n   * @override\n   */\n  attributeChangedCallback(name, old, value, namespace) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n  /* eslint-enable no-unused-args */\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accomodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   * @return {void}\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      // Under strictTemplatePolicy, reject and null out any re-registered\n      // dom-module since it is ambiguous whether first-in or last-in is trusted\n      if (strictTemplatePolicy && findModule(id) !== undefined) {\n        setModule(id, null);\n        throw new Error(`strictTemplatePolicy: dom-module ${id} re-registered`);\n      }\n      this.id = id;\n      setModule(id, this);\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport '../utils/boot.js';\n\nimport { rootPath, strictTemplatePolicy, allowTemplateFromDomModule, legacyOptimizations, legacyWarnings, syncInitialRender, supportsAdoptingStyleSheets, useAdoptedStyleSheetsWithBuiltCSS } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { stylesFromTemplate, stylesFromModuleImports } from '../utils/style-gather.js';\nimport { pathFromUrl, resolveCss, resolveUrl } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\nimport { PropertiesMixin } from './properties-mixin.js';\nimport { wrap } from '../utils/wrap.js';\n\n/**\n * Current Polymer version in Semver notation.\n * @type {string} Semver notation of the current version of Polymer.\n */\nexport const version = '3.4.1';\n\nexport const builtCSS = window.ShadyCSS && window.ShadyCSS['cssBuild'];\n\n/**\n * Element class mixin that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * Subclassers may provide the following static getters to return metadata\n * used to configure Polymer's features for the class:\n *\n * - `static get is()`: When the template is provided via a `dom-module`,\n *   users should return the `dom-module` id from a static `is` getter.  If\n *   no template is needed or the template is provided directly via the\n *   `template` getter, there is no need to define `is` for the element.\n *\n * - `static get template()`: Users may provide the template directly (as\n *   opposed to via `dom-module`) by implementing a static `template` getter.\n *   The getter must return an `HTMLTemplateElement`.\n *\n * - `static get properties()`: Should return an object describing\n *   property-related metadata used by Polymer features (key: property name\n *   value: object containing property metadata). Valid keys in per-property\n *   metadata include:\n *   - `type` (String|Number|Object|Array|...): Used by\n *     `attributeChangedCallback` to determine how string-based attributes\n *     are deserialized to JavaScript property values.\n *   - `notify` (boolean): Causes a change in the property to fire a\n *     non-bubbling event called `<property>-changed`. Elements that have\n *     enabled two-way binding to the property use this event to observe changes.\n *   - `readOnly` (boolean): Creates a getter for the property, but no setter.\n *     To set a read-only property, use the private setter method\n *     `_setProperty(property, value)`.\n *   - `observer` (string): Observer method name that will be called when\n *     the property changes. The arguments of the method are\n *     `(value, previousValue)`.\n *   - `computed` (string): String describing method and dependent properties\n *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).\n *     Computed properties are read-only by default and can only be changed\n *     via the return value of the computing method.\n *\n * - `static get observers()`: Array of strings describing multi-property\n *   observer methods and their dependent properties (e.g.\n *   `'observeABC(a, b, c)'`).\n *\n * The base class provides default implementations for the following standard\n * custom element lifecycle callbacks; users may override these, but should\n * call the super method to ensure\n * - `constructor`: Run when the element is created or upgraded\n * - `connectedCallback`: Run each time the element is connected to the\n *   document\n * - `disconnectedCallback`: Run each time the element is disconnected from\n *   the document\n * - `attributeChangedCallback`: Run each time an attribute in\n *   `observedAttributes` is set or removed (note: this element's default\n *   `observedAttributes` implementation will automatically return an array\n *   of dash-cased attributes based on `properties`)\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertyEffects\n * @appliesMixin PropertiesMixin\n * @property rootPath {string} Set to the value of `rootPath`,\n *   which defaults to the main document path\n * @property importPath {string} Set to the value of the class's static\n *   `importPath` property, which defaults to the path of this element's\n *   `dom-module` (when `is` is used), but can be overridden for other\n *   import strategies.\n * @summary Element class mixin that provides the core API for Polymer's\n * meta-programming features.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const ElementMixin = dedupingMixin(base => {\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyEffects}\n   * @implements {Polymer_PropertiesMixin}\n   * @extends {HTMLElement}\n   * @private\n   */\n  const polymerElementBase = PropertiesMixin(PropertyEffects(base));\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `_properties`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaults(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__propertyDefaults', constructor))) {\n      constructor.__propertyDefaults = null;\n      let props = constructor._properties;\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          constructor.__propertyDefaults = constructor.__propertyDefaults || {};\n          constructor.__propertyDefaults[p] = info;\n        }\n      }\n    }\n    return constructor.__propertyDefaults;\n  }\n\n  /**\n   * Returns a memoized version of the `observers` array.\n   * @param {PolymerElementConstructor} constructor Element class\n   * @return {Array} Array containing own observers for the given class\n   * @protected\n   */\n  function ownObservers(constructor) {\n    if (!constructor.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', constructor))) {\n      constructor.__ownObservers =\n          constructor.hasOwnProperty(\n              JSCompiler_renameProperty('observers', constructor)) ?\n          /** @type {PolymerElementConstructor} */ (constructor).observers :\n          null;\n    }\n    return constructor.__ownObservers;\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is deserialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * is also automatically set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttribute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   *\n   * @param {!PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @return {void}\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed) {\n      if (proto._hasReadOnlyEffect(name)) {\n        console.warn(`Cannot redefine computed property '${name}'.`);\n      } else {\n        proto._createComputedProperty(name, info.computed, allProps);\n      }\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    } else if (info.readOnly === false && proto._hasReadOnlyEffect(name)) {\n      console.warn(`Cannot make readOnly property '${name}' non-readOnly.`);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    } else if (info.reflectToAttribute === false && proto._hasReflectEffect(name)) {\n      console.warn(`Cannot make reflected property '${name}' non-reflected.`);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    } else if (info.notify === false && proto._hasNotifyEffect(name)) {\n      console.warn(`Cannot make notify property '${name}' non-notify.`);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n    // always create the mapping from attribute back to property for deserialization.\n    proto._addPropertyToAttributeMap(name);\n  }\n\n  /**\n   * Process all style elements in the element template. Styles with the\n   * `include` attribute are processed such that any styles in\n   * the associated \"style modules\" are included in the element template.\n   * @param {PolymerElementConstructor} klass Element class\n   * @param {!HTMLTemplateElement} template Template to process\n   * @param {string} is Name of element\n   * @param {string} baseURI Base URI for element\n   * @private\n   */\n  function processElementStyles(klass, template, is, baseURI) {\n    if (!builtCSS) {\n      const templateStyles = template.content.querySelectorAll('style');\n      const stylesWithImports = stylesFromTemplate(template);\n      // insert styles from <link rel=\"import\" type=\"css\"> at the top of the template\n      const linkedStyles = stylesFromModuleImports(is);\n      const firstTemplateChild = template.content.firstElementChild;\n      for (let idx = 0; idx < linkedStyles.length; idx++) {\n        let s = linkedStyles[idx];\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n        template.content.insertBefore(s, firstTemplateChild);\n      }\n      // keep track of the last \"concrete\" style in the template we have encountered\n      let templateStyleIndex = 0;\n      // ensure all gathered styles are actually in this template.\n      for (let i = 0; i < stylesWithImports.length; i++) {\n        let s = stylesWithImports[i];\n        let templateStyle = templateStyles[templateStyleIndex];\n        // if the style is not in this template, it's been \"included\" and\n        // we put a clone of it in the template before the style that included it\n        if (templateStyle !== s) {\n          s = s.cloneNode(true);\n          templateStyle.parentNode.insertBefore(s, templateStyle);\n        } else {\n          templateStyleIndex++;\n        }\n        s.textContent = klass._processStyleText(s.textContent, baseURI);\n      }\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is);\n    }\n    // Support for `adoptedStylesheets` relies on using native Shadow DOM\n    // and built CSS. Built CSS is required because runtime transformation of\n    // `@apply` is not supported. This is because ShadyCSS relies on being able\n    // to update a `style` element in the element template and this is\n    // removed when using `adoptedStyleSheets`.\n    // Note, it would be more efficient to allow style includes to become\n    // separate stylesheets; however, because of `@apply` these are\n    // potentially not shareable and sharing the ones that could be shared\n    // would require some coordination. To keep it simple, all the includes\n    // and styles are collapsed into a single shareable stylesheet.\n    if (useAdoptedStyleSheetsWithBuiltCSS && builtCSS &&\n        supportsAdoptingStyleSheets) {\n      // Remove styles in template and make a shareable stylesheet\n      const styles = template.content.querySelectorAll('style');\n      if (styles) {\n        let css = '';\n        Array.from(styles).forEach(s => {\n          css += s.textContent;\n          s.parentNode.removeChild(s);\n        });\n        klass._styleSheet = new CSSStyleSheet();\n        klass._styleSheet.replaceSync(css);\n      }\n    }\n  }\n\n  /**\n   * Look up template from dom-module for element\n   *\n   * @param {string} is Element name to look up\n   * @return {?HTMLTemplateElement|undefined} Template found in dom module, or\n   *   undefined if not found\n   * @protected\n   */\n  function getTemplateFromDomModule(is) {\n    let template = null;\n    // Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed\n    // when opted-in via allowTemplateFromDomModule\n    if (is && (!strictTemplatePolicy || allowTemplateFromDomModule)) {\n      template = /** @type {?HTMLTemplateElement} */ (\n          DomModule.import(is, 'template'));\n      // Under strictTemplatePolicy, require any element with an `is`\n      // specified to have a dom-module\n      if (strictTemplatePolicy && !template) {\n        throw new Error(`strictTemplatePolicy: expecting dom-module or null template for ${is}`);\n      }\n    }\n    return template;\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   * @extends {polymerElementBase}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Current Polymer version in Semver notation.\n     * @type {string} Semver notation of the current version of Polymer.\n     * @nocollapse\n     */\n    static get polymerElementVersion() {\n      return version;\n    }\n\n    /**\n     * Override of PropertiesMixin _finalizeClass to create observers and\n     * find the template.\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _finalizeClass() {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      polymerElementBase._finalizeClass.call(this);\n      const observers = ownObservers(this);\n      if (observers) {\n        this.createObservers(observers, this._properties);\n      }\n      this._prepareTemplate();\n    }\n\n    /** @nocollapse */\n    static _prepareTemplate() {\n      // note: create \"working\" template that is finalized at instance time\n      let template = /** @type {PolymerElementConstructor} */ (this).template;\n      if (template) {\n        if (typeof template === 'string') {\n          console.error('template getter must return HTMLTemplateElement');\n          template = null;\n        } else if (!legacyOptimizations) {\n          template = template.cloneNode(true);\n        }\n      }\n\n      /** @override */\n      this.prototype._template = template;\n    }\n\n    /**\n     * Override of PropertiesChanged createProperties to create accessors\n     * and property effects for all of the properties.\n     * @param {!Object} props .\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      for (let p in props) {\n        createPropertyFromConfig(\n            /** @type {?} */ (this.prototype), p, props[p], props);\n      }\n    }\n\n    /**\n     * Creates observers for the given `observers` array.\n     * Leverages `PropertyEffects` to create observers.\n     * @param {Object} observers Array of observer descriptors for\n     *   this class\n     * @param {Object} dynamicFns Object containing keys for any properties\n     *   that are functions and should trigger the effect when the function\n     *   reference is changed\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createObservers(observers, dynamicFns) {\n      const proto = this.prototype;\n      for (let i=0; i < observers.length; i++) {\n        proto._createMethodObserver(observers[i], dynamicFns);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation will\n     * return the first `<template>` in a `dom-module` whose `id` matches this\n     * element's `is` (note that a `_template` property on the class prototype\n     * takes precedence over the `dom-module` template, to maintain legacy\n     * element semantics; a subclass will subsequently fall back to its super\n     * class template if neither a `prototype._template` or a `dom-module` for\n     * the class's `is` was found).\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * must be an `HTMLTemplateElement`.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {!HTMLTemplateElement|string} Template to be stamped\n     * @nocollapse\n     */\n    static get template() {\n      // Explanation of template-related properties:\n      // - constructor.template (this getter): the template for the class.\n      //     This can come from the prototype (for legacy elements), from a\n      //     dom-module, or from the super class's template (or can be overridden\n      //     altogether by the user)\n      // - constructor._template: memoized version of constructor.template\n      // - prototype._template: working template for the element, which will be\n      //     parsed and modified in place. It is a cloned version of\n      //     constructor.template, saved in _finalizeClass(). Note that before\n      //     this getter is called, for legacy elements this could be from a\n      //     _template field on the info object passed to Polymer(), a behavior,\n      //     or set in registered(); once the static getter runs, a clone of it\n      //     will overwrite it on the prototype as the working template.\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        const protoTemplate = this.prototype.hasOwnProperty(\n          JSCompiler_renameProperty('_template', this.prototype)) ?\n          this.prototype._template : undefined;\n        this._template =\n          // If user has put template on prototype (e.g. in legacy via registered\n          // callback or info object), prefer that first. Note that `null` is\n          // used as a sentinel to indicate \"no template\" and can be used to\n          // override a super template, whereas `undefined` is used as a\n          // sentinel to mean \"fall-back to default template lookup\" via\n          // dom-module and/or super.template.\n          protoTemplate !== undefined ? protoTemplate :\n          // Look in dom-module associated with this element's is\n          ((this.hasOwnProperty(JSCompiler_renameProperty('is', this)) &&\n          (getTemplateFromDomModule(/** @type {PolymerElementConstructor}*/ (this).is))) ||\n          // Next look for superclass template (call the super impl this\n          // way so that `this` points to the superclass)\n          Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.template);\n      }\n      return this._template;\n    }\n\n    /**\n     * Set the template.\n     *\n     * @param {!HTMLTemplateElement|string} value Template to set.\n     * @nocollapse\n     */\n    static set template(value) {\n      this._template = value;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     *\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     *\n     * For elements defined in ES modules, users should implement\n     * `static get importMeta() { return import.meta; }`, and the default\n     * implementation of `importPath` will  return `import.meta.url`'s path.\n     * For elements defined in HTML imports, this getter will return the path\n     * to the document containing a `dom-module` element matching this\n     * element's static `is` property.\n     *\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     * @suppress {missingProperties}\n     * @nocollapse\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n        const meta = this.importMeta;\n        if (meta) {\n          this._importPath = pathFromUrl(meta.url);\n        } else {\n          const module = DomModule.import(/** @type {PolymerElementConstructor} */ (this).is);\n          this._importPath = (module && module.assetpath) ||\n            Object.getPrototypeOf(/** @type {PolymerElementConstructor}*/ (this).prototype).constructor.importPath;\n        }\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Element>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @return {void}\n     * @override\n     * @suppress {invalidCasts,missingProperties} go/missingfnprops\n     */\n    _initializeProperties() {\n      this.constructor.finalize();\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      this.constructor._finalizeTemplate(/** @type {!HTMLElement} */(this).localName);\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath;\n      this.importPath = this.constructor.importPath;\n      // apply property defaults...\n      let p$ = propertyDefaults(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        if (this._canApplyPropertyDefault(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Determines if a property dfeault can be applied. For example, this\n     * prevents a default from being applied when a property that has no\n     * accessor is overridden by its host before upgrade (e.g. via a binding).\n     * @override\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property default can be applied.\n     */\n    _canApplyPropertyDefault(property) {\n      return !this.hasOwnProperty(property);\n    }\n\n    /**\n     * Gather style text for a style element in the template.\n     *\n     * @param {string} cssText Text containing styling to process\n     * @param {string} baseURI Base URI to rebase CSS paths against\n     * @return {string} The processed CSS text\n     * @protected\n     * @nocollapse\n     */\n    static _processStyleText(cssText, baseURI) {\n      return resolveCss(cssText, baseURI);\n    }\n\n    /**\n    * Configures an element `proto` to function with a given `template`.\n    * The element name `is` and extends `ext` must be specified for ShadyCSS\n    * style scoping.\n    *\n    * @param {string} is Tag name (or type extension name) for this element\n    * @return {void}\n    * @protected\n    * @nocollapse\n    */\n    static _finalizeTemplate(is) {\n      /** @const {HTMLTemplateElement} */\n      const template = this.prototype._template;\n      if (template && !template.__polymerFinalized) {\n        template.__polymerFinalized = true;\n        const importPath = this.importPath;\n        const baseURI = importPath ? resolveUrl(importPath) : '';\n        // e.g. support `include=\"module-name\"`, and ShadyCSS\n        processElementStyles(this, template, is, baseURI);\n        this.prototype._bindTemplate(template);\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @override\n     * @suppress {missingProperties, invalidCasts} Super may or may not\n     *     implement the callback\n     * @return {void}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      super.connectedCallback();\n    }\n\n    /**\n     * Stamps the element template.\n     *\n     * @return {void}\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @return {void}\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @override\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      const n = wrap(this);\n      if (n.attachShadow) {\n        if (dom) {\n          if (!n.shadowRoot) {\n            n.attachShadow({mode: 'open', shadyUpgradeFragment: dom});\n            n.shadowRoot.appendChild(dom);\n            // When `adoptedStyleSheets` is supported a stylesheet is made\n            // available on the element constructor.\n            if (this.constructor._styleSheet) {\n              n.shadowRoot.adoptedStyleSheets = [this.constructor._styleSheet];\n            }\n          }\n          if (syncInitialRender && window.ShadyDOM) {\n            window.ShadyDOM.flushInitial(n.shadowRoot);\n          }\n          return n.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'PolymerElement can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * Note: This function does not support updating CSS mixins.\n     * You can not dynamically change the value of an `@apply`.\n     *\n     * @override\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @return {void}\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * Note that this function performs no resolution for URLs that start\n     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n     * URL resolution, use `window.URL`.\n     *\n     * @override\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl(this.importPath);\n      }\n      return resolveUrl(url, base);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @param {!HTMLTemplateElement} template Template\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} .\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties;\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._parseTemplateContent.call(\n        this, template, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Overrides `PropertyEffects` to warn on use of undeclared properties in\n     * template.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      // Warn if properties are used in template without being declared.\n      // Properties must be listed in `properties` to be included in\n      // `observedAttributes` since CE V1 reads that at registration time, and\n      // since we want to keep template parsing lazy, we can't automatically\n      // add undeclared properties used in templates to `observedAttributes`.\n      // The warning is only enabled in `legacyOptimizations` mode, since\n      // we don't want to spam existing users who might have adopted the\n      // shorthand when attribute deserialization is not important.\n      if (legacyWarnings && !(prop in this._properties) &&\n          // Methods used in templates with no dependencies (or only literal\n          // dependencies) become accessors with template effects; ignore these\n          !(effect.info.part.signature && effect.info.part.signature.static) &&\n          // Warnings for bindings added to nested templates are handled by\n          // templatizer so ignore both the host-to-template bindings\n          // (`hostProp`) and TemplateInstance-to-child bindings\n          // (`nestedTemplate`)\n          !effect.info.part.hostProp && !templateInfo.nestedTemplate) {\n        console.warn(`Property '${prop}' used in template but not declared in 'properties'; ` +\n          `attribute will not be observed.`);\n      }\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      return polymerElementBase._addTemplatePropertyEffect.call(\n        this, templateInfo, prop, effect);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\n/**\n * When using the ShadyCSS scoping and custom property shim, causes all\n * shimmed `styles` (via `custom-style`) in the document (and its subtree)\n * to be updated based on current custom property values.\n *\n * The optional parameter overrides inline custom property styles with an\n * object of properties where the keys are CSS properties, and the values\n * are strings.\n *\n * Example: `updateStyles({'--color': 'blue'})`\n *\n * These properties are retained unless a value of `null` is set.\n *\n * @param {Object=} props Bag of custom property key/values to\n *   apply to the document.\n * @return {void}\n */\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { microTask } from '../utils/async.js';\nimport { wrap } from '../utils/wrap.js';\n\n/** @const {!AsyncInterface} */\nconst microtask = microTask;\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesChanged = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     * @nocollapse\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataHasAccessor', this))) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     * @override\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__dataAttributes', this))) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      // This check is technically not correct; it's an optimization that\n      // assumes that if a _property_ name is already in the map (note this is\n      // an attr->property map), the property mapped directly to the attribute\n      // and it has already been mapped.  This would fail if\n      // `attributeNameForProperty` were overridden such that this was not the\n      // case.\n      let attr = this.__dataAttributes[property];\n      if (!attr) {\n        attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n      return attr;\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     * @override\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          // Inline for perf instead of using `_getProperty`\n          return this.__data[property];\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          // Inline for perf instead of using `_setProperty`\n          if (this._setPendingProperty(property, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      /** @type {number} */\n      // NOTE: used to track re-entrant calls to `_flushProperties`\n      this.__dataCounter = 0;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     * @override\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     * @override\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     * @override\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * @param {string} property Name of the property\n     * @return {boolean} Returns true if the property is pending.\n     */\n    _isPropertyPending(property) {\n      return !!(this.__dataPending && this.__dataPending.hasOwnProperty(property));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _flushProperties() {\n      this.__dataCounter++;\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n      this.__dataCounter--;\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     * @override\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     * @override\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     * @override\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     * @override\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     * @override\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (attribute === 'class' || attribute === 'name' || attribute === 'slot') {\n        node = /** @type {?Element} */(wrap(node));\n      }\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     * @override\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { register, incrementInstanceCount } from '../utils/telemetry.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {!Object} props Properties to normalize\n * @return {!Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertiesMixin = dedupingMixin(superClass => {\n\n /**\n  * @constructor\n  * @implements {Polymer_PropertiesChanged}\n  * @private\n  */\n const base = PropertiesChanged(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {?PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {!PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor))) {\n       const properties = constructor.properties;\n\n       if (properties) {\n        props = normalizeProperties(properties);\n       }\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    * @nocollapse\n    */\n   static get observedAttributes() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n       register(this.prototype);\n       const props = this._properties;\n       this.__observedAttributes = props ? Object.keys(props).map(p => this.prototype._addPropertyToAttributeMap(p)) : [];\n     }\n     return this.__observedAttributes;\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    * @nocollapse\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    * @nocollapse\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {!PropertiesMixinConstructor} */(this));\n     if (props) {\n       /** @type {?} */ (this).createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    * @nocollapse\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    * @nocollapse\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     incrementInstanceCount();\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @return {void}\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin:\n *\n * -   Declare attributes to observe via the standard `static get\n *     observedAttributes()`. Use `dash-case` attribute names to represent\n *     `camelCase` property names.\n * -   Implement the `_propertiesChanged` callback on the class.\n * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to\n *     generate property accessors for each observed attribute. This must be\n *     called before the first instance is created, for example, by calling it\n *     before calling `customElements.define`. It can also be called lazily from\n *     the element's `constructor`, as long as it's guarded so that the call is\n *     only made once, when the first instance is created.\n * -   Call `this._enableProperties()` in the element's `connectedCallback` to\n *     enable the accessors.\n *\n * Any `observedAttributes` will automatically be\n * deserialized via `attributeChangedCallback` and set to the associated\n * property using `dash-case`-to-`camelCase` convention.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   * @private\n   */\n   const base = PropertiesChanged(superClass);\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends {base}\n   * @unrestricted\n   */\n  class PropertyAccessors extends base {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     * @return {void}\n     * @nocollapse\n     */\n    static createPropertiesForAttributes() {\n      let a$ =  /** @type {?} */ (this).observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(dashToCamelCase(a$[i]));\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     * @nocollapse\n     */\n    static attributeNameForProperty(property) {\n      return camelToDashCase(property);\n    }\n\n    /**\n     * Overrides PropertiesChanged implementation to initialize values for\n     * accessors created for values that already existed on the element\n     * prototype.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      super._initializeProperties();\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is infact an\n     *     element\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     * @return {void}\n     * @override\n     */\n    _ensureAttribute(attribute, value) {\n      const el = /** @type {!HTMLElement} */(this);\n      if (!el.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(el, value, attribute);\n      }\n    }\n\n    /**\n     * Overrides PropertiesChanged implemention to serialize objects as JSON.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property\n     *     value.\n     * @override\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return super._serializeValue(value);\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n            outValue = value;\n          }\n          break;\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type {string} */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n        case Date:\n          outValue = isNaN(value) ? String(value) : Number(value);\n          outValue = new Date(outValue);\n          break;\n        default:\n          outValue = super._deserializeValue(value, type);\n          break;\n      }\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Overrides PropertiesChanged implementation to save existing prototype\n     * property value so that it can be reset.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     *\n     * When calling on a prototype, any overwritten values are saved in\n     * `__dataProto`, and it is up to the subclasser to decide how/when\n     * to set those properties back into the accessor.  When calling on an\n     * instance, the overwritten value is set via `_setPendingProperty`,\n     * and the user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     * @protected\n     * @return {void}\n     * @override\n     */\n    _definePropertyAccessor(property, readOnly) {\n      saveAccessorValue(this, property);\n      super._definePropertyAccessor(property, readOnly);\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     * @override\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     * @override\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n","/**\n * @fileoverview\n * @suppress {checkPrototypalTypes}\n * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt The complete set of authors may be found\n * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may\n * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by\n * Google as part of the polymer project is also subject to an additional IP\n * rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport '../utils/boot.js';\nimport { wrap } from '../utils/wrap.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root, isAncestor, isDescendant, get, translate, isPath, set, normalize } from '../utils/path.js';\n/* for notify, reflect */\nimport { camelToDashCase, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\n/* for annotated effects */\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue, legacyUndefined, orderedComputed, removeNestedTemplates, fastDomIf } from '../utils/settings.js';\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\nconst NOOP = [];\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\nconst COMPUTE_INFO = '__computeInfo';\n\n/** @const {!RegExp} */\nconst capitalAttributeRegex = /[A-Z]/;\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @param {boolean=} cloneArrays Clone any arrays assigned to the map when\n *   extending a superclass map onto this subclass\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type, cloneArrays) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    if (cloneArrays) {\n      for (let p in effects) {\n        let protoFx = effects[p];\n        // Perf optimization over Array.slice\n        let instFx = effects[p] = Array(protoFx.length);\n        for (let i=0; i<protoFx.length; i++) {\n          instFx[i] = protoFx[i];\n        }\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {?Object} effects Object map of property-to-Array of effects\n * @param {?Object} props Bag of current property changes\n * @param {?Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    const id = dedupeId++;\n    for (let prop in props) {\n      // Inline `runEffectsForProperty` for perf.\n      let rootProperty = hasPaths ? root(prop) : prop;\n      let fxs = effects[rootProperty];\n      if (fxs) {\n        for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n          if ((!fx.info || fx.info.lastRun !== id) &&\n              (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n            if (fx.info) {\n              fx.info.lastRun = id;\n            }\n            fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n            ran = true;\n          }\n        }\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {!Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {?DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = /** @type {string} */ (trigger.name);\n    return (triggerPath == path) ||\n        !!(trigger.structured && isAncestor(triggerPath, path)) ||\n        !!(trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = typeof info.method === \"string\" ? inst[info.method] : info.method;\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.method + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!Polymer_PropertyEffects} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!Polymer_PropertyEffects} inst The element from which to fire the\n *     event\n * @param {string} eventName The name of the event to send\n *     ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property\n *     changed, the path that changed (optional).\n * @return {void}\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  // As a performance optimization, we could elide the wrap here since notifying\n  // events are non-bubbling and shouldn't need retargeting. However, a very\n  // small number of internal tests failed in obscure ways, which may indicate\n  // user code relied on timing differences resulting from ShadyDOM flushing\n  // as a result of the wrapped `dispatchEvent`.\n  wrap(/** @type {!HTMLElement} */(inst)).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!Polymer_PropertyEffects} inst Host element instance handling the\n *     notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @return {void}\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.currentTarget[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {void}\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {?Object} changedProps Bag of changed properties\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @return {void}\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    if (orderedComputed) {\n      // Runs computed effects in efficient order by keeping a topologically-\n      // sorted queue of compute effects to run, and inserting subsequently\n      // invalidated effects as they are run\n      dedupeId++;\n      const order = getComputedOrder(inst);\n      const queue = [];\n      for (let p in changedProps) {\n        enqueueEffectsFor(p, computeEffects, queue, order, hasPaths);\n      }\n      let info;\n      while ((info = queue.shift())) {\n        if (runComputedEffect(inst, '', changedProps, oldProps, info)) {\n          enqueueEffectsFor(info.methodInfo, computeEffects, queue, order, hasPaths);\n        }\n      }\n      Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n      Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n      inst.__dataPending = null;\n    } else {\n      // Original Polymer 2.x computed effects order, which continues running\n      // effects until no further computed properties have been invalidated\n      let inputProps = changedProps;\n      while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n        Object.assign(/** @type {!Object} */ (oldProps), inst.__dataOld);\n        Object.assign(/** @type {!Object} */ (changedProps), inst.__dataPending);\n        inputProps = inst.__dataPending;\n        inst.__dataPending = null;\n      }\n    }\n  }\n}\n\n/**\n * Inserts a computed effect into a queue, given the specified order. Performs\n * the insert using a binary search.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {Object} info Property effects metadata\n * @param {Array<Object>} queue Ordered queue of effects\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n */\nconst insertEffect = (info, queue, order) => {\n  let start = 0;\n  let end = queue.length - 1;\n  let idx = -1;\n  while (start <= end) {\n    const mid = (start + end) >> 1;\n    // Note `methodInfo` is where the computed property name is stored in\n    // the effect metadata\n    const cmp = order.get(queue[mid].methodInfo) - order.get(info.methodInfo);\n    if (cmp < 0) {\n      start = mid + 1;\n    } else if (cmp > 0) {\n      end = mid - 1;\n    } else {\n      idx = mid;\n      break;\n    }\n  }\n  if (idx < 0) {\n    idx = end + 1;\n  }\n  queue.splice(idx, 0, info);\n};\n\n/**\n * Inserts all downstream computed effects invalidated by the specified property\n * into the topologically-sorted queue of effects to be run.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {string} prop Property name\n * @param {Object} computeEffects Computed effects for this element\n * @param {Array<Object>} queue Topologically-sorted queue of computed effects\n *   to be run\n * @param {Map<string,number>} order Map of computed property name->topological\n *   sort order\n * @param {boolean} hasPaths True with `changedProps` contains one or more paths\n */\nconst enqueueEffectsFor = (prop, computeEffects, queue, order, hasPaths) => {\n  const rootProperty = hasPaths ? root(prop) : prop;\n  const fxs = computeEffects[rootProperty];\n  if (fxs) {\n    for (let i=0; i<fxs.length; i++) {\n      const fx = fxs[i];\n      if ((fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        fx.info.lastRun = dedupeId;\n        insertEffect(fx.info, queue, order);\n      }\n    }\n  }\n};\n\n/**\n * Generates and retrieves a memoized map of computed property name to its\n * topologically-sorted order.\n *\n * The map is generated by first assigning a \"dependency count\" to each property\n * (defined as number properties it depends on, including its method for\n * \"dynamic functions\"). Any properties that have no dependencies are added to\n * the `ready` queue, which are properties whose order can be added to the final\n * order map. Properties are popped off the `ready` queue one by one and a.) added as\n * the next property in the order map, and b.) each property that it is a\n * dependency for has its dep count decremented (and if that property's dep\n * count goes to zero, it is added to the `ready` queue), until all properties\n * have been visited and ordered.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to retrieve the computed\n *   effect order for.\n * @return {Map<string,number>} Map of computed property name->topological sort\n *   order\n */\nfunction getComputedOrder(inst) {\n  let ordered = inst.constructor.__orderedComputedDeps;\n  if (!ordered) {\n    ordered = new Map();\n    const effects = inst[TYPES.COMPUTE];\n    let {counts, ready, total} = dependencyCounts(inst);\n    let curr;\n    while ((curr = ready.shift())) {\n      ordered.set(curr, ordered.size);\n      const computedByCurr = effects[curr];\n      if (computedByCurr) {\n        computedByCurr.forEach(fx => {\n          // Note `methodInfo` is where the computed property name is stored\n          const computedProp = fx.info.methodInfo;\n          --total;\n          if (--counts[computedProp] === 0) {\n            ready.push(computedProp);\n          }\n        });\n      }\n    }\n    if (total !== 0) {\n      const el = /** @type {HTMLElement} */ (inst);\n      console.warn(`Computed graph for ${el.localName} incomplete; circular?`);\n    }\n    inst.constructor.__orderedComputedDeps = ordered;\n  }\n  return ordered;\n}\n\n/**\n * Generates a map of property-to-dependency count (`counts`, where \"dependency\n * count\" is the number of dependencies a given property has assuming it is a\n * computed property, otherwise 0).  It also returns a pre-populated list of\n * `ready` properties that have no dependencies and a `total` count, which is\n * used for error-checking the graph.\n *\n * Used by `orderedComputed: true` computed property algorithm.\n *\n * @param {!Polymer_PropertyEffects} inst The instance to generate dependency\n *   counts for.\n * @return {!Object} Object containing `counts` map (property-to-dependency\n *   count) and pre-populated `ready` array of properties that had zero\n *   dependencies.\n */\nfunction dependencyCounts(inst) {\n  const infoForComputed = inst[COMPUTE_INFO];\n  const counts = {};\n  const computedDeps = inst[TYPES.COMPUTE];\n  const ready = [];\n  let total = 0;\n  // Count dependencies for each computed property\n  for (let p in infoForComputed) {\n    const info = infoForComputed[p];\n    // Be sure to add the method name itself in case of \"dynamic functions\"\n    total += counts[p] =\n      info.args.filter(a => !a.literal).length + (info.dynamicFn ? 1 : 0);\n  }\n  // Build list of ready properties (that aren't themselves computed)\n  for (let p in computedDeps) {\n    if (!infoForComputed[p]) {\n      ready.push(p);\n    }\n  }\n  return {counts, ready, total};\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {?Object} changedProps Bag of current property changes\n * @param {?Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {boolean} True when the property being computed changed\n * @private\n */\nfunction runComputedEffect(inst, property, changedProps, oldProps, info) {\n  // Dirty check dependencies and run if any invalid\n  let result = runMethodEffect(inst, property, changedProps, oldProps, info);\n  // Abort if method returns a no-op result\n  if (result === NOOP) {\n    return false;\n  }\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    return inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n    return false;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!Polymer_PropertyEffects} inst The instance whose props are changing\n * @param {string} path Path that has changed\n * @param {*} value Value of changed path\n * @return {void}\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @return {void}\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n * @return {void}\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @return {void}\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__isPropertyEffectsClient &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    // Abort if value is a no-op result\n    if (value !== NOOP) {\n      applyBindingValue(inst, node, binding, part, value);\n    }\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @return {void}\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__isPropertyEffectsClient &&\n        node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else {\n      // In legacy no-batching mode, bindings applied before dataReady are\n      // equivalent to the \"apply config\" phase, which only set managed props\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (binding.target === 'value' &&\n          (node.localName === 'input' || node.localName === 'textarea'))) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!Polymer_PropertyEffects} inst Instance that bas been previously\n *     bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @return {void}\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      // This ensures all bound elements have a host set, regardless\n      // of whether they upgrade synchronous to creation\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      // Note, className needs style scoping so this needs wrapping.\n      // We may also want to consider doing this for `textContent` and\n      // `innerHTML`.\n      if (target === 'className') {\n        node = wrap(node);\n      }\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!Polymer_PropertyEffects} inst Host element instance to handle\n *     notification event\n * @param {Binding} binding Binding metadata\n * @return {void}\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @return {!Object} Effect metadata for this method effect\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n  return info;\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = inst._marshalArgs(info.args, property, props);\n    return args === NOOP ? NOOP : fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root(arg);\n    // detect structured path (has dots)\n    a.structured = isPath(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\nfunction getArgValue(data, props, path) {\n  let value = get(data, path);\n  // when data is not stored e.g. `splices`, get the value from changedProps\n  // TODO(kschaaf): Note, this can cause a rare issue where the wildcard\n  // info.value could pull a stale value out of changedProps during a reentrant\n  // change that sets the value back to undefined.\n  // https://github.com/Polymer/polymer/issues/5479\n  if (value === undefined) {\n    value = props[path];\n  }\n  return value;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @return {void}\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  const splicesData = { indexSplices: splices };\n  // Legacy behavior stored splices in `__data__` so it was *not* ephemeral.\n  // To match this behavior, we store splices directly on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    array.splices = splicesData;\n  }\n  inst.notifyPath(path + '.splices', splicesData);\n  inst.notifyPath(path + '.length', array.length);\n  // Clear splice data only when it's stored on the array.\n  if (legacyUndefined && !inst._overrideLegacyUndefined) {\n    splicesData.indexSplices = [];\n  }\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!Polymer_PropertyEffects} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @return {void}\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\n/**\n * Element class mixin that provides meta-programming for Polymer's template\n * binding and data observation (collectively, \"property effects\") system.\n *\n * This mixin uses provides the following key static methods for adding\n * property effects to an element class:\n * - `addPropertyEffect`\n * - `createPropertyObserver`\n * - `createMethodObserver`\n * - `createNotifyingProperty`\n * - `createReadOnlyProperty`\n * - `createReflectedProperty`\n * - `createComputedProperty`\n * - `bindTemplate`\n *\n * Each method creates one or more property accessors, along with metadata\n * used by this mixin's implementation of `_propertiesChanged` to perform\n * the property effects.\n *\n * Underscored versions of the above methods also exist on the element\n * prototype for adding property effects on instances at runtime.\n *\n * Note that this mixin overrides several `PropertyAccessors` methods, in\n * many cases to maintain guarantees provided by the Polymer 1.x features;\n * notably it changes property accessors to be synchronous by default\n * whereas the default when using `PropertyAccessors` standalone is to be\n * async by default.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin TemplateStamp\n * @appliesMixin PropertyAccessors\n * @summary Element class mixin that provides meta-programming for Polymer's\n * template binding and data observation system.\n */\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   * @private\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      // Used to identify users of this mixin, ala instanceof\n      this.__isPropertyEffectsClient = true;\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object|null} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__computeInfo;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n      /** @type {boolean} */\n      this._overrideLegacyUndefined;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    /**\n     * @override\n     * @return {void}\n     */\n    _initializeProperties() {\n      super._initializeProperties();\n      this._registerHost();\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    _registerHost() {\n      if (hostStack.length) {\n        let host = hostStack[hostStack.length-1];\n        host._enqueueClient(this);\n        // This ensures even non-bound elements have a host set, as\n        // long as they upgrade synchronously\n        this.__dataHost = host;\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     * @return {void}\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     * @return {void}\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @override\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     * @return {void}\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type, true)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to\n     * attribute\" property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this\n     *     type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @override\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get(this, path);\n          path = /** @type {string} */ (set(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, /**@type{string}*/ (path), value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @override\n     * @param {!Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @return {void}\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        // Note, className needs style scoping so this needs wrapping.\n        if (prop === 'className') {\n          node = /** @type {!Node} */(wrap(node));\n        }\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertiesChanged` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChanged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let propIsPath = this.__dataHasPaths && isPath(property);\n      let prevProps = propIsPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (propIsPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (propIsPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     * @return {void}\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @override\n     * @param {Object} client PropertyEffects client to enqueue\n     * @return {void}\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @override\n     * @return {void}\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @override\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @return {void}\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     * @return {void}\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      let notifyProps;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @override\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {void}\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      if (this.__templateInfo) {\n        this._runEffectsForTemplate(this.__templateInfo, changedProps, oldProps, hasPaths);\n      }\n    }\n\n    _runEffectsForTemplate(templateInfo, changedProps, oldProps, hasPaths) {\n      const baseRunEffects = (changedProps, hasPaths) => {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        for (let info=templateInfo.firstChild; info; info=info.nextSibling) {\n          this._runEffectsForTemplate(info, changedProps, oldProps, hasPaths);\n        }\n      };\n      if (templateInfo.runEffects) {\n        templateInfo.runEffects(baseRunEffects, changedProps, hasPaths);\n      } else {\n        baseRunEffects(changedProps, hasPaths);\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @override\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @return {void}\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @return {void}\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,\n     *         object: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1,\n     *         object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     *\n     * @override\n     * @return {void}\n     * @public\n     */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @override\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @return {void}\n     * @public\n     */\n    set(path, value, root) {\n      if (root) {\n        set(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number=} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {!Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else if (start) {\n        start = Math.floor(start);\n      }\n      // array.splice does different things based on the number of arguments\n      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)\n      // do different things. In the former, the whole array is cleared. In the\n      // latter, no items are removed.\n      // This means that we need to detect whether 1. one of the arguments\n      // is actually passed in and then 2. determine how many arguments\n      // we should pass on to the native array.splice\n      //\n      let ret;\n      // Omit any additional arguments if they were not passed in\n      if (arguments.length === 2) {\n        ret = array.splice(start);\n      // Either start was undefined and the others were defined, but in this\n      // case we can safely pass on all arguments\n      //\n      // Note: this includes the case where none of the arguments were passed in,\n      // e.g. this.splice('array'). However, if both start and deleteCount\n      // are undefined, array.splice will not modify the array (as expected)\n      } else {\n        ret = array.splice(start, deleteCount, ...items);\n      }\n      // At the end, check whether any items were passed in (e.g. insertions)\n      // or if the return array contains items (e.g. deletions).\n      // Only notify if items were added or deleted.\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @override\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @override\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @return {void}\n     * @public\n     */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method\n     *     to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createPropertyObserver(property, method, dynamicFn) {\n      let info = { property, method, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(/** @type {string} */(method), TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: method}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _createReflectedProperty(property) {\n      let attr = this.constructor.attributeNameForProperty(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @override\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      const info = createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n      // Effects are normally stored as map of dependency->effect, but for\n      // ordered computation, we also need tree of computedProp->dependencies\n      ensureOwnEffectMap(this, COMPUTE_INFO)[property] = info;\n    }\n\n    /**\n     * Gather the argument values for a method specified in the provided array\n     * of argument metadata.\n     *\n     * The `path` and `value` arguments are used to fill in wildcard descriptor\n     * when the method is being called as a result of a path notification.\n     *\n     * @param {!Array<!MethodArg>} args Array of argument metadata\n     * @param {string} path Property/path name that triggered the method effect\n     * @param {Object} props Bag of current property changes\n     * @return {!Array<*>} Array of argument values\n     * @private\n     */\n    _marshalArgs(args, path, props) {\n      const data = this.__data;\n      const values = [];\n      for (let i=0, l=args.length; i<l; i++) {\n        let {name, structured, wildcard, value, literal} = args[i];\n        if (!literal) {\n          if (wildcard) {\n            const matches = isDescendant(name, path);\n            const pathValue = getArgValue(data, props, matches ? path : name);\n            value = {\n              path: matches ? path : name,\n              value: pathValue,\n              base: matches ? get(data, name) : pathValue\n            };\n          } else {\n            value = structured ? getArgValue(data, props, name) : data[name];\n          }\n        }\n        // When the `legacyUndefined` flag is enabled, pass a no-op value\n        // so that the observer, computed property, or compound binding is aborted.\n        if (legacyUndefined && !this._overrideLegacyUndefined && value === undefined && args.length > 1) {\n          return NOOP;\n        }\n        values[i] = value;\n      }\n      return values;\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string|function(*,*)} method Function or name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createPropertyObserver(property, method, dynamicFn) {\n      this.prototype._createPropertyObserver(property, method, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal JavaScript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     * @return {void}\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     * @nocollapse\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal JavaScript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {!HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {!TemplateInfo} Template metadata object\n     * @protected\n     * @nocollapse\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /*\n     * Overview of binding flow:\n     *\n     * During finalization (`instanceBinding==false`, `wasPreBound==false`):\n     *  `_bindTemplate(t, false)` called directly during finalization - parses\n     *  the template (for the first time), and then assigns that _prototypical_\n     *  template info to `__preboundTemplateInfo` _on the prototype_; note in\n     *  this case `wasPreBound` is false; this is the first time we're binding\n     *  it, thus we create accessors.\n     *\n     * During first stamping (`instanceBinding==true`, `wasPreBound==true`):\n     *   `_stampTemplate` calls `_bindTemplate(t, true)`: the `templateInfo`\n     *   returned matches the prebound one, and so this is `wasPreBound == true`\n     *   state; thus we _skip_ creating accessors, but _do_ create an instance\n     *   of the template info to serve as the start of our linked list (needs to\n     *   be an instance, not the prototypical one, so that we can add `nodeList`\n     *   to it to contain the `nodeInfo`-ordered list of instance nodes for\n     *   bindings, and so we can chain runtime-stamped template infos off of\n     *   it). At this point, the call to `_stampTemplate` calls\n     *   `applyTemplateInfo` for each nested `<template>` found during parsing\n     *   to hand prototypical `_templateInfo` to them; we also pass the _parent_\n     *   `templateInfo` to the `<template>` so that we have the instance-time\n     *   parent to link the `templateInfo` under in the case it was\n     *   runtime-stamped.\n     *\n     * During subsequent runtime stamping (`instanceBinding==true`,\n     *   `wasPreBound==false`): `_stampTemplate` calls `_bindTemplate(t, true)`\n     *   - here `templateInfo` is guaranteed to _not_ match the prebound one,\n     *   because it was either a different template altogether, or even if it\n     *   was the same template, the step above created a instance of the info;\n     *   in this case `wasPreBound == false`, so we _do_ create accessors, _and_\n     *   link a instance into the linked list.\n     */\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on an instance\n     * to add effects at runtime.  See that method for full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @override\n     * @param {!HTMLTemplateElement} template Template containing binding\n     * bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     * \"prototypical\" binding of the template and overwrites any previously\n     * bound template for the class. When true (as passed from\n     * `_stampTemplate`), the template info is instanced and linked into the\n     * list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     * this is an instance of the prototypical template info\n     * @protected\n     * @suppress {missingProperties} go/missingfnprops\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__preBoundTemplateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into tree of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!this.__templateInfo) {\n          // Set the info to the root of the tree\n          this.__templateInfo = templateInfo;\n        } else {\n          // Append this template info onto the end of its parent template's\n          // list, which will determine the tree structure via which property\n          // effects are run; if this template was not nested in another\n          // template, use the root template (the first stamped one) as the\n          // parent. Note, `parent` is the `templateInfo` instance for this\n          // template's parent (containing) template, which was set up in\n          // `applyTemplateInfo`.  While a given template's `parent` is set\n          // apriori, it is only added to the parent's child list at the point\n          // that it is being bound, since a template may or may not ever be\n          // stamped, and may be stamped more than once (in which case instances\n          // of the template info will be in the tree under its parent more than\n          // once).\n          const parent = template._parentTemplateInfo || this.__templateInfo;\n          const previous = parent.lastChild;\n          templateInfo.parent = parent;\n          parent.lastChild = templateInfo;\n          templateInfo.previousSibling = previous;\n          if (previous) {\n            previous.nextSibling = templateInfo;\n          } else {\n            parent.firstChild = templateInfo;\n          }\n        }\n      } else {\n        this.__preBoundTemplateInfo = templateInfo;\n      }\n      return templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @return {void}\n     * @protected\n     * @nocollapse\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional bound template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically bound.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template, templateInfo) {\n      templateInfo =  templateInfo || /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.push(this);\n      let dom = super._stampTemplate(template, templateInfo);\n      hostStack.pop();\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes; the check on `__dataClientsReady`\n      // ensures we don't needlessly run effects for an element's initial\n      // prototypical template stamping since they will happen as a part of the\n      // first call to `_propertiesChanged`. This flag is set to true\n      // after running the initial propagate effects, and immediately before\n      // flushing clients. Since downstream clients could cause stamping on\n      // this host (e.g. a fastDomIf `dom-if` being forced to render\n      // synchronously), this flag ensures effects for runtime-stamped templates\n      // are run at this point during the initial element boot-up.\n      if (this.__dataClientsReady) {\n        this._runEffectsForTemplate(templateInfo, this.__data, null, false);\n        this._flushClients();\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @override\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @return {void}\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info; Note that while the child is unlinked from its\n      // parent list, a template's `parent` reference is never removed, since\n      // this is is determined by the tree structure and applied at\n      // `applyTemplateInfo` time.\n      const templateInfo = dom.templateInfo;\n      const {previousSibling, nextSibling, parent} = templateInfo;\n      if (previousSibling) {\n        previousSibling.nextSibling = nextSibling;\n      } else if (parent) {\n        parent.firstChild = nextSibling;\n      }\n      if (nextSibling) {\n        nextSibling.previousSibling = previousSibling;\n      } else if (parent) {\n        parent.lastChild = previousSibling;\n      }\n      templateInfo.nextSibling = templateInfo.previousSibling = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        wrap(wrap(node).parentNode).removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNode.call(\n        this, node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) omit an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        // The only way we see a capital letter here is if the attr has\n        // a capital letter in it per spec. In this case, to make sure\n        // this binding works, we go ahead and make the binding to the attribute.\n        if (capitalAttributeRegex.test(name)) {\n          kind = 'attribute';\n        } else if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          // Ensure a ShadyCSS template scoped style is not removed\n          // when a class$ binding's initial literal value is set.\n          if (name == 'class' && node.hasAttribute('class')) {\n            literal += ' ' + node.getAttribute(name);\n          }\n          node.setAttribute(name, literal);\n        }\n        // support disable-upgrade\n        if (kind == 'attribute' && origName == 'disable-upgrade$') {\n          node.setAttribute(name, '');\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        // TODO(https://github.com/google/closure-compiler/issues/3240):\n        //     Change back to just super.methodCall()\n        return propertyEffectsBase._parseTemplateNodeAttribute.call(\n          this, node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      // TODO(https://github.com/google/closure-compiler/issues/3240):\n      //     Change back to just super.methodCall()\n      let noted = propertyEffectsBase._parseTemplateNestedTemplate.call(\n        this, node, templateInfo, nodeInfo);\n      const parent = node.parentNode;\n      const nestedTemplateInfo = nodeInfo.templateInfo;\n      const isDomIf = parent.localName === 'dom-if';\n      const isDomRepeat = parent.localName === 'dom-repeat';\n      // Remove nested template and redirect its host bindings & templateInfo\n      // onto the parent (dom-if/repeat element)'s nodeInfo\n      if (removeNestedTemplates && (isDomIf || isDomRepeat)) {\n        parent.removeChild(node);\n        // Use the parent's nodeInfo (for the dom-if/repeat) to record the\n        // templateInfo, and use that for any host property bindings below\n        nodeInfo = nodeInfo.parentInfo;\n        nodeInfo.templateInfo = nestedTemplateInfo;\n        // Ensure the parent dom-if/repeat is noted since it now may have host\n        // bindings; it may not have been if it did not have its own bindings\n        nodeInfo.noted = true;\n        noted = false;\n      }\n      // Merge host props into outer template and add bindings\n      let hostProps = nestedTemplateInfo.hostProps;\n      if (fastDomIf && isDomIf) {\n        // `fastDomIf` mode uses runtime-template stamping to add accessors/\n        // effects to properties used in its template; as such we don't need to\n        // tax the host element with `_host_` bindings for the `dom-if`.\n        // However, in the event it is nested in a `dom-repeat`, it is still\n        // important that its host properties are added to the\n        // TemplateInstance's `hostProps` so that they are forwarded to the\n        // TemplateInstance.\n        if (hostProps) {\n          templateInfo.hostProps =\n            Object.assign(templateInfo.hostProps || {}, hostProps);\n          // Ensure the dom-if is noted so that it has a __dataHost, since\n          // `fastDomIf` uses the host for runtime template stamping; note this\n          // was already ensured above in the `removeNestedTemplates` case\n          if (!removeNestedTemplates) {\n            nodeInfo.parentInfo.noted = true;\n          }\n        }\n      } else {\n        let mode = '{';\n        for (let source in hostProps) {\n          let parts = [{ mode, source, dependencies: [source], hostProp: true }];\n          addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * The default implementation uses a regular expression for best\n     * performance. However, the regular expression uses a white-list of\n     * allowed characters in a data-binding, which causes problems for\n     * data-bindings that do use characters not in this white-list.\n     *\n     * Instead of updating the white-list with all allowed characters,\n     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)\n     * that uses a state machine instead. This state machine is able to handle\n     * all characters. However, it is slightly less performant, therefore we\n     * extracted it into a separate optional mixin.\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     * @nocollapse\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {!Polymer_PropertyEffects} inst Element that should be used as\n     *     scope for binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     * @nocollapse\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get(inst, part.source);\n      } else {\n        if (hasPaths && isPath(path)) {\n          value = get(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  return PropertyEffects;\n});\n\n/**\n * Stack for enqueuing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nconst hostStack = [];\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\n\nlet placeholderBugDetect = false;\nlet placeholderBug = false;\n\nfunction hasPlaceholderBug() {\n  if (!placeholderBugDetect) {\n    placeholderBugDetect = true;\n    const t = document.createElement('textarea');\n    t.placeholder = 'a';\n    placeholderBug = t.placeholder === t.textContent;\n  }\n  return placeholderBug;\n}\n\n/**\n * Some browsers have a bug with textarea, where placeholder text is copied as\n * a textnode child of the textarea.\n *\n * If the placeholder is a binding, this can break template stamping in two\n * ways.\n *\n * One issue is that when the `placeholder` attribute is removed when the\n * binding is processed, the textnode child of the textarea is deleted, and the\n * template info tries to bind into that node.\n *\n * With `legacyOptimizations` in use, when the template is stamped and the\n * `textarea.textContent` binding is processed, no corresponding node is found\n * because it was removed during parsing. An exception is generated when this\n * binding is updated.\n *\n * With `legacyOptimizations` not in use, the template is cloned before\n * processing and this changes the above behavior. The cloned template also has\n * a value property set to the placeholder and textContent. This prevents the\n * removal of the textContent when the placeholder attribute is removed.\n * Therefore the exception does not occur. However, there is an extra\n * unnecessary binding.\n *\n * @param {!Node} node Check node for placeholder bug\n * @return {void}\n */\nfunction fixPlaceholder(node) {\n  if (hasPlaceholderBug() && node.localName === 'textarea' && node.placeholder\n        && node.placeholder === node.textContent) {\n    node.textContent = null;\n  }\n}\n\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateInfo(inst, node, nodeInfo, parentTemplateInfo) {\n  if (nodeInfo.templateInfo) {\n    // Give the node an instance of this templateInfo and set its parent\n    node._templateInfo = nodeInfo.templateInfo;\n    node._parentTemplateInfo = parentTemplateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\n/**\n * Element mixin that provides basic template parsing and stamping, including\n * the following template-related features for stamped templates:\n *\n * - Declarative event listeners (`on-eventname=\"listener\"`)\n * - Map of node id's to stamped node instances (`this.$.id`)\n * - Nested template content caching/removal and re-installation (performance\n *   optimization)\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin that provides basic template parsing and stamping\n */\nexport const TemplateStamp = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     * @nocollapse\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        // TODO(rictic): fix typing\n        let /** ? */ templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.nestedTemplate = Boolean(outerTemplateInfo);\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          template.hasAttribute('strip-whitespace');\n         // TODO(rictic): fix typing\n         this._parseTemplateContent(\n             template, templateInfo, /** @type {?} */ ({parent: null}));\n      }\n      return template._templateInfo;\n    }\n\n    /**\n     * See docs for _parseTemplateNode.\n     *\n     * @param {!HTMLTemplateElement} template .\n     * @param {!TemplateInfo} templateInfo .\n     * @param {!NodeInfo} nodeInfo .\n     * @return {boolean} .\n     * @nocollapse\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = false;\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      fixPlaceholder(element);\n      if (element.firstChild) {\n        this._parseTemplateChildNodes(element, templateInfo, nodeInfo);\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      // Checking `nodeInfo.noted` allows a child node of this node (who gets\n      // access to `parentInfo`) to cause the parent to be noted, which\n      // otherwise has no return path via `_parseTemplateChildNodes` (used by\n      // some optimizations)\n      return noted || nodeInfo.noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {void}\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      if (root.localName === 'script' || root.localName === 'style') {\n        return;\n      }\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo =\n            /** @type {!NodeInfo} */ ({parentIndex, parentInfo: nodeInfo});\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(childInfo) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      // TODO(rictic): the type of node should be non-null\n      let element = /** @type {!HTMLTemplateElement} */ (node);\n      let templateInfo = this._parseTemplate(element, outerTemplateInfo);\n      let content = templateInfo.content =\n          element.content.ownerDocument.createDocumentFragment();\n      content.appendChild(element.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current\n     *     template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @nocollapse\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     * @nocollapse\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @param {TemplateInfo=} templateInfo Optional template info associated\n     *   with the template to be stamped; if omitted the template will be\n     *   automatically parsed.\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     */\n    _stampTemplate(template, templateInfo) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      // Accepting the `templateInfo` via an argument allows for creating\n      // instances of the `templateInfo` by the caller, useful for adding\n      // instance-time information to the prototypical data\n      templateInfo = templateInfo || this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type {DocumentFragment} */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateInfo(this, node, info, templateInfo);\n        applyEventListener(this, node, info);\n      }\n      dom = /** @type {!StampedTemplate} */(dom); // eslint-disable-line no-self-assign\n      return dom;\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {!EventTarget} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     * @override\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to add\n     * @return {void}\n     * @override\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {!EventTarget} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {function(!Event):void} handler Listener function to remove\n     * @return {void}\n     * @override\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent++;\n    }\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable no-unused-vars */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]\n * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.\n *\n * @param {?} prop Property name\n * @param {*} obj Reference object\n * @return {string} Potentially renamed property name\n */\nwindow.JSCompiler_renameProperty = function(prop, obj) {\n  return prop;\n};\n/* eslint-enable */\n\nexport {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * @fileoverview Module with utilities for converting between \"dash-case\" and\n * \"camelCase\" identifiers.\n */\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Class representing a static string value which can be used to filter\n * strings by asseting that they have been created via this class. The\n * `value` property returns the string passed to the constructor.\n */\nclass LiteralString {\n  constructor(string) {\n    /** @type {string} */\n    this.value = string.toString();\n  }\n  /**\n   * @return {string} LiteralString string value\n   * @override\n   */\n  toString() {\n    return this.value;\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction literalValue(value) {\n  if (value instanceof LiteralString) {\n    return /** @type {!LiteralString} */(value).value;\n  } else {\n    throw new Error(\n        `non-literal value passed to Polymer's htmlLiteral function: ${value}`\n    );\n  }\n}\n\n/**\n * @param {*} value Object to stringify into HTML\n * @return {string} HTML stringified form of `obj`\n */\nfunction htmlValue(value) {\n  if (value instanceof HTMLTemplateElement) {\n    return /** @type {!HTMLTemplateElement } */(value).innerHTML;\n  } else if (value instanceof LiteralString) {\n    return literalValue(value);\n  } else {\n    throw new Error(\n        `non-template value passed to Polymer's html function: ${value}`);\n  }\n}\n\n/**\n * A template literal tag that creates an HTML <template> element from the\n * contents of the string.\n *\n * This allows you to write a Polymer Template in JavaScript.\n *\n * Templates can be composed by interpolating `HTMLTemplateElement`s in\n * expressions in the JavaScript template literal. The nested template's\n * `innerHTML` is included in the containing template.  The only other\n * values allowed in expressions are those returned from `htmlLiteral`\n * which ensures only literal values from JS source ever reach the HTML, to\n * guard against XSS risks.\n *\n * All other values are disallowed in expressions to help prevent XSS\n * attacks; however, `htmlLiteral` can be used to compose static\n * string values into templates. This is useful to compose strings into\n * places that do not accept html, like the css text of a `style`\n * element.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>:host{ content:\"...\" }</style>\n *         <div class=\"shadowed\">${this.partialTemplate}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get partialTemplate() { return html`<span>Partial!</span>`; }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\n */\nexport const html = function html(strings, ...values) {\n  const template = /** @type {!HTMLTemplateElement} */(document.createElement('template'));\n  template.innerHTML = values.reduce((acc, v, idx) =>\n      acc + htmlValue(v) + strings[idx + 1], strings[0]);\n  return template;\n};\n\n/**\n * An html literal tag that can be used with `html` to compose.\n * a literal string.\n *\n * Example:\n *\n *     static get template() {\n *       return html`\n *         <style>\n *           :host { display: block; }\n *           ${this.styleTemplate()}\n *         </style>\n *         <div class=\"shadowed\">${staticValue}</div>\n *         ${super.template}\n *       `;\n *     }\n *     static get styleTemplate() {\n *        return htmlLiteral`.shadowed { background: gray; }`;\n *     }\n *\n * @param {!ITemplateArray} strings Constant parts of tagged template literal\n * @param {...*} values Variable parts of tagged template literal\n * @return {!LiteralString} Constructed literal string\n */\nexport const htmlLiteral = function(strings, ...values) {\n  return new LiteralString(values.reduce((acc, v, idx) =>\n      acc + literalValue(v) + strings[idx + 1], strings[0]));\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n      // copy inherited mixin set from the extended class, or the base class\n      // NOTE: we avoid use of Set here because some browser (IE11)\n      // cannot extend a base Set via the constructor.\n      let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n      mixinSet[mixinDedupeId] = true;\n      /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    }\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n/**\n * Module with utilities for manipulating structured data path strings.\n *\n * @summary Module with utilities for manipulating structured data path strings.\n */\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * Example:\n *\n * ```\n * isPath('foo.bar.baz') // true\n * isPath('foo')         // false\n * ```\n *\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\n/**\n * Returns the root property name for the given path.\n *\n * Example:\n *\n * ```\n * root('foo.bar.baz') // 'foo'\n * root('foo')         // 'foo'\n * ```\n *\n * @param {string} path Path string\n * @return {string} Root property name\n */\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\n/**\n * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not\n * Returns true if the given path is an ancestor of the base path.\n *\n * Example:\n *\n * ```\n * isAncestor('foo.bar', 'foo')         // true\n * isAncestor('foo.bar', 'foo.bar')     // false\n * isAncestor('foo.bar', 'foo.bar.baz') // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is an ancestor of `base`.\n */\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\n/**\n * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant\n *\n * Example:\n *\n * ```\n * isDescendant('foo.bar', 'foo.bar.baz') // true\n * isDescendant('foo.bar', 'foo.bar')     // false\n * isDescendant('foo.bar', 'foo')         // false\n * ```\n *\n * @param {string} base Path string to test against.\n * @param {string} path Path string to test.\n * @return {boolean} True if `path` is a descendant of `base`.\n */\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\n/**\n * Replaces a previous base path with a new base path, preserving the\n * remainder of the path.\n *\n * User must ensure `path` has a prefix of `base`.\n *\n * Example:\n *\n * ```\n * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'\n * ```\n *\n * @param {string} base Current base string to remove\n * @param {string} newBase New base string to replace with\n * @param {string} path Path to translate\n * @return {string} Translated string\n */\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\n/**\n * @param {string} base Path string to test against\n * @param {string} path Path string to test\n * @return {boolean} True if `path` is equal to `base`\n */\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\n/**\n * Converts array-based paths to flattened path.  String-based paths\n * are returned as-is.\n *\n * Example:\n *\n * ```\n * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'\n * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {string} Flattened path\n */\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\n/**\n * Splits a path into an array of property names. Accepts either arrays\n * of path parts or strings.\n *\n * Example:\n *\n * ```\n * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n * ```\n *\n * @param {string | !Array<string|number>} path Input path\n * @return {!Array<string>} Array of path parts\n * @suppress {checkTypes}\n */\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\n/**\n * Reads a value from a path.  If any sub-property in the path is `undefined`,\n * this method returns `undefined` (will never throw.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to read\n * @param {Object=} info If an object is provided to `info`, the normalized\n *  (flattened) path will be set to `info.path`.\n * @return {*} Value at path, or `undefined` if the path could not be\n *  fully dereferenced.\n */\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\n/**\n * Sets a value to a path.  If any sub-property in the path is `undefined`,\n * this method will no-op.\n *\n * @param {Object} root Object from which to dereference path from\n * @param {string | !Array<string|number>} path Path to set\n * @param {*} value Value to set to path\n * @return {string | undefined} The normalized version of the input path\n */\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\n/**\n * Returns true if the given string is a structured data path (has dots).\n *\n * This function is deprecated.  Use `isPath` instead.\n *\n * Example:\n *\n * ```\n * isDeep('foo.bar.baz') // true\n * isDeep('foo')         // false\n * ```\n *\n * @deprecated\n * @param {string} path Path string\n * @return {boolean} True if the string contained one or more dots\n */\nexport const isDeep = isPath;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/[^\\/])|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * Note that this function performs no resolution for URLs that start\n * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\n * URL resolution, use `window.URL`.\n *\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nexport function resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  if (url === '//') {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    try {\n      return (new URL(url, baseURI)).href;\n    } catch (e) {\n      // Bad url or baseURI structure. Do not attempt to resolve.\n      return url;\n    }\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nexport function resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nexport function pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\nexport const useShadow = !(window.ShadyDOM) || !(window.ShadyDOM.inUse);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport const supportsAdoptingStyleSheets = useShadow &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replaceSync' in CSSStyleSheet.prototype) &&\n    // Since spec may change, feature detect exact API we need\n    (() => {\n      try {\n        const sheet = new CSSStyleSheet();\n        sheet.replaceSync('');\n        const host = document.createElement('div');\n        host.attachShadow({mode: 'open'});\n        host.shadowRoot.adoptedStyleSheets = [sheet];\n        return (host.shadowRoot.adoptedStyleSheets[0] === sheet);\n      } catch(e) {\n        return false;\n      }\n    })();\n\n/**\n * Globally settable property that is automatically assigned to\n * `ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `rootPath` to provide a stable application mount path when\n * using client side routing.\n */\nexport let rootPath = window.Polymer && window.Polymer.rootPath ||\n  pathFromUrl(document.baseURI || window.location.href);\n\n/**\n * Sets the global rootPath property used by `ElementMixin` and\n * available via `rootPath`.\n *\n * @param {string} path The new root path\n * @return {void}\n */\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM.\n * The callback signature is:\n *\n *  function sanitizeDOMValue(value, name, type, node) { ... }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,?Node):*)|undefined}\n */\nexport let sanitizeDOMValue =\n  window.Polymer && window.Polymer.sanitizeDOMValue || undefined;\n\n/**\n * Sets the global sanitizeDOMValue available via this module's exported\n * `sanitizeDOMValue` variable.\n *\n * @param {(function(*,string,string,?Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback\n * @return {void}\n */\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n/**\n * Gets sanitizeDOMValue, for environments that don't well support `export let`.\n *\n * @return {(function(*,string,string,?Node):*)|undefined} sanitizeDOMValue\n */\nexport const getSanitizeDOMValue = function() {\n  return sanitizeDOMValue;\n};\n\n/**\n * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.\n * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother\n * scrolling performance.\n * Defaults to `false` for backwards compatibility.\n */\nexport let passiveTouchGestures =\n  window.Polymer && window.Polymer.setPassiveTouchGestures || false;\n\n/**\n * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.\n *\n * @param {boolean} usePassive enable or disable passive touch gestures globally\n * @return {void}\n */\nexport const setPassiveTouchGestures = function(usePassive) {\n  passiveTouchGestures = usePassive;\n};\n\n/**\n * Setting to ensure Polymer template evaluation only occurs based on tempates\n * defined in trusted script.  When true, `<dom-module>` re-registration is\n * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`\n * templates will only evaluate in the context of a trusted element template.\n */\nexport let strictTemplatePolicy =\n  window.Polymer && window.Polymer.strictTemplatePolicy || false;\n\n/**\n * Sets `strictTemplatePolicy` globally for all elements\n *\n * @param {boolean} useStrictPolicy enable or disable strict template policy\n *   globally\n * @return {void}\n */\nexport const setStrictTemplatePolicy = function(useStrictPolicy) {\n  strictTemplatePolicy = useStrictPolicy;\n};\n\n/**\n * Setting to enable dom-module lookup from Polymer.Element.  By default,\n * templates must be defined in script using the `static get template()`\n * getter and the `html` tag function.  To enable legacy loading of templates\n * via dom-module, set this flag to true.\n */\nexport let allowTemplateFromDomModule =\n  window.Polymer && window.Polymer.allowTemplateFromDomModule || false;\n\n/**\n * Sets `lookupTemplateFromDomModule` globally for all elements\n *\n * @param {boolean} allowDomModule enable or disable template lookup\n *   globally\n * @return {void}\n */\nexport const setAllowTemplateFromDomModule = function(allowDomModule) {\n  allowTemplateFromDomModule = allowDomModule;\n};\n\n/**\n * Setting to skip processing style includes and re-writing urls in css styles.\n * Normally \"included\" styles are pulled into the element and all urls in styles\n * are re-written to be relative to the containing script url.\n * If no includes or relative urls are used in styles, these steps can be\n * skipped as an optimization.\n */\nexport let legacyOptimizations =\n  window.Polymer && window.Polymer.legacyOptimizations || false;\n\n/**\n * Sets `legacyOptimizations` globally for all elements to enable optimizations\n * when only legacy based elements are used.\n *\n * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations\n * includes and url rewriting\n * @return {void}\n */\nexport const setLegacyOptimizations = function(useLegacyOptimizations) {\n  legacyOptimizations = useLegacyOptimizations;\n};\n\n/**\n * Setting to add warnings useful when migrating from Polymer 1.x to 2.x.\n */\nexport let legacyWarnings =\n  window.Polymer && window.Polymer.legacyWarnings || false;\n\n/**\n * Sets `legacyWarnings` globally for all elements to migration warnings.\n *\n * @param {boolean} useLegacyWarnings enable or disable warnings\n * @return {void}\n */\nexport const setLegacyWarnings = function(useLegacyWarnings) {\n  legacyWarnings = useLegacyWarnings;\n};\n\n/**\n * Setting to perform initial rendering synchronously when running under ShadyDOM.\n * This matches the behavior of Polymer 1.\n */\nexport let syncInitialRender =\n  window.Polymer && window.Polymer.syncInitialRender || false;\n\n/**\n * Sets `syncInitialRender` globally for all elements to enable synchronous\n * initial rendering.\n *\n * @param {boolean} useSyncInitialRender enable or disable synchronous initial\n * rendering globally.\n * @return {void}\n */\nexport const setSyncInitialRender = function(useSyncInitialRender) {\n  syncInitialRender = useSyncInitialRender;\n};\n\n/**\n * Setting to retain the legacy Polymer 1 behavior for multi-property\n * observers around undefined values. Observers and computed property methods\n * are not called until no argument is undefined.\n */\nexport let legacyUndefined =\n  window.Polymer && window.Polymer.legacyUndefined || false;\n\n/**\n * Sets `legacyUndefined` globally for all elements to enable legacy\n * multi-property behavior for undefined values.\n *\n * @param {boolean} useLegacyUndefined enable or disable legacy\n * multi-property behavior for undefined.\n * @return {void}\n */\nexport const setLegacyUndefined = function(useLegacyUndefined) {\n  legacyUndefined = useLegacyUndefined;\n};\n\n/**\n * Setting to ensure computed properties are computed in order to ensure\n * re-computation never occurs in a given turn.\n */\nexport let orderedComputed =\n  window.Polymer && window.Polymer.orderedComputed || false;\n\n/**\n * Sets `orderedComputed` globally for all elements to enable ordered computed\n * property computation.\n *\n * @param {boolean} useOrderedComputed enable or disable ordered computed effects\n * @return {void}\n */\nexport const setOrderedComputed = function(useOrderedComputed) {\n  orderedComputed = useOrderedComputed;\n};\n\n/**\n * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers\n * no longer fire synthetic click events, and the cancellation behavior can interfere\n * when programmatically clicking on elements.\n */\nexport let cancelSyntheticClickEvents = true;\n\n/**\n * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.\n *\n * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic\n * events\n * @return {void}\n */\nexport const setCancelSyntheticClickEvents = function(useCancelSyntheticClickEvents) {\n  cancelSyntheticClickEvents = useCancelSyntheticClickEvents;\n};\n\n/**\n * Setting to remove nested templates inside `dom-if` and `dom-repeat` as\n * part of element template parsing.  This is a performance optimization that\n * eliminates most of the tax of needing two elements due to the loss of\n * type-extended templates as a result of the V1 specification changes.\n */\nexport let removeNestedTemplates =\n  window.Polymer && window.Polymer.removeNestedTemplates || false;\n\n/**\n * Sets `removeNestedTemplates` globally, to eliminate nested templates\n * inside `dom-if` and `dom-repeat` as part of template parsing.\n *\n * @param {boolean} useRemoveNestedTemplates enable or disable removing nested\n *   templates during parsing\n * @return {void}\n */\nexport const setRemoveNestedTemplates = function(useRemoveNestedTemplates) {\n  removeNestedTemplates = useRemoveNestedTemplates;\n};\n\n/**\n * Setting to place `dom-if` elements in a performance-optimized mode that takes\n * advantage of lighter-weight host runtime template stamping to eliminate the\n * need for an intermediate Templatizer `TemplateInstance` to mange the nodes\n * stamped by `dom-if`.  Under this setting, any Templatizer-provided API's\n * such as `modelForElement` will not be available for nodes stamped by\n * `dom-if`.\n */\nexport let fastDomIf = window.Polymer && window.Polymer.fastDomIf || false;\n\n/**\n * Sets `fastDomIf` globally, to put `dom-if` in a performance-optimized mode.\n *\n * @param {boolean} useFastDomIf enable or disable `dom-if` fast-mode\n * @return {void}\n */\nexport const setFastDomIf = function(useFastDomIf) {\n  fastDomIf = useFastDomIf;\n};\n\n/**\n * Setting to disable `dom-change` and `rendered-item-count` events from\n * `dom-if` and `dom-repeat`. Users can opt back into `dom-change` events by\n * setting the `notify-dom-change` attribute (`notifyDomChange: true` property)\n * to `dom-if`/`don-repeat` instances.\n */\nexport let suppressTemplateNotifications =\n  window.Polymer && window.Polymer.suppressTemplateNotifications || false;\n\n/**\n * Sets `suppressTemplateNotifications` globally, to disable `dom-change` and\n * `rendered-item-count` events from `dom-if` and `dom-repeat`.\n *\n * @param {boolean} suppress enable or disable `suppressTemplateNotifications`\n * @return {void}\n */\nexport const setSuppressTemplateNotifications = function(suppress) {\n  suppressTemplateNotifications = suppress;\n};\n\n/**\n * Setting to disable use of dynamic attributes. This is an optimization\n * to avoid setting `observedAttributes`. Instead attributes are read\n * once at create time and set/removeAttribute are patched.\n */\nexport let legacyNoObservedAttributes =\n  window.Polymer && window.Polymer.legacyNoObservedAttributes || false;\n\n/**\n * Sets `legacyNoObservedAttributes` globally, to disable `observedAttributes`.\n *\n * @param {boolean} noObservedAttributes enable or disable `legacyNoObservedAttributes`\n * @return {void}\n */\nexport const setLegacyNoObservedAttributes = function(noObservedAttributes) {\n  legacyNoObservedAttributes = noObservedAttributes;\n};\n\n/**\n * Setting to enable use of `adoptedStyleSheets` for sharing style sheets\n * between component instances' shadow roots, if the app uses built Shady CSS\n * styles.\n */\nexport let useAdoptedStyleSheetsWithBuiltCSS =\n  window.Polymer && window.Polymer.useAdoptedStyleSheetsWithBuiltCSS || false;\n\n/**\n * Sets `useAdoptedStyleSheetsWithBuiltCSS` globally.\n *\n * @param {boolean} value enable or disable `useAdoptedStyleSheetsWithBuiltCSS`\n * @return {void}\n */\nexport const setUseAdoptedStyleSheetsWithBuiltCSS = function(value) {\n  useAdoptedStyleSheetsWithBuiltCSS = value;\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module with utilities for collection CSS text from `<templates>`, external\n * stylesheets, and `dom-module`s.\n *\n * @summary Module with utilities for collection CSS text from various sources.\n */\n\nimport { DomModule } from '../elements/dom-module.js';\nimport { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\nconst SHADY_UNSCOPED_ATTR = 'shady-unscoped';\n\n/**\n * @param {string} moduleId .\n * @return {?DomModule} .\n */\nfunction importModule(moduleId) {\n  return /** @type {?DomModule} */(DomModule.import(moduleId));\n}\n\nfunction styleForImport(importDoc) {\n  // NOTE: polyfill affordance.\n  // under the HTMLImports polyfill, there will be no 'body',\n  // but the import pseudo-doc can be used directly.\n  let container = importDoc.body ? importDoc.body : importDoc;\n  const importCss = resolveCss(container.textContent,\n    importDoc.baseURI);\n  const style = document.createElement('style');\n  style.textContent = importCss;\n  return style;\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\n\n/**\n * Returns a list of <style> elements in a space-separated list of `dom-module`s.\n *\n * @function\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements\n */\nexport function stylesFromModules(moduleIds) {\n const modules = moduleIds.trim().split(/\\s+/);\n const styles = [];\n for (let i=0; i < modules.length; i++) {\n   styles.push(...stylesFromModule(modules[i]));\n }\n return styles;\n}\n\n/**\n * Returns a list of <style> elements in a given `dom-module`.\n * Styles in a `dom-module` can come either from `<style>`s within the\n * first `<template>`, or else from one or more\n * `<link rel=\"import\" type=\"css\">` links outside the template.\n *\n * @param {string} moduleId dom-module id to gather styles from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModule(moduleId) {\n  const m = importModule(moduleId);\n\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n    return [];\n  }\n\n  if (m._styles === undefined) {\n    const styles = [];\n    // module imports: <link rel=\"import\" type=\"css\">\n    styles.push(..._stylesFromModuleImports(m));\n    // include css from the first template in the module\n    const template = /** @type {?HTMLTemplateElement} */(\n        m.querySelector('template'));\n    if (template) {\n      styles.push(...stylesFromTemplate(template,\n        /** @type {templateWithAssetPath} */(m).assetpath));\n    }\n\n    m._styles = styles;\n  }\n\n  return m._styles;\n}\n\n/**\n * Returns the `<style>` elements within a given template.\n *\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string=} baseURI baseURI for style content\n * @return {!Array<!HTMLStyleElement>} Array of styles\n */\nexport function stylesFromTemplate(template, baseURI) {\n  if (!template._styles) {\n    const styles = [];\n    // if element is a template, get content from its .content\n    const e$ = template.content.querySelectorAll('style');\n    for (let i=0; i < e$.length; i++) {\n      let e = e$[i];\n      // support style sharing by allowing styles to \"include\"\n      // other dom-modules that contain styling\n      let include = e.getAttribute(INCLUDE_ATTR);\n      if (include) {\n        styles.push(...stylesFromModules(include).filter(function(item, index, self) {\n          return self.indexOf(item) === index;\n        }));\n      }\n      if (baseURI) {\n        e.textContent =\n            resolveCss(e.textContent, /** @type {string} */ (baseURI));\n      }\n      styles.push(e);\n    }\n    template._styles = styles;\n  }\n  return template._styles;\n}\n\n/**\n * Returns a list of <style> elements  from stylesheets loaded via `<link rel=\"import\" type=\"css\">` links within the specified `dom-module`.\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {!Array<!HTMLStyleElement>} Array of contained styles.\n */\nexport function stylesFromModuleImports(moduleId) {\n let m = importModule(moduleId);\n return m ? _stylesFromModuleImports(m) : [];\n}\n\n/**\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {!Array<!HTMLStyleElement>} Array of contained styles\n */\nfunction _stylesFromModuleImports(module) {\n  const styles = [];\n  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      const importDoc = p.import;\n      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);\n      if (unscoped && !importDoc._unscopedStyle) {\n        const style = styleForImport(importDoc);\n        style.setAttribute(SHADY_UNSCOPED_ATTR, '');\n        importDoc._unscopedStyle = style;\n      } else if (!importDoc._style) {\n        importDoc._style = styleForImport(importDoc);\n      }\n      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);\n    }\n  }\n  return styles;\n}\n\n/**\n *\n * Returns CSS text of styles in a space-separated list of `dom-module`s.\n * Note: This method is deprecated, use `stylesFromModules` instead.\n *\n * @deprecated\n * @param {string} moduleIds List of dom-module id's within which to\n * search for css.\n * @return {string} Concatenated CSS content from specified `dom-module`s\n */\nexport function cssFromModules(moduleIds) {\n let modules = moduleIds.trim().split(/\\s+/);\n let cssText = '';\n for (let i=0; i < modules.length; i++) {\n   cssText += cssFromModule(modules[i]);\n }\n return cssText;\n}\n\n/**\n * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`\n * can come either from `<style>`s within the first `<template>`, or else\n * from one or more `<link rel=\"import\" type=\"css\">` links outside the\n * template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromModule` instead.\n *\n * @deprecated\n * @param {string} moduleId dom-module id to gather styles from\n * @return {string} Concatenated CSS content from specified `dom-module`\n */\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = /** @type {?HTMLTemplateElement} */(m.querySelector('template'));\n    if (t) {\n      cssText += cssFromTemplate(t,\n        /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\n/**\n * Returns CSS text of `<styles>` within a given template.\n *\n * Any `<styles>` processed are removed from their original location.\n * Note: This method is deprecated, use `styleFromTemplate` instead.\n *\n * @deprecated\n * @param {!HTMLTemplateElement} template Template to gather styles from\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Concatenated CSS content from specified template\n */\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  const e$ = stylesFromTemplate(template, baseURI);\n  // if element is a template, get content from its .content\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    if (e.parentNode) {\n      e.parentNode.removeChild(e);\n    }\n    cssText += e.textContent;\n  }\n  return cssText;\n}\n\n/**\n * Returns CSS text from stylesheets loaded via `<link rel=\"import\" type=\"css\">`\n * links within the specified `dom-module`.\n *\n * Note: This method is deprecated, use `stylesFromModuleImports` instead.\n *\n * @deprecated\n *\n * @param {string} moduleId Id of `dom-module` to gather CSS from\n * @return {string} Concatenated CSS content from links in specified `dom-module`\n */\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\n/**\n * @deprecated\n * @param {!HTMLElement} module dom-module element that could contain `<link rel=\"import\" type=\"css\">` styles\n * @return {string} Concatenated CSS content from links in the dom-module\n */\nfunction _cssFromModuleImports(module) {\n  let cssText = '';\n  let styles = _stylesFromModuleImports(module);\n  for (let i=0; i < styles.length; i++) {\n    cssText += styles[i].textContent;\n  }\n  return cssText;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Total number of Polymer element instances created.\n * @type {number}\n */\nexport let instanceCount = 0;\n\nexport function incrementInstanceCount() {\n  instanceCount++;\n}\n\n/**\n * Array of Polymer element classes that have been finalized.\n * @type {!Array<!PolymerElementConstructor>}\n */\nexport const registrations = [];\n\n/**\n * @param {!PolymerElementConstructor} prototype Element prototype to log\n * @private\n */\nfunction _regLog(prototype) {\n  console.log('[' + /** @type {?} */(prototype).is + ']: registered');\n}\n\n/**\n * Registers a class prototype for telemetry purposes.\n * @param {!PolymerElementConstructor} prototype Element prototype to register\n * @protected\n */\nexport function register(prototype) {\n  registrations.push(prototype);\n}\n\n/**\n * Logs all elements registered with an `is` to the console.\n * @public\n */\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* eslint-disable valid-jsdoc */\n/**\n * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill\n * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,\n * a node wrapper must be used to access ShadowDOM API.\n * This is similar to using `Polymer.dom` but relies exclusively\n * on the presence of the ShadyDOM polyfill rather than requiring the loading\n * of legacy (Polymer.dom) API.\n * @type {function(Node):Node}\n */\nexport const wrap = (window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap']) ?\n  window['ShadyDOM']['wrap'] :\n  (window['ShadyDOM'] ? (n) => ShadyDOM['patch'](n) : (n) => n);\n\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { ElementMixin, version } from './lib/mixins/element-mixin.js';\nexport { html } from './lib/utils/html-tag.js';\n\nexport { version };\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nexport const PolymerElement = ElementMixin(HTMLElement);\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import isInBrowser from 'is-in-browser';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\n\n// Export javascript style and css style vendor prefixes.\nvar js = '';\nvar css = '';\nvar vendor = '';\nvar browser = '';\nvar isTouch = isInBrowser && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.\n\nif (isInBrowser) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n\n  var _document$createEleme = document.createElement('p'),\n      style = _document$createEleme.style;\n\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  } // Correctly detect the Edge browser.\n\n\n  if (js === 'Webkit' && 'msHyphens' in style) {\n    js = 'ms';\n    css = jsCssMap.ms;\n    browser = 'edge';\n  } // Correctly detect the Safari browser.\n\n\n  if (js === 'Webkit' && '-apple-trailing-word' in style) {\n    vendor = 'apple';\n  }\n}\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String, vendor: String, browser: String}}\n * @api public\n */\n\n\nvar prefix = {\n  js: js,\n  css: css,\n  vendor: vendor,\n  browser: browser,\n  isTouch: isTouch\n};\n\n/**\n * Test if a keyframe at-rule should be prefixed or not\n *\n * @param {String} vendor prefix string for the current browser.\n * @return {String}\n * @api public\n */\n\nfunction supportedKeyframes(key) {\n  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'\n  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.\n  // https://caniuse.com/#search=keyframes\n\n  if (prefix.js === 'ms') return key;\n  return \"@\" + prefix.css + \"keyframes\" + key.substr(10);\n}\n\n// https://caniuse.com/#search=appearance\n\nvar appearence = {\n  noPrefill: ['appearance'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'appearance') return false;\n    if (prefix.js === 'ms') return \"-webkit-\" + prop;\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=color-adjust\n\nvar colorAdjust = {\n  noPrefill: ['color-adjust'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'color-adjust') return false;\n    if (prefix.js === 'Webkit') return prefix.css + \"print-\" + prop;\n    return prop;\n  }\n};\n\nvar regExp = /[-\\s]+(.)?/g;\n/**\n * Replaces the letter with the capital letter\n *\n * @param {String} match\n * @param {String} c\n * @return {String}\n * @api private\n */\n\nfunction toUpper(match, c) {\n  return c ? c.toUpperCase() : '';\n}\n/**\n * Convert dash separated strings to camel-cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\n\nfunction camelize(str) {\n  return str.replace(regExp, toUpper);\n}\n\n/**\n * Convert dash separated strings to pascal cased.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction pascalize(str) {\n  return camelize(\"-\" + str);\n}\n\n// but we can use a longhand property instead.\n// https://caniuse.com/#search=mask\n\nvar mask = {\n  noPrefill: ['mask'],\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^mask/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var longhand = 'mask-image';\n\n      if (camelize(longhand) in style) {\n        return prop;\n      }\n\n      if (prefix.js + pascalize(longhand) in style) {\n        return prefix.css + prop;\n      }\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=text-orientation\n\nvar textOrientation = {\n  noPrefill: ['text-orientation'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'text-orientation') return false;\n\n    if (prefix.vendor === 'apple' && !prefix.isTouch) {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=transform\n\nvar transform = {\n  noPrefill: ['transform'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transform') return false;\n\n    if (options.transform) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=transition\n\nvar transition = {\n  noPrefill: ['transition'],\n  supportedProperty: function supportedProperty(prop, style, options) {\n    if (prop !== 'transition') return false;\n\n    if (options.transition) {\n      return prop;\n    }\n\n    return prefix.css + prop;\n  }\n};\n\n// https://caniuse.com/#search=writing-mode\n\nvar writingMode = {\n  noPrefill: ['writing-mode'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'writing-mode') return false;\n\n    if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=user-select\n\nvar userSelect = {\n  noPrefill: ['user-select'],\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'user-select') return false;\n\n    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {\n      return prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=multicolumn\n// https://github.com/postcss/autoprefixer/issues/491\n// https://github.com/postcss/autoprefixer/issues/177\n\nvar breakPropsOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^break-/.test(prop)) return false;\n\n    if (prefix.js === 'Webkit') {\n      var jsProp = \"WebkitColumn\" + pascalize(prop);\n      return jsProp in style ? prefix.css + \"column-\" + prop : false;\n    }\n\n    if (prefix.js === 'Moz') {\n      var _jsProp = \"page\" + pascalize(prop);\n\n      return _jsProp in style ? \"page-\" + prop : false;\n    }\n\n    return false;\n  }\n};\n\n// See https://github.com/postcss/autoprefixer/issues/324.\n\nvar inlineLogicalOld = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (prefix.js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\n// Camelization is required because we can't test using.\n// CSS syntax for e.g. in FF.\n\nvar unprefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    return camelize(prop) in style ? prop : false;\n  }\n};\n\nvar prefixed = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.\n\n    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.\n\n    if (prop[0] === '-' && prop[1] === '-') return prop;\n    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.\n\n    if (prefix.js !== 'Webkit' && \"Webkit\" + pascalized in style) return \"-webkit-\" + prop;\n    return false;\n  }\n};\n\n// https://caniuse.com/#search=scroll-snap\n\nvar scrollSnap = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop.substring(0, 11) !== 'scroll-snap') return false;\n\n    if (prefix.js === 'ms') {\n      return \"\" + prefix.css + prop;\n    }\n\n    return prop;\n  }\n};\n\n// https://caniuse.com/#search=overscroll-behavior\n\nvar overscrollBehavior = {\n  supportedProperty: function supportedProperty(prop) {\n    if (prop !== 'overscroll-behavior') return false;\n\n    if (prefix.js === 'ms') {\n      return prefix.css + \"scroll-chaining\";\n    }\n\n    return prop;\n  }\n};\n\nvar propMap = {\n  'flex-grow': 'flex-positive',\n  'flex-shrink': 'flex-negative',\n  'flex-basis': 'flex-preferred-size',\n  'justify-content': 'flex-pack',\n  order: 'flex-order',\n  'align-items': 'flex-align',\n  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.\n\n}; // Support old flex spec from 2012.\n\nvar flex2012 = {\n  supportedProperty: function supportedProperty(prop, style) {\n    var newProp = propMap[prop];\n    if (!newProp) return false;\n    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n  }\n};\n\nvar propMap$1 = {\n  flex: 'box-flex',\n  'flex-grow': 'box-flex',\n  'flex-direction': ['box-orient', 'box-direction'],\n  order: 'box-ordinal-group',\n  'align-items': 'box-align',\n  'flex-flow': ['box-orient', 'box-direction'],\n  'justify-content': 'box-pack'\n};\nvar propKeys = Object.keys(propMap$1);\n\nvar prefixCss = function prefixCss(p) {\n  return prefix.css + p;\n}; // Support old flex spec from 2009.\n\n\nvar flex2009 = {\n  supportedProperty: function supportedProperty(prop, style, _ref) {\n    var multiple = _ref.multiple;\n\n    if (propKeys.indexOf(prop) > -1) {\n      var newProp = propMap$1[prop];\n\n      if (!Array.isArray(newProp)) {\n        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;\n      }\n\n      if (!multiple) return false;\n\n      for (var i = 0; i < newProp.length; i++) {\n        if (!(prefix.js + pascalize(newProp[0]) in style)) {\n          return false;\n        }\n      }\n\n      return newProp.map(prefixCss);\n    }\n\n    return false;\n  }\n};\n\n// plugins = [\n//   ...plugins,\n//    breakPropsOld,\n//    inlineLogicalOld,\n//    unprefixed,\n//    prefixed,\n//    scrollSnap,\n//    flex2012,\n//    flex2009\n// ]\n// Plugins without 'noPrefill' value, going last.\n// 'flex-*' plugins should be at the bottom.\n// 'flex2009' going after 'flex2012'.\n// 'prefixed' going after 'unprefixed'\n\nvar plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];\nvar propertyDetectors = plugins.filter(function (p) {\n  return p.supportedProperty;\n}).map(function (p) {\n  return p.supportedProperty;\n});\nvar noPrefill = plugins.filter(function (p) {\n  return p.noPrefill;\n}).reduce(function (a, p) {\n  a.push.apply(a, _toConsumableArray(p.noPrefill));\n  return a;\n}, []);\n\nvar el;\nvar cache = {};\n\nif (isInBrowser) {\n  el = document.createElement('p'); // We test every property on vendor prefix requirement.\n  // Once tested, result is cached. It gives us up to 70% perf boost.\n  // http://jsperf.com/element-style-object-access-vs-plain-object\n  //\n  // Prefill cache with known css properties to reduce amount of\n  // properties we need to feature test at runtime.\n  // http://davidwalsh.name/vendor-prefix\n\n  var computed = window.getComputedStyle(document.documentElement, '');\n\n  for (var key$1 in computed) {\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];\n  } // Properties that cannot be correctly detected using the\n  // cache prefill method.\n\n\n  noPrefill.forEach(function (x) {\n    return delete cache[x];\n  });\n}\n/**\n * Test if a property is supported, returns supported property with vendor\n * prefix if required. Returns `false` if not supported.\n *\n * @param {String} prop dash separated\n * @param {Object} [options]\n * @return {String|Boolean}\n * @api public\n */\n\n\nfunction supportedProperty(prop, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // For server-side rendering.\n  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache[prop] != null) {\n    return cache[prop];\n  } // Check if 'transition' or 'transform' natively supported in browser.\n\n\n  if (prop === 'transition' || prop === 'transform') {\n    options[prop] = prop in el.style;\n  } // Find a plugin for current prefix property.\n\n\n  for (var i = 0; i < propertyDetectors.length; i++) {\n    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.\n\n    if (cache[prop]) break;\n  } // Reset styles for current property.\n  // Firefox can even throw an error for invalid properties, e.g., \"0\".\n\n\n  try {\n    el.style[prop] = '';\n  } catch (err) {\n    return false;\n  }\n\n  return cache[prop];\n}\n\nvar cache$1 = {};\nvar transitionProperties = {\n  transition: 1,\n  'transition-property': 1,\n  '-webkit-transition': 1,\n  '-webkit-transition-property': 1\n};\nvar transPropsRegExp = /(^\\s*[\\w-]+)|, (\\s*[\\w-]+)(?![^()]*\\))/g;\nvar el$1;\n/**\n * Returns prefixed value transition/transform if needed.\n *\n * @param {String} match\n * @param {String} p1\n * @param {String} p2\n * @return {String}\n * @api private\n */\n\nfunction prefixTransitionCallback(match, p1, p2) {\n  if (p1 === 'var') return 'var';\n  if (p1 === 'all') return 'all';\n  if (p2 === 'all') return ', all';\n  var prefixedValue = p1 ? supportedProperty(p1) : \", \" + supportedProperty(p2);\n  if (!prefixedValue) return p1 || p2;\n  return prefixedValue;\n}\n\nif (isInBrowser) el$1 = document.createElement('p');\n/**\n * Returns prefixed value if needed. Returns `false` if value is not supported.\n *\n * @param {String} property\n * @param {String} value\n * @return {String|Boolean}\n * @api public\n */\n\nfunction supportedValue(property, value) {\n  // For server-side rendering.\n  var prefixedValue = value;\n  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.\n  // We want only prefixable values here.\n  // eslint-disable-next-line no-restricted-globals\n\n  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {\n    return prefixedValue;\n  } // Create cache key for current value.\n\n\n  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.\n\n  if (process.env.NODE_ENV !== 'benchmark' && cache$1[cacheKey] != null) {\n    return cache$1[cacheKey];\n  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.\n\n\n  try {\n    // Test value as it is.\n    el$1.style[property] = prefixedValue;\n  } catch (err) {\n    // Return false if value not supported.\n    cache$1[cacheKey] = false;\n    return false;\n  } // If 'transition' or 'transition-property' property.\n\n\n  if (transitionProperties[property]) {\n    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);\n  } else if (el$1.style[property] === '') {\n    // Value with a vendor prefix.\n    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert \"flex\" to \"-ms-flexbox\" for IE10.\n\n    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.\n\n    el$1.style[property] = prefixedValue; // Return false if value not supported.\n\n    if (el$1.style[property] === '') {\n      cache$1[cacheKey] = false;\n      return false;\n    }\n  } // Reset styles for current property.\n\n\n  el$1.style[property] = ''; // Write current value to cache.\n\n  cache$1[cacheKey] = prefixedValue;\n  return cache$1[cacheKey];\n}\n\nexport { prefix, supportedKeyframes, supportedProperty, supportedValue };\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport var isBrowser = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" && (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === 'object' && document.nodeType === 9;\n\nexport default isBrowser;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { getCurrentPageImpl, $global, EventHub } from '@/framework/';\nimport callBridge from '@/utils/callBridge';\nimport callInternalAPI from '@/utils/callInternalAPI';\nimport reportError from '@/utils/reportError';\nimport { SDKVersion, logSystemInfo } from '@/utils/system';\nimport addEvents from '@/utils/addEvents';\nimport TrackerAPI from './web/TrackerAPI';\nimport loadFontFace from './web/loadFontFace';\nimport createSelectorQuery from './web/createSelectorQuery';\nimport { addIntersectionObserver, removeIntersectionObserver, scheduleIntersectionUpdate } from './web/IntersectionObserver';\n\nconst g = self;\nconst messageQueue = [];\n\nconst bridge = {\n  // for internal call render\n  fireMessage(data) {\n    messageQueue.forEach((f) => {\n      return f(data);\n    });\n  },\n  onMessage(fn) {\n    messageQueue.push(fn);\n    return function () {\n      const index = messageQueue.indexOf(fn);\n      if (index !== -1) {\n        messageQueue.splice(index, 1);\n      }\n    };\n  },\n  reLaunch(options) {\n    let { url } = options;\n\n    if (url.charAt(0) === '/') {\n      url = url.slice(1);\n    }\n    let launchParamsTag = url;\n    const queryIndex = url.indexOf('?');\n    if (queryIndex !== -1) {\n      launchParamsTag = url.slice(0, queryIndex);\n    }\n    const isTab = !!$global.tabsConfig[url];\n    // init tabs config\n    if (isTab) {\n      bridge.call('switchTab', {\n        tag: url,\n        recreate: true,\n      });\n    } else {\n      bridge.call('pushWindow', {\n        url: `#${url}`,\n        launchParamsTag,\n        param: {\n          closeAllWindow: true,\n          animationType: 'none',\n        },\n      });\n    }\n  },\n  pageScrollTo({ scrollTop } = {}) {\n    window.scrollTo(window.pageXOffset, scrollTop);\n  },\n  SDKVersion,\n  ...TrackerAPI,\n  ...loadFontFace,\n  createSelectorQuery,\n  addIntersectionObserver,\n  removeIntersectionObserver,\n  reportError,\n  call: callBridge,\n  callInternalAPI,\n  console: (function (_console) {\n    function console(...args) {\n      return _console.apply(this, args);\n    }\n\n    console.toString = function () {\n      return _console.toString();\n    };\n\n    return console;\n  })((type, ...args) => {\n    console[type].apply(console, args.slice(0, -2));\n  }),\n  hideKeyboard: function hideKeyboard() {\n    const { activeElement } = document;\n    if (activeElement && activeElement.blur) {\n      activeElement.blur();\n    }\n    if (window._MpActiveNativeElement !== undefined) {\n      callBridge('NBComponent.sendMessage', {\n        actionType: 'blur',\n        element: window._MpActiveNativeElement,\n      });\n    }\n  },\n};\n\nconst dispatchPageReRenderEvent = () => {\n  document.dispatchEvent(new CustomEvent('pageReRender', {}));\n};\n\naddEvents(document, {\n  onShare(e) {\n    const page = getCurrentPageImpl();\n    if (page && page.publicInstance.onShareAppMessage) {\n      e.preventDefault();\n    }\n  },\n  firePullToRefresh(e) {\n    e.preventDefault();\n  },\n  pullIntercept(e) {\n    e.preventDefault();\n  },\n  pageReRender() {\n    scheduleIntersectionUpdate();\n  },\n});\n\naddEvents(window, {\n  resize: dispatchPageReRenderEvent,\n  animationstart: dispatchPageReRenderEvent,\n  animationiteration: dispatchPageReRenderEvent,\n  animationend: dispatchPageReRenderEvent,\n  transitionend: dispatchPageReRenderEvent,\n});\n\nwindow.addEventListener('scroll', () => {\n  scheduleIntersectionUpdate();\n}, {\n  capture: true,\n  passive: true,\n});\n\nEventHub.addListener(['pageReady', 'pageUpdate'], () => {\n  dispatchPageReRenderEvent();\n});\n\nlogSystemInfo();\n$global.bridge = bridge;\n\nexport default bridge;\n","import { getCurrentPageImpl } from '@/framework/';\nimport requestAnimationFrame from '@/utils/requestAnimationFrame';\n\nlet requestAnimationFrameing = false;\nconst intersectionObservers = {};\nconst subIntersectionObservers = {};\nconst formatMargins = function formatMargins(margins = {}) {\n  return {\n    left: margins.left || 0,\n    top: margins.top || 0,\n    right: margins.right || 0,\n    bottom: margins.bottom || 0,\n  };\n};\nconst formatRect = function formatRect(params = {}) {\n  return {\n    left: params.left,\n    top: params.top,\n    right: params.right,\n    bottom: params.bottom,\n    width: params.width,\n    height: params.height,\n  };\n};\n// 矩阵相交计算\nconst getIntersectRect = function getIntersectRect(rect1, rect2) {\n  const intersectRect = {\n    left: rect1.left < rect2.left ? rect2.left : rect1.left,\n    top: rect1.top < rect2.top ? rect2.top : rect1.top,\n    right: rect1.right > rect2.right ? rect2.right : rect1.right,\n    bottom: rect1.bottom > rect2.bottom ? rect2.bottom : rect1.bottom,\n    width: 0,\n    height: 0,\n  };\n  if (intersectRect.right > intersectRect.left) {\n    intersectRect.width = intersectRect.right - intersectRect.left;\n  } else {\n    intersectRect.right = intersectRect.left = intersectRect.bottom = intersectRect.top = 0;\n  }\n  if (intersectRect.bottom > intersectRect.top) {\n    intersectRect.height = intersectRect.bottom - intersectRect.top;\n  } else {\n    intersectRect.right = intersectRect.left = intersectRect.bottom = intersectRect.top = 0;\n  }\n  return intersectRect;\n};\n// 返回所有参照节点的相交矩阵\nconst getRelativeIntersectRect = function getRelativeIntersectRect(relatives) {\n  const _document$documentEle = document.documentElement;\n  const { clientWidth, clientHeight } = _document$documentEle;\n\n  let relativeIntersectRect = null;\n  for (let i = 0; i < relatives.length; i++) {\n    const _relatives$i = relatives[i];\n    const { node } = _relatives$i;\n    const { margins } = _relatives$i;\n\n    const relativeRect = node ? node.getBoundingClientRect() : {\n      left: 0,\n      top: 0,\n      right: clientWidth,\n      bottom: clientHeight,\n      width: clientWidth,\n      height: clientHeight,\n    };\n    const relativeRectWithMargins = {\n      left: relativeRect.left - margins.left,\n      top: relativeRect.top - margins.top,\n      right: relativeRect.right + margins.right,\n      bottom: relativeRect.bottom + margins.bottom,\n    };\n    relativeIntersectRect = relativeIntersectRect ? getIntersectRect(relativeIntersectRect, relativeRectWithMargins) : relativeRectWithMargins;\n  }\n  return relativeIntersectRect;\n};\n// 判断节点是否相交\nconst checkIntersection = function checkIntersection(params) {\n  const { targetNode, relatives, thresholds, currentRatio, intersectionObserverId } = params;\n\n  // 执行检测的时候节点已经消失\n\n  if (!targetNode) {\n    return;\n  }\n  const relativeIntersectRect = getRelativeIntersectRect(relatives);\n  const rect = formatRect(targetNode.getBoundingClientRect());\n  const intersectRect = getIntersectRect(relativeIntersectRect, rect);\n  const area = rect.width * rect.height;\n  const latestCurrentRatio = area ? intersectRect.width * intersectRect.height / area : 0;\n  // 有点绕，请注意\n  params.currentRatio = latestCurrentRatio;\n  let shouldFireIntersectionEvent = undefined === currentRatio;\n  if (currentRatio !== latestCurrentRatio) {\n    thresholds.forEach((threshold) => {\n      if (shouldFireIntersectionEvent) return false;\n      if (latestCurrentRatio <= threshold && currentRatio >= threshold) {\n        shouldFireIntersectionEvent = true;\n      } else if (latestCurrentRatio >= threshold && currentRatio <= threshold) {\n        shouldFireIntersectionEvent = true;\n      }\n    });\n  }\n  if (shouldFireIntersectionEvent) {\n    getCurrentPageImpl().callRemote('bridge', '_fireIntersectionObserver', {\n      intersectionObserverId,\n      info: {\n        id: targetNode.id,\n        dataset: targetNode.dataset,\n        time: Date.now(),\n        boundingClientRect: rect,\n        intersectionRatio: latestCurrentRatio,\n        intersectionRect: formatRect(intersectRect),\n        relativeRect: relativeIntersectRect,\n      },\n    });\n  }\n};\nconst handleIntersectionObserver = function handleIntersectionObserver(targetNodeArr, relatives, thresholds, currentRatio, intersectionObserverId) {\n  if (!targetNodeArr.length || !relatives.length) {\n    return;\n  }\n  intersectionObservers[intersectionObserverId] = targetNodeArr.length;\n  targetNodeArr.forEach((targetNode, index) => {\n    const subIntersectionObserverId = `${intersectionObserverId}@${index}`;\n    const IntersectionParams = {\n      targetNode,\n      relatives,\n      thresholds,\n      currentRatio,\n      intersectionObserverId,\n    };\n    // 当执行时目标已经已经移除\n    if (!targetNode) {\n      delete subIntersectionObservers[subIntersectionObserverId];\n      --intersectionObservers[intersectionObserverId];\n    } else {\n      subIntersectionObservers[subIntersectionObserverId] = IntersectionParams;\n      requestAnimationFrame((_timestamp) => {\n        checkIntersection(IntersectionParams);\n      });\n    }\n  });\n};\nfunction checkAllIntersection() {\n  for (const subIntersectionObserverId in subIntersectionObservers) {\n    checkIntersection(subIntersectionObservers[subIntersectionObserverId]);\n  }\n  requestAnimationFrameing = false;\n}\n// 添加节点相交查询\nexport function addIntersectionObserver(_ref) {\n  const { intersectionObserverId, options, relativeInfo, targetSelector } = _ref;\n\n  let targetNodeArr = [];\n  if (options.selectAll) {\n    targetNodeArr = document.querySelectorAll(targetSelector);\n  } else {\n    const targetNode = document.querySelector(targetSelector);\n    targetNodeArr = targetNode ? [targetNode] : [];\n  }\n  if (!targetNodeArr.length) {\n    console.warn(`\\u76EE\\u6807\\u8282\\u70B9${targetSelector}\\u672A\\u627E\\u5230\\uFF0C\\u5F53\\u524D\\u76D1\\u542C\\u672A\\u751F\\u6548`);\n  }\n  const relatives = [];\n  relativeInfo.forEach((info) => {\n    const { selector } = info;\n    const { margins } = info;\n\n    let node;\n    if (selector == null) {\n      node = null;\n    } else {\n      node = document.querySelector(selector);\n    }\n    if (node || selector == null) {\n      relatives.push({\n        node,\n        margins: formatMargins(margins),\n      });\n    } else {\n      console.warn(`\\u53C2\\u7167\\u8282\\u70B9${selector}\\u672A\\u627E\\u5230\\uFF0C\\u6B64\\u53C2\\u7167\\u8282\\u70B9\\u5C06\\u4F1A\\u88AB\\u5FFD\\u7565`);\n    }\n  });\n  if (!relatives.length) {\n    console.warn('未找到任何参照节点，当前监听未生效');\n  }\n  return handleIntersectionObserver(targetNodeArr, relatives, options.thresholds, options.initialRatio, intersectionObserverId);\n}\n\nexport function removeIntersectionObserver(intersectionObserverId) {\n  const len = intersectionObservers[intersectionObserverId];\n  for (let i = 0; i < len; i++) {\n    const subIntersectionObserverId = `${intersectionObserverId}@${i}`;\n    delete subIntersectionObservers[subIntersectionObserverId];\n  }\n  delete intersectionObservers[intersectionObserverId];\n}\n\nexport function scheduleIntersectionUpdate() {\n  if (!requestAnimationFrameing) {\n    requestAnimationFrame(() => {\n      requestAnimationFrameing = true;\n      checkAllIntersection();\n    });\n  }\n}\n","import { getCurrentPageImpl } from '@/framework/';\nimport trackerStore from '@/utils/trackerStore';\n\nexport default ({\n  setTrackerConfig: function setTrackerConfig(trackerConfig) {\n    trackerStore.trackerConfig = trackerConfig;\n  },\n  collectRemoteTrackerData: function collectRemoteTrackerData(eventCode, payload) {\n    getCurrentPageImpl().callRemote('bridge.$trackerAPI', 'collectTrackerData', getCurrentPageImpl().getId(), eventCode, payload);\n  },\n  reportRemoteTrackerData: function reportRemoteTrackerData(eventCode, payload) {\n    getCurrentPageImpl().callRemote('bridge.$trackerAPI', 'reportTrackerData', getCurrentPageImpl().getId(), eventCode, payload);\n  },\n});\n","const doc = document;\nconst win = window;\nfunction getNodeQuery(node, type) {\n  if (type === 'rect') {\n    const clientRect = node.getBoundingClientRect();\n    const rect = {};\n    // rect.left    // 节点的左边界坐标\n    // rect.right   // 节点的右边界坐标\n    // rect.top     // 节点的上边界坐标\n    // rect.bottom  // 节点的下边界坐标\n    // rect.width   // 节点的宽度\n    // rect.height  // 节点的高度\n    const rectProps = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n    for (let i = 0; i < rectProps.length; i++) {\n      if (clientRect[rectProps[i]] !== undefined) {\n        rect[rectProps[i]] = clientRect[rectProps[i]];\n      }\n    }\n    return rect;\n  } else if (type === 'scroll') {\n    return {\n      scrollTop: node.scrollTop,\n      scrollLeft: node.scrollLeft,\n    };\n  }\n}\n\nexport default function createSelectorQuery(actions, callback) {\n  const ret = [];\n  actions.forEach((action) => {\n    const { selector, type } = action;\n    const { value } = selector;\n    const selectorType = selector.type;\n\n    if (value === 'viewport') {\n      if (type === 'rect') {\n        ret.push({\n          width: win.innerWidth,\n          height: win.innerHeight,\n        });\n      } else if (type === 'scroll') {\n        ret.push({\n          scrollTop: win.pageYOffset,\n          scrollLeft: win.pageXOffset,\n        });\n      }\n    } else if (selectorType === 'all') {\n      const nodes = [].slice.call(doc.querySelectorAll(value), 0);\n      if (nodes.length) {\n        ret.push(nodes.map((node) => {\n          return getNodeQuery(node, type);\n        }));\n      } else {\n        ret.push(null);\n      }\n    } else {\n      const node = doc.querySelector(value);\n      if (node) {\n        ret.push(getNodeQuery(node, type));\n      } else {\n        ret.push(null);\n      }\n    }\n  });\n  callback(ret);\n}\n","export default ({\n  loadFontFace: function loadFontFace(data = {}, success, fail) {\n    const { family = '', source = '', desc = {} } = data;\n    const { fonts } = document;\n    if (fonts) {\n      const fontFace = new FontFace(family, source, desc);\n      fontFace.load().then((res) => {\n        success({ status: res.status });\n        fonts.add(fontFace);\n      }, () => {\n        fail({\n          status: fontFace.status,\n        });\n      });\n    } else {\n      if (!family || !source) {\n        fail({ status: 'error' });\n        return;\n      }\n      const style = document.createElement('style');\n      const node = `@font-face {font-family: \"${family}\"; src: ${source}; font-weight: ${desc.weight}; font-stretch: ${desc.stretch}; font-variant: ${desc.variant}; font-feature-setting:${desc.featureSetting}; unicode-range: ${desc.unicodeRange}; font-style: ${desc.style}; }`;\n      style.appendChild(document.createTextNode(node));\n      document.head.appendChild(style);\n      success({\n        status: 'loaded',\n      });\n    }\n  },\n});\n","import Nerv, { createNervClass } from '@/nerv';\nimport { createComponent, getCurrentPageImpl } from '@/framework/';\nimport callInternalAPI from '@/utils/callInternalAPI';\nimport callBridge from '@/utils/callBridge';\nimport TestMixin from '@/utils/TestMixin';\nimport trackTap from '@/utils/trackTap';\nimport { getPropsEvent } from '@/utils/eventReg';\nimport Button from '../shared/Button';\n\nconst FollowStatus = {\n  followed: 1,\n  userCancel: 2,\n  unknownError: 3,\n};\n\nconst AButton = createComponent({\n  name: 'button',\n})(createNervClass({\n  displayName: 'Button',\n  mixins: [\n    TestMixin,\n  ],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      hoverStartTime: 20,\n      hoverStayTime: 70,\n      hoverClass: 'a-button-active',\n    };\n  },\n  addFollow: function addFollow() {\n    const _props = this.props;\n    const { publicId } = _props;\n    const { onFollowLifestyle } = _props;\n    const { $mp } = _props;\n\n    callInternalAPI('addFollow', {\n      publicId,\n      sourceId: 'tinyApp',\n    }, (res) => {\n      const followed = res.success === 'true';\n      if (onFollowLifestyle) {\n        onFollowLifestyle($mp.getNormalizedEvent('follow', {\n          detail: {\n            followStatus: followed ? FollowStatus.followed : FollowStatus.unknownError,\n          },\n        }));\n      }\n      callBridge('toast', { content: followed ? '关注成功' : '关注失败' });\n    });\n  },\n  onButtonTap(e) {\n    const _this = this;\n\n    getPropsEvent.call(this, 'tap')(e);\n\n    const { formType, openType, appParameter, $mp } = this.props;\n    const { form } = this.context;\n\n    if (form) {\n      if (formType === 'submit') {\n        form.submit(this.props.$mp.getDataset());\n      } else if (formType === 'reset') {\n        form.reset();\n      }\n    }\n    if (openType === 'share') {\n      const page = getCurrentPageImpl();\n      if (page && page.publicInstance.onShareAppMessage) {\n        page.callRemote('self', 'startShare', $mp.getNormalizedEvent('share'));\n      }\n    }\n    if (openType === 'getAuthorize') {\n      const _props3 = this.props;\n      const { onGetAuthorize } = _props3;\n      const { onError } = _props3;\n      const { scope } = _props3;\n\n      if (!scope || typeof scope !== 'string') {\n        if (onError) {\n          onError($mp.getNormalizedEvent('error', {\n            detail: {\n              errorMessage: '请输入合法的scope',\n              type: 'getAuthorize',\n            },\n          }));\n        }\n      } else {\n        const scopes = scope.replace(/ /g, '').split(',');\n        callInternalAPI('getComponentAuth', {\n          scopeNicks: scopes,\n        }, (res) => {\n          if (res.error) {\n            if (onError) {\n              onError($mp.getNormalizedEvent('error', {\n                detail: {\n                  errorMessage: res.errorMessage || res.errorDesc,\n                  type: 'getAuthorize',\n                },\n              }));\n            }\n          } else if (onGetAuthorize) {\n            onGetAuthorize($mp.getNormalizedEvent('getAuthorize'));\n          }\n        });\n      }\n    }\n    if (openType === 'launchApp') {\n      callInternalAPI('launchApp', {\n        resultData: appParameter,\n      }, (res) => {\n        const { onError } = _this.props;\n\n        if (res.error) {\n          if (onError) {\n            onError($mp.getNormalizedEvent('error', {\n              detail: {\n                errorMessage: res.errorMessage,\n                type: 'launchApp',\n              },\n            }));\n          }\n        }\n      });\n    }\n    if (openType === 'contactShare') {\n      const _page = getCurrentPageImpl();\n      if (_page && _page.publicInstance.onShareAppMessage) {\n        _page.callRemote('self', 'shareToAlipayContact', $mp.getNormalizedEvent('share'));\n      }\n    }\n    // trackTap(this);\n    // this.logTestId();\n  },\n  render: function render() {\n    const { props } = this;\n\n    let { type } = props;\n    if (props.plain) {\n      type = 'ghost';\n    }\n\n    return Nerv.createElement(\n      Button,\n      {\n        id: props.id,\n        size: props.size,\n        activeStopPropagation: props.hoverStopPropagation,\n        activeClassName: props.hoverClass,\n        className: props.className,\n        style: props.style,\n        delayPressIn: props.hoverStartTime,\n        delayPressOut: props.hoverStayTime,\n        onClick: this.onButtonTap,\n        type,\n        disabled: props.disabled,\n        loading: props.loading,\n        ...props.$mp.getAriaProps(),\n      },\n      props.children,\n    );\n  },\n}));\n\nexport default AButton;\n","import Nerv, { createNervClass } from '@/nerv';\n\nimport { createComponent } from '@/framework/';\nimport { getPropsEvent } from '@/utils/eventReg';\nimport View from '../view/View';\nimport formMixin from '../form/mixin';\n\nconst CheckboxGroup = createComponent({\n  pure: false,\n  name: 'checkbox-group',\n})(createNervClass({\n  displayName: 'CheckboxGroup',\n  mixins: [formMixin],\n  getChildContext: function getChildContext() {\n    return {\n      checkboxGroup: this,\n    };\n  },\n\n  onChange(e) {\n    const { value2, value } = e.detail;\n\n    this.updateValue(value2, value);\n\n    // const event = this.props.$mp.getNormalizedEvent(e, {\n    //   detail: {\n    //     value: this.state.value,\n    //   },\n    // });\n\n    getPropsEvent.call(this, 'change')(e, {\n      detail: {\n        value: this.state.value,\n      },\n    });\n  },\n  updateValue(value, checked) {\n    const allValue = this.state.value && this.state.value || [];\n    if (checked && allValue.indexOf(value) === -1) {\n      allValue.push(value);\n    } else if (!checked) {\n      const index = allValue.indexOf(value);\n      if (index !== -1) {\n        allValue.splice(index, 1);\n      }\n    }\n    this.state.value = allValue;\n  },\n  render() {\n    const { ...rest } = this.props;\n    return Nerv.createElement(View, { ...rest, role: 'group' });\n  },\n}));\n\nexport default CheckboxGroup;\n","import Nerv, { createNervClass } from '@/nerv';\n\nimport { createComponent } from '@/framework/';\nimport { getPropsEvent } from '@/utils/eventReg';\nimport Checkbox from '../shared/Checkbox';\n\nexport default createComponent({\n  pure: false,\n  name: 'checkbox',\n})(createNervClass({\n  displayName: 'Checkbox',\n  // no formMixin, manage value by radio-group\n  statics: {\n    isFormControl: 1,\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      checked: false,\n      disabled: false,\n      value: '',\n      controlled: false,\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    const state = {\n      checked: !!this.props.checked,\n    };\n    const { context } = this;\n    const { checkboxGroup } = context;\n\n    if (checkboxGroup) {\n      checkboxGroup.updateValue(this.props.value, state.checked);\n    }\n    return state;\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    const { context } = this;\n    const { checkboxGroup } = context;\n\n    if (checkboxGroup) {\n      if (checkboxGroup.isResetting) {\n        const value = checkboxGroup.state.value || [];\n        this.setState({\n          checked: value.indexOf(this.props.value) !== -1,\n        });\n        return;\n      }\n    }\n    if (this.props.checked !== prevProps.checked) {\n      this.setState({\n        checked: this.props.checked,\n      });\n      if (checkboxGroup) {\n        checkboxGroup.updateValue(this.props.value, this.props.checked);\n      }\n    }\n  },\n  componentWillUnmount() {\n    const { checkboxGroup } = this.context;\n\n    if (checkboxGroup) {\n      let index1 = -1;\n      if (checkboxGroup.initialValue) {\n        index1 = checkboxGroup.initialValue.indexOf(this.props.value);\n      }\n      if (index1 !== -1) {\n        checkboxGroup.initialValue.splice(index1, 1);\n      }\n      const index2 = checkboxGroup.state.value && checkboxGroup.state.value.indexOf(this.props.value);\n      if (index2 !== -1 && checkboxGroup.state.value) {\n        checkboxGroup.state.value.splice(index2, 1);\n      }\n    }\n  },\n  onClick() {\n    if (!this.props.disabled) {\n      this.onChange({ target: { checked: !this.state.checked } });\n    }\n  },\n  onChange(e) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n    const { controlled } = this.props;\n    const { checked } = e.target;\n\n    if (!controlled) {\n      this.setState({\n        checked,\n      });\n    }\n    const { context } = this;\n    if (context.checkboxGroup) {\n      e.detail = {\n        value: checked,\n        value2: this.props.value,\n      };\n      context.checkboxGroup.onChange(e);\n    }\n\n    // const event = this.props.$mp.getNormalizedEvent(e, {\n    //   detail: {\n    //     value: checked,\n    //   },\n    // });\n    getPropsEvent.call(this, 'change')(e, {\n      detail: {\n        value: checked,\n      },\n    });\n  },\n\n  render() {\n    const { disabled, className, style, id, controlled, color } = this.props;\n\n    const checked = controlled ? this.props.checked : this.state.checked;\n\n    return Nerv.createElement(Checkbox, {\n      prefixCls: 'a-checkbox',\n      className,\n      id,\n      style,\n      checked,\n      disabled,\n      onChange: this.onChange,\n      color,\n    });\n  },\n}));\n","import formMixin from '@/form/mixin';\n\nexport default formMixin;\n","import Nerv from '@/nerv';\nimport { createComponent } from '@/framework/';\nimport Loading from '../shared/Loading';\nimport Icon from '../shared/Icon';\n\nexport default createComponent({\n  name: 'icon',\n})((props) => {\n  const { $mp, className, style, id, type, mode, ...otherProps } = props;\n\n  return Nerv.createElement(\n    'span',\n    { className, ...$mp && $mp.getAriaProps(), style: { ...style }, id },\n    type === 'loading' ? Nerv.createElement(Loading, { mode }) : Nerv.createElement(Icon, { type, ...otherProps }),\n  );\n});\n","import Nerv, { createNervClass } from '@/nerv';\nimport { createComponent } from '@/framework/';\nimport View from '../view/View';\nimport modeStyle from './modeStyle';\n\nconst ImageTag = 'img';\nconst widthFixStyle = {\n  visibility: 'hidden',\n  width: '100%',\n};\n\nexport default createComponent({\n  name: 'image',\n})(createNervClass({\n  displayName: 'Image',\n  getInitialState() {\n    return {\n      lazyLoaded: !this.props.lazyLoad,\n      loaded: false,\n    };\n  },\n  getDefaultProps() {\n    return {\n      mode: 'scaleToFill',\n      lazyLoad: false,\n    };\n  },\n  componentDidMount() {\n    if (this.state.lazyLoaded) {\n      this.initImg();\n      this.updateSrc();\n    }\n  },\n  componentDidUpdate(prevProps) {\n    if (this.state.lazyLoaded) {\n      this.initImg();\n      if (this.props.src !== prevProps.src || this.props.lazyLoad && !this.lazyLoaded) {\n        this.lazyLoaded = true;\n        this.updateSrc();\n      }\n    }\n  },\n  shouldOnLoad() {\n    return this.props.defaultSource || this.props.onLoad;\n  },\n  shouldOnError() {\n    return this.props.defaultSource || this.props.onError;\n  },\n  initImg() {\n    const { onLoad, onError, defaultSource, mode } = this.props;\n\n    if (mode === 'widthFix' || !onLoad && !onError && !defaultSource) {\n      if (this.img) {\n        this.img.onload = null;\n        this.img.onerror = null;\n        this.img = null;\n      }\n\n      return;\n    }\n    const img = this.img = this.img || new Image();\n    if (this.shouldOnLoad() && !img.onload) {\n      img.onload = this.onLoad;\n    }\n    if (this.shouldOnError() && !img.onerror) {\n      img.onerror = this.onError;\n    }\n  },\n  updateSrc() {\n    if (this.props.src && this.img) {\n      this.img.src = this.props.$mp.getNormalizedSrc(this.props.src);\n    }\n  },\n  onLoad(e) {\n    // replace defaultSource with src\n    if (this.props.defaultSource) {\n      this.setState({\n        loaded: true,\n      });\n    }\n    if (this.props.onLoad) {\n      const img = e.target;\n      this.props.onLoad(this.props.$mp.getNormalizedEvent('load', {\n        detail: {\n          width: img.naturalWidth,\n          height: img.naturalHeight,\n        },\n      }));\n    }\n    document.dispatchEvent(new CustomEvent('pageReRender', {}));\n  },\n  onError() {\n    if (this.props.defaultSource) {\n      this.setState({\n        loaded: false,\n      });\n    }\n    if (this.props.onError) {\n      this.props.onError(this.props.$mp.getNormalizedEvent('error', {\n        detail: {\n          errMsg: 'unknown error',\n        },\n      }));\n    }\n  },\n  onImageLazyLoad() {\n    const { lazyLoaded } = this.state;\n\n    if (!lazyLoaded) {\n      this.setState({\n        lazyLoaded: true,\n      });\n    }\n  },\n  render() {\n    const { className, id, mode, alt, $mp, onTap, onLongTap, onTouchStart, onTouchMove, onTouchCancel, onTouchEnd, lazyLoad } = this.props;\n    let { src, defaultSource, style } = this.props;\n    const { lazyLoaded } = this.state;\n\n    src = $mp.getNormalizedSrc(src);\n    defaultSource = defaultSource && $mp.getNormalizedSrc(defaultSource);\n    let onAppearProp = {};\n    if (lazyLoad && !lazyLoaded) {\n      onAppearProp = {\n        onAppear: this.onImageLazyLoad,\n        appearOffset: 50,\n      };\n    }\n    style = { backgroundImage: src && lazyLoaded ? defaultSource ? `url(${this.state.loaded ? src : defaultSource})` : `url(${src})` : undefined, ...style, ...modeStyle[mode] };\n    // must has data props, or image onTap lose data\n    let img = null;\n    if (mode === 'widthFix' && lazyLoaded) {\n      img = Nerv.createElement(ImageTag, {\n        src,\n        style: widthFixStyle,\n        onLoad: this.shouldOnLoad() ? this.onLoad : undefined,\n        onError: this.shouldOnError() ? this.onError : undefined,\n      });\n    }\n    return Nerv.createElement(\n      View,\n      {\n        className,\n        id,\n        'aria-label': alt,\n        $mp,\n        style,\n        onTap,\n        onLongTap,\n        onTouchStart,\n        onTouchMove,\n        onTouchCancel,\n        onTouchEnd,\n        ...$mp.getAriaProps(),\n        ...$mp.getDataProps(),\n        ...onAppearProp,\n      },\n      img,\n    );\n  },\n}));\n","export default {\n  scaleToFill: {\n    backgroundSize: '100% 100%',\n  },\n  aspectFit: {\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  },\n  widthFix: {\n    backgroundSize: 'contain',\n    height: 'auto',\n  },\n  aspectFill: {\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  top: {\n    backgroundPosition: 'top',\n  },\n  bottom: {\n    backgroundPosition: 'bottom',\n  },\n  center: {\n    backgroundPosition: 'center',\n  },\n  left: {\n    backgroundPosition: 'center left',\n  },\n  right: {\n    backgroundPosition: 'center right',\n  },\n  'top left': {\n    backgroundPosition: 'top left',\n  },\n  'top right': {\n    backgroundPosition: 'top right',\n  },\n  'bottom left': {\n    backgroundPosition: 'bottom left',\n  },\n  'bottom right': {\n    backgroundPosition: 'bottom right',\n  },\n};\n","import './index.less';\n\nimport Button from './button';\n// import Canvas from './canvas';\nimport CheckBox from './checkbox';\nimport CheckBoxGroup from './checkbox-group';\nimport Icon from './icon';\nimport Image from './image';\nimport Input from './input';\nimport Label from './label';\n// import Picker from './picker';\nimport Radio from './radio';\nimport RadioGroup from './radio-group';\nimport ScrollView from './scroll-view';\nimport Text from './text';\nimport View from './view';\n\nexport {\n  Button,\n  // Canvas,\n  CheckBox,\n  CheckBoxGroup,\n  Icon,\n  Image,\n  Input,\n  Label,\n  // Picker,\n  Radio,\n  RadioGroup,\n  ScrollView,\n  Text,\n  View,\n};\n","// extracted by mini-css-extract-plugin","import Nerv, { createNervClass } from '@/nerv';\n\nimport classnames from 'classnames';\nimport focusInput from '@/utils/focusInput';\nimport callBridge from '@/utils/callBridge';\nimport { compareSystemVersion, isAndroid, isIDE, isIOS, isNativeComponent } from '@/utils/system';\nimport rgba2Color from '@/utils/rgba2Color';\nimport addEvents from '@/utils/addEvents';\nimport callInternalAPI from '@/utils/callInternalAPI';\nimport { createComponent } from '@/framework/';\nimport formMixin from '../form/mixin';\n\nconst g = self;\nlet id = 0;\nconst cacheInputId = {};\nconst prefixCls = 'a-input';\nconst g10138 = compareSystemVersion('10.1.38') >= 0;\n\nconst Input = createComponent({\n  name: 'input',\n  pure: false,\n})(createNervClass({\n  displayName: 'Input',\n  mixins: [formMixin],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      value: '',\n      type: 'text',\n      password: false,\n      placeholder: '',\n      disabled: false,\n      maxlength: 140,\n      focus: false,\n      confirmType: 'done',\n      confirmHold: false,\n      selectionStart: -1,\n      selectionEnd: -1,\n      controlled: false,\n      randomNumber: false,\n      enableNative: true,\n      enableNewNativeInput: false,\n    };\n  },\n  getInitialState: function getInitialState() {\n    this.compositionend = true;\n    this.useNewInput = false;\n    const { focus, enableNative, enableNewNativeInput } = this.props;\n    // 10.1.20 ios支持input native化\n    // 10.1.22 android支持input native化\n    // 财富客户端 nebulaMng基线 10.1.15\n    // 高德客户端 nebulaMng基线 10.1.20\n    // 非支付宝客户端都不启用native 键盘\n\n    if (true) {\n      this.supportNative = enableNative === true && !isIDE && isNativeComponent;\n      if (g10138 && this.supportNative && enableNewNativeInput) {\n        this.useNewInput = !isAndroid;\n      }\n    } else {}\n    return {\n      focused: focus,\n      compositionValue: '',\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    if (this.useNewInput) {\n      // android bug\n      if (isAndroid && !cacheInputId[this.getId()]) {\n        this.readyForRender = false;\n        this.detachInputReady = addEvents(document, {\n          'nbcomponent.canrender': this.onNativeReady,\n        });\n      } else {\n        this.readyForRender = true;\n        this.renderNewInput(this.state.focused);\n      }\n      this.detachEvents = addEvents(document, {\n        'nbcomponent.input.input': this.onNewInputEvent,\n        'nbcomponent.input.focus': this.onNewInputEvent,\n        'nbcomponent.input.blur': this.onNewInputEvent,\n        'nbcomponent.input.keydown': this.onNewInputEvent,\n      });\n    } else {\n      if (this.state.focused) {\n        this.focus(true);\n      }\n      if (this.input) {\n        // ios can not use react event\n        this.inputEvents = addEvents(this.input, {\n          keydown: this.onKeyDown,\n        });\n      }\n    }\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    const { focus, syncInput } = this.props;\n\n    const needFocus = !!focus && !prevProps.focus && !this.state.focused;\n    if (this.useNewInput) {\n      this.renderNewInput(needFocus);\n    } else {\n      // 新增隐藏属性 sync-input 当为true时可以在onInput等回调中执行native input同步web input的操作\n      if (isIOS && this.compositionend === true && syncInput && g._currentInput === this.input && g.AlipayH5Keyboad._getInputJsonWithElement) {\n        callInternalAPI('resetNativeKeyBoardInput', g.AlipayH5Keyboad._getInputJsonWithElement(g._currentInput));\n      }\n      if (g._currentInput === this.input && this.compositionend === true) {\n        const color = rgba2Color(window.getComputedStyle(this.container, null).color);\n        callInternalAPI('updateNativeKeyBoardInput', {\n          text: `${this.getCurrentValue()}`,\n          color,\n        });\n      }\n      if (needFocus) {\n        this.focus(false);\n      }\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.input && this.inputEvents) {\n      this.inputEvents.remove();\n    }\n    if (this.useNewInput) {\n      if (this.detachInputReady) {\n        this.detachInputReady.remove();\n      }\n      callBridge('NBComponent.remove', {\n        element: this.getId(),\n      });\n      this.detachEvents.remove();\n    }\n  },\n  onNewInputEvent: function onNewInputEvent(e) {\n    const { type } = e;\n    const _e$data = e.data;\n    const data = _e$data === undefined ? {} : _e$data;\n    const { element } = data;\n    const { value } = data;\n    const { marked } = data;\n    const { keyCode } = data;\n\n    if (element === this.getId() && type !== undefined) {\n      const realType = type.substring(18);\n      const { $mp, onFocus, onBlur, onInput, onConfirm, controlled } = this.props;\n\n      switch (realType) {\n        case 'focus':\n          g._MpActiveNativeElement = this.getId();\n          this.setState({\n            focused: true,\n          });\n          if (onFocus) {\n            onFocus($mp.getNormalizedEvent('focus', { detail: { value } }));\n          }\n          break;\n        case 'blur':\n          g._MpActiveNativeElement = undefined;\n          this.setState({\n            focused: false,\n          });\n          if (onBlur) {\n            onBlur($mp.getNormalizedEvent('blur', { detail: { value } }));\n          }\n          break;\n        case 'input':\n          if (onInput && marked !== 'Y') {\n            onInput($mp.getNormalizedEvent('input', { detail: { value } }));\n            if (!controlled) {\n              this.setState({\n                value,\n              });\n            }\n            this.setState({\n              compositionValue: '',\n            });\n          } else {\n            this.setState({\n              compositionValue: value,\n            });\n          }\n          break;\n        case 'keydown':\n          if (onConfirm && keyCode === 13) {\n            onConfirm($mp.getNormalizedEvent('confirm', { detail: { value } }));\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  },\n  renderNewInput: function renderNewInput(needFocus) {\n    const _this = this;\n\n    if (!this.readyForRender) {\n      return;\n    }\n    this.clearRenderDelay();\n    const _props4 = this.props;\n    const { type } = _props4;\n    const { password } = _props4;\n    const { disabled } = _props4;\n    const { maxlength } = _props4;\n    const { confirmType } = _props4;\n    const { confirmHold } = _props4;\n    const { selectionStart } = _props4;\n    const { selectionEnd } = _props4;\n    const { randomNumber } = _props4;\n    const { cursor } = _props4;\n\n    const value = this.getCurrentValue();\n    const computedStyle = window.getComputedStyle(this.input, null);\n    callBridge('NBComponent.render', {\n      element: this.getId(),\n      data: {\n        tagName: 'input',\n        position: 'static',\n        placeholder: '',\n        type: password ? 'password' : 'text',\n        keyboard: type,\n        value,\n        color: computedStyle.color,\n        disabled,\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        lineHeight: computedStyle.lineHeight,\n        maxlength,\n        canPaste: true,\n        textAlign: computedStyle.textAlign,\n        selectionStart,\n        selectionEnd,\n        returnType: confirmType,\n        canReturn: confirmHold === true ? 'N' : 'Y',\n        randomNumber: randomNumber === true ? 'Y' : 'N',\n        cursor,\n      },\n    }, (e) => {\n      if (e.success && needFocus) {\n        callBridge('NBComponent.sendMessage', {\n          actionType: 'focus',\n          element: _this.getId(),\n        });\n      }\n    });\n  },\n  onInput: function onInput(e) {\n    const _props5 = this.props;\n    const { onInput } = _props5;\n    const { controlled } = _props5;\n    const { $mp } = _props5;\n\n    const { value } = e.target;\n    // 如果native的键盘  event会带marked属性，用于告知是否是中间态\n    if (this.supportNative && isIOS) {\n      this.compositionend = e.nativeEvent.marked !== true;\n    }\n    if (onInput && this.compositionend === true) {\n      onInput($mp.getNormalizedEvent('input', {\n        detail: { value },\n      }));\n    }\n    if (!controlled) {\n      this.setState({\n        value,\n      });\n    }\n  },\n  onFocus: function onFocus() {\n    const _props6 = this.props;\n    const { onFocus } = _props6;\n    const { $mp } = _props6;\n\n    const value = this.getCurrentValue();\n    this.setState({\n      focused: true,\n    });\n    if (onFocus) {\n      onFocus($mp.getNormalizedEvent('focus', {\n        detail: { value },\n      }));\n    }\n  },\n  onBlur: function onBlur(e) {\n    const _props7 = this.props;\n    const { password } = _props7;\n    const { type } = _props7;\n    // ios 非password 都支持native化 android只有text支持\n\n    if (!password && this.supportNative && (isIOS || !isIOS && type === 'text')) {\n      if (e.nativeEvent.simulated) {\n        this.blur();\n      }\n    } else {\n      this.blur();\n    }\n  },\n  blur: function blur() {\n    const _props8 = this.props;\n    const { onBlur } = _props8;\n    const { $mp } = _props8;\n\n    const value = this.getCurrentValue();\n    this.setState({\n      focused: false,\n    });\n    if (onBlur) {\n      onBlur($mp.getNormalizedEvent('blur', {\n        detail: { value },\n      }));\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    const _props9 = this.props;\n    const { onConfirm } = _props9;\n    const { $mp } = _props9;\n\n    if (onConfirm && (e.keyCode === 13 || e.data && e.data.keyCode === 13)) {\n      onConfirm($mp.getNormalizedEvent('confirm', {\n        detail: { value: e.target.value },\n      }));\n    }\n  },\n  focus: function focus() {\n    const inputFocus4Android = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const { disabled } = this.props;\n\n    if (!disabled && this.input) {\n      focusInput(this.input, inputFocus4Android, this.supportNative);\n    }\n  },\n  saveContainer: function saveContainer(container) {\n    this.container = container;\n  },\n  saveInput: function saveInput(input) {\n    this.input = input;\n  },\n  handleComposition: function handleComposition(e) {\n    if (e.type === 'compositionend') {\n      this.compositionend = true;\n      const _props10 = this.props;\n      const { onInput } = _props10;\n      const { $mp } = _props10;\n\n      if (onInput) {\n        onInput($mp.getNormalizedEvent('input', {\n          detail: { value: e.target.value },\n        }));\n      }\n    } else {\n      this.compositionend = false;\n    }\n  },\n  getId: function getId() {\n    if (this.id) {\n      return this.id;\n    }\n    this.id = this.props.id || `mp_input_${++id}`;\n    return this.id;\n  },\n  onNativeReady: function onNativeReady(e) {\n    if (!e || e.elementid === this.getId()) {\n      this.readyForRender = true;\n      cacheInputId[this.getId()] = true;\n      this.renderNewInput();\n    }\n  },\n  clearRenderDelay: function clearRenderDelay() {\n    if (this.detachInputReady) {\n      this.detachInputReady.remove();\n      this.detachInputReady = null;\n    }\n  },\n  render: function render() {\n    let _classNames;\n\n    const _props11 = this.props;\n    const { placeholder } = _props11;\n    const { type } = _props11;\n    const { password } = _props11;\n    const { disabled } = _props11;\n    const { maxlength } = _props11;\n    const { className } = _props11;\n    const { style } = _props11;\n    const { id } = _props11;\n    const { placeholderStyle } = _props11;\n    const { placeholderClass } = _props11;\n    const { confirmType } = _props11;\n    const { confirmHold } = _props11;\n    const { selectionStart } = _props11;\n    const { selectionEnd } = _props11;\n    const { randomNumber } = _props11;\n    const { cursor } = _props11;\n    const { $mp } = _props11;\n\n    const value = this.getCurrentValue();\n    const { compositionValue } = this.state;\n\n    const kbParams = {\n      type: 'text',\n      // can not use onChange, react will fire onChange when enter on android\n      // ios can not trigger onchange when type=digit\n      onInput: this.onInput,\n    };\n    /* text, number, idcard, digit */\n    if (password) {\n      kbParams.type = 'password';\n    } else if (type === 'number' || type === 'digit' || type === 'idcard') {\n      kbParams['data-keyboard'] = type;\n      kbParams['data-randomnumber'] = randomNumber === true ? 'Y' : 'N';\n    }\n    if (!this.supportNative && kbParams.type === 'text' && isIOS) {\n      kbParams.onCompositionStart = this.handleComposition;\n      kbParams.onCompositionEnd = this.handleComposition;\n    }\n    // input native化\n    // ios 非password 都支持native化 android只有text支持\n    if (!password && this.supportNative && (isIOS || !isIOS && kbParams.type === 'text')) {\n      kbParams['data-keyboard'] = type;\n      kbParams['data-selection-start'] = selectionStart;\n      kbParams['data-selection-end'] = selectionEnd;\n      kbParams['data-return-type'] = confirmType;\n      kbParams['data-return'] = confirmHold === true ? 'N' : 'Y';\n      if (cursor !== undefined) {\n        kbParams['data-cursor'] = cursor;\n      }\n    }\n    const placeholderCls = classnames((_classNames = {}, _classNames[`${prefixCls}-placeholder`] = true, _classNames[placeholderClass] = !!placeholderClass, _classNames));\n    return Nerv.createElement(\n      'div',\n      { className, id, style, ref: this.saveContainer },\n      Nerv.createElement(\n        'div',\n        { className: `${prefixCls}-wrap` },\n        (typeof value === 'string' && value.length === 0 || !value && value !== 0) && compositionValue === '' && placeholder && Nerv.createElement(\n          'div',\n          { className: placeholderCls, style: placeholderStyle ? $mp.getNormalizedStyle(placeholderStyle) : {} },\n          Nerv.createElement(\n            'span',\n            null,\n            placeholder,\n          ),\n        ),\n        this.useNewInput ? Nerv.createElement('input', { ref: this.saveInput,\n          style: {\n            position: 'absolute',\n            visibility: 'hidden',\n            zIndex: 0,\n          },\n          className: `${prefixCls}-content` }) : null,\n        this.useNewInput ? Nerv.createElement(\n          'object',\n          { className: `${prefixCls}-content`, id: this.getId(), type: 'application/view' },\n          Nerv.createElement('param', { name: 'type', value: 'input' }),\n          Nerv.createElement('param', { name: 'id', value: this.getId() }),\n        ) : Nerv.createElement('input', { ref: this.saveInput, className: `${prefixCls}-content`, value, disabled, onFocus: this.onFocus, onBlur: this.onBlur, maxLength: maxlength, ...kbParams }),\n      ),\n    );\n  },\n}));\n\nexport default Input;\n","import Nerv, { createNervClass } from '@/nerv';\nimport { createComponent } from '@/framework/';\nimport { getPropsEvent } from '@/utils/eventReg';\n\nexport default createComponent({\n  pure: false,\n  name: 'label',\n})(createNervClass({\n  onClick(e) {\n    const forProp = this.props.for;\n\n    if (forProp) {\n      const input = document.querySelector(`#${forProp} input,#${forProp} textarea`);\n      if (input) {\n        input.click();\n        input.focus();\n      }\n    }\n\n    getPropsEvent.call(this, 'tap')(e);\n  },\n  render() {\n    const { $mp, children, ...rest } = this.props;\n    return (\n      <label\n        {...rest}\n        onClick={this.onClick}\n      >\n        {children}\n      </label>\n    );\n  },\n}));\n","import Nerv, { createNervClass } from '@/nerv';\nimport { createComponent } from '@/framework/';\nimport formMixin from '../form/mixin';\nimport View from '../view/View';\n\nconst RadioGroup = createComponent({\n  pure: false,\n  name: 'radio-group',\n})(createNervClass({\n  displayName: 'RadioGroup',\n  mixins: [formMixin],\n  getChildContext: function getChildContext() {\n    return {\n      radioGroup: this,\n    };\n  },\n  getInitialState: function getInitialState() {\n    this.radioListeners = [];\n  },\n  updateValue: function updateValue(value) {\n    this.state.value = value;\n  },\n  onChange: function onChange(e) {\n    this.state.value = e.detail.value;\n    this.updateFormValue();\n    this.radioListeners.forEach((fn) => {\n      return fn();\n    });\n    if (this.props.onChange) {\n      this.props.onChange(this.props.$mp.getNormalizedEvent('change', {\n        detail: {\n          value: this.state.value,\n        },\n      }));\n    }\n  },\n  render: function render() {\n    return Nerv.createElement(View, { ...this.props, role: 'radiogroup' });\n  },\n}));\n\nexport default RadioGroup;\n","import Nerv, { createNervClass } from '@/nerv';\nimport { createComponent } from '@/framework/';\nimport Checkbox from '../shared/Checkbox';\n\nconst Radio = createComponent({\n  name: 'radio',\n  pure: false,\n})(createNervClass({\n  displayName: 'Radio',\n  // no formMixin, manage value by checkbox-group\n  statics: {\n    isFormControl: 1,\n  },\n  getDefaultProps() {\n    return {\n      checked: false,\n      disabled: false,\n      value: '',\n    };\n  },\n\n  getInitialState() {\n    const state = {\n      checked: !!this.props.checked,\n    };\n    const { context } = this;\n    const { radioGroup } = context;\n\n    if (radioGroup) {\n      radioGroup.radioListeners.push(this.onGroupNotify);\n      if (state.checked) {\n        radioGroup.updateValue(this.props.value);\n      }\n    }\n    return state;\n  },\n\n  componentDidUpdate(prevProps) {\n    const { context } = this;\n    const { radioGroup } = context;\n\n    if (radioGroup) {\n      if (radioGroup.isResetting) {\n        this.setState({\n          checked: this.props.value === radioGroup.state.value,\n        });\n        return;\n      }\n    }\n    if (this.props.checked !== prevProps.checked) {\n      this.setState({\n        checked: this.props.checked,\n      });\n      if (radioGroup && this.props.checked) {\n        radioGroup.updateValue(this.props.value);\n      }\n    }\n  },\n  componentWillUnmount() {\n    const { context } = this;\n    const { radioGroup } = context;\n\n    if (radioGroup) {\n      const index = radioGroup.radioListeners.indexOf(this.onGroupNotify);\n      if (index !== -1) {\n        radioGroup.radioListeners.splice(index, 1);\n      }\n    }\n  },\n  onGroupNotify() {\n    const { context } = this;\n    const { radioGroup } = context;\n\n    const shouldChecked = this.props.value === radioGroup.state.value;\n    if (shouldChecked !== this.state.checked) {\n      this.setState({\n        checked: shouldChecked,\n      });\n    }\n  },\n  onClick() {\n    if (!this.state.checked && !this.props.disabled) {\n      this.onChange({\n        target: {\n          checked: true,\n        },\n      });\n    }\n  },\n  onChange(e) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n    const { checked } = e.target;\n\n    if (checked) {\n      this.setState({\n        checked: e.target.checked,\n      });\n      const { context } = this;\n      if (context.radioGroup) {\n        context.radioGroup.onChange({\n          detail: {\n            value: this.props.value,\n            checked,\n          },\n        });\n      }\n    }\n  },\n  render() {\n    const { disabled, className = '', id, style, color } = this.props;\n    const { checked } = this.state;\n\n    return (\n      <Checkbox\n        id={id}\n        type=\"radio\"\n        prefixCls=\"a-radio\"\n        style={style}\n        className={className}\n        checked={checked}\n        disabled={disabled}\n        onChange={this.onChange}\n        color={color}\n      />\n    );\n  },\n}));\n\nexport default Radio;\n","import Nerv, { createNervClass, findDOMNode } from '@/nerv';\nimport { createComponent, getCurrentPageImpl } from '@/framework/';\nimport throttle from '@/utils/throttle';\nimport addEvents from '@/utils/addEvents';\nimport { isIOS } from '@/utils/system';\nimport supportsPassive from '@/utils/supportsPassive';\n\nfunction easeInOut(currentTime, start, change, duration) {\n  currentTime /= duration / 2;\n  if (currentTime < 1) {\n    return change / 2 * currentTime * currentTime + start;\n  }\n  currentTime -= 1;\n  return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;\n}\nconst BASE_SCROLL_DURATION = 1;\nconst STATE = {\n  STOPPED: 0,\n  TRIGGERED: 1,\n};\nconst defaultStyle = {\n  overflowY: 'hidden',\n  overflowX: 'hidden',\n  WebkitOverflowScrolling: 'touch',\n};\nconst styles = {\n  scrollX: {\n    overflowY: 'hidden',\n    overflowX: 'auto',\n  },\n  scrollY: {\n    overflowX: 'hidden',\n    overflowY: 'auto',\n  },\n};\nconst ScrollView = createComponent({\n  pure: false,\n  name: 'scroll-view',\n})(createNervClass({\n  displayName: 'ScrollView',\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scrollX: false,\n      scrollY: false,\n      upperThreshold: 50,\n      lowerThreshold: 50,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWithAnimation: false,\n      enableBackToTop: false,\n      trapScroll: false,\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    const { enableBackToTop, scrollY } = this.props;\n\n    this.onScroll = throttle(this.onScroll, 16);\n    this._xUpperState = STATE.TRIGGERED;\n    this._xLowerState = STATE.STOPPED;\n    this._yUpperState = STATE.TRIGGERED;\n    this._yLowerState = STATE.STOPPED;\n    this.componentDidUpdate({});\n    if (enableBackToTop && scrollY) {\n      const event = isIOS ? 'statusBarClick' : 'titleClick';\n      this.documentEvents = addEvents(document, { [event]: this.scrollToTop });\n    }\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    this.bindEvents();\n    const sv = this.scrollView;\n    const { scrollLeft, scrollTop, scrollWithAnimation, scrollX, scrollY, scrollIntoView } = this.props;\n\n    if (!scrollX && !scrollY) {\n      return;\n    }\n    // scrollIntoView has High priority vs scrollLeft / scrollTop\n    if (scrollIntoView && prevProps.scrollIntoView !== scrollIntoView) {\n      const page = getCurrentPageImpl();\n      const scrollIntoViewComponent = findDOMNode(page.refComponents[scrollIntoView]);\n      if (scrollIntoViewComponent) {\n        const boundingRect = scrollIntoViewComponent.getBoundingClientRect();\n        const containerRect = sv.getBoundingClientRect();\n        if (scrollX) {\n          // use Animation\n          if (scrollWithAnimation) {\n            this.ScrollWithAnimationFn(sv, Math.max(sv.scrollLeft + boundingRect.left - containerRect.left, 0), false);\n          } else {\n            sv.scrollLeft = Math.max(sv.scrollLeft + boundingRect.left - containerRect.left, 0);\n          }\n        }\n        if (scrollY) {\n          if (scrollWithAnimation) {\n            this.ScrollWithAnimationFn(sv, Math.max(sv.scrollTop + boundingRect.top - containerRect.top, 0), true);\n          } else {\n            sv.scrollTop = Math.max(sv.scrollTop + boundingRect.top - containerRect.top, 0);\n          }\n        }\n      }\n    } else {\n      if (scrollX && scrollLeft !== undefined && prevProps.scrollLeft !== scrollLeft) {\n        // use Animation\n        if (scrollWithAnimation) {\n          this.ScrollWithAnimationFn(sv, scrollLeft, false);\n        } else {\n          sv.scrollLeft = scrollLeft;\n        }\n      }\n      if (scrollY && scrollTop !== undefined && prevProps.scrollTop !== scrollTop) {\n        if (scrollWithAnimation) {\n          this.ScrollWithAnimationFn(sv, scrollTop, true);\n        } else {\n          sv.scrollTop = scrollTop;\n        }\n      }\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.documentEvents) {\n      this.documentEvents.remove();\n    }\n    this.bindEvents({});\n  },\n  bindEvents: function bindEvents(props) {\n    const { scrollY, scrollX } = props || this.props;\n\n    if (scrollX || scrollY) {\n      if (!this.__binded) {\n        this.__binded = true;\n        this.scrollView.addEventListener('scroll', this.onScroll, supportsPassive ? { passive: true } : false);\n      }\n    } else if (this.__binded) {\n      this.__binded = false;\n      this.scrollView.removeEventListener('scroll', this.onScroll);\n    }\n  },\n  scrollToTop: function scrollToTop() {\n    const { scrollView } = this;\n\n    if (scrollView) {\n      scrollView.scrollTop = 0;\n      const offset = { x: scrollView.scrollLeft, y: scrollView.scrollTop };\n      const contentSize = {\n        width: scrollView.scrollWidth,\n        height: scrollView.scrollHeight,\n      };\n\n      const { onScroll, $mp } = this.props;\n\n      if (onScroll) {\n        const scrollEvent = $mp.getNormalizedEvent('scroll', {\n          detail: {\n            scrollLeft: offset.x,\n            scrollTop: offset.y,\n            scrollWidth: contentSize.width,\n            scrollHeight: contentSize.height,\n          },\n        });\n        onScroll(scrollEvent);\n      }\n    }\n  },\n  runAnimationScroll: function runAnimationScroll(el, to, duration, prop) {\n    const start = el[prop];\n    const difference = to - start;\n    const increment = 10;\n    if (duration === 0) {\n      el[prop] = to;\n      return;\n    }\n    const animateScroll = function animateScroll(elapsedTime) {\n      elapsedTime += increment;\n      el[prop] = easeInOut(elapsedTime, start, difference, duration);\n      if (elapsedTime < duration) {\n        setTimeout(() => {\n          animateScroll(elapsedTime);\n        }, increment);\n      }\n    };\n    animateScroll(0);\n  },\n  ScrollWithAnimationFn: function ScrollWithAnimationFn(el, to, isTop) {\n    const { scrollAnimationDuration } = this.props;\n\n    const prop = isTop ? 'scrollTop' : 'scrollLeft';\n    const duration = scrollAnimationDuration && scrollAnimationDuration > 0 ? scrollAnimationDuration : Math.abs(to - el[prop]) * BASE_SCROLL_DURATION;\n    this.runAnimationScroll(el, to, duration, prop);\n  },\n  saveScrollView: function saveScrollView(scrollView) {\n    this.scrollView = scrollView;\n  },\n\n  // handle onScroll Event\n  onScroll: function onScroll() {\n    const { onScroll, onScrollToLower, onScrollToUpper, scrollX, scrollY, upperThreshold, lowerThreshold, trapScroll } = this.props;\n\n    // 根据clue报错，this.scrollView 可能为undefined\n    if (!this.scrollView) {\n      return;\n    }\n    const ev = this.scrollView;\n    const offset = { x: ev.scrollLeft, y: ev.scrollTop };\n    const contentSize = { width: ev.scrollWidth, height: ev.scrollHeight };\n    const layoutMeasurement = {\n      width: ev.clientWidth,\n      height: ev.clientHeight,\n    };\n    // note: 执行 scroll 时 offset.x/y 不一定以 1 来递增/减\n    // scrollY 和 scrollX 都为 false 的时候不滚动，和 wx 一致，方便移植\n    // scroll-y onScrollToUpper\n    if (scrollY && offset.y < upperThreshold) {\n      if (onScrollToUpper && this._yUpperState === STATE.STOPPED) {\n        this._yLowerState = STATE.STOPPED;\n        onScrollToUpper(this.props.$mp.getNormalizedEvent('scrollToUpper'));\n        this._yUpperState = STATE.TRIGGERED;\n      }\n    } else {\n      this._yUpperState = STATE.STOPPED;\n    }\n    // scroll-y onScrollToLower\n    if (contentSize.height - layoutMeasurement.height - offset.y < lowerThreshold) {\n      if (scrollY && onScrollToLower && this._yLowerState === STATE.STOPPED) {\n        this._yUpperState = STATE.STOPPED;\n        onScrollToLower(this.props.$mp.getNormalizedEvent('scrollToLower'));\n        this._yLowerState = STATE.TRIGGERED;\n      }\n    } else {\n      this._yLowerState = STATE.STOPPED;\n    }\n    // scroll-x onScrollToUpper\n    if (scrollX && offset.x < upperThreshold) {\n      if (onScrollToUpper && this._xUpperState === STATE.STOPPED) {\n        this._xLowerState = STATE.STOPPED;\n        onScrollToUpper(this.props.$mp.getNormalizedEvent('scrollToUpper'));\n        this._xUpperState = STATE.TRIGGERED;\n      }\n    } else {\n      this._xUpperState = STATE.STOPPED;\n    }\n    // scroll-x onScrollToLower\n    if (contentSize.width - layoutMeasurement.width - offset.x < lowerThreshold) {\n      if (scrollX && onScrollToLower && this._xLowerState === STATE.STOPPED) {\n        this._xUpperState = STATE.STOPPED;\n        onScrollToLower(this.props.$mp.getNormalizedEvent('scrollToLower'));\n        this._xLowerState = STATE.TRIGGERED;\n      }\n    } else {\n      this._xLowerState = STATE.STOPPED;\n    }\n    if (onScroll) {\n      if (trapScroll && scrollY) {\n        if (offset.y === 1) {\n          return;\n        } else if (offset.y + ev.offsetHeight === ev.scrollHeight - 1) {\n          return;\n        }\n      }\n      const scrollEvent = this.props.$mp.getNormalizedEvent('scroll', {\n        detail: {\n          scrollLeft: offset.x,\n          scrollTop: offset.y,\n          scrollWidth: contentSize.width,\n          scrollHeight: contentSize.height,\n        },\n      });\n      // this.last=this.last || Date.now();\n      // console.log('scroll',offset.x,Date.now()-this.last);\n      // this.last=Date.now();\n      onScroll(scrollEvent);\n    }\n    if (trapScroll && scrollY) {\n      if (offset.y === 0) {\n        ev.scrollTop = 1;\n      } else if (offset.y + ev.offsetHeight === ev.scrollHeight) {\n        ev.scrollTop = offset.y - 1;\n      }\n    }\n  },\n  render: function render() {\n    const { scrollX, scrollY, children, style, className, id } = this.props;\n\n    const scrollViewStyle = { ...defaultStyle, ...scrollX && styles.scrollX, ...scrollY && styles.scrollY, ...style };\n    return Nerv.createElement(\n      'div',\n      { id, className, ref: this.saveScrollView, style: scrollViewStyle },\n      children,\n    );\n  },\n}));\nexport default ScrollView;\n","import Nerv from '@/nerv';\nimport classnames from 'classnames';\nimport Loading from './Loading';\n\nconst prefixCls = 'a-button';\n\nclass Button extends Nerv.PureComponent {\n  render() {\n    const { children, className, type, size, disabled, loading, activeClassName, activeStopPropagation, onClick, delayPressIn, delayPressOut, $mp, ...restProps } = this.props;\n    const wrapCls = classnames({\n      [className]: true,\n      [`${prefixCls}-primary`]: type === 'primary',\n      [`${prefixCls}-ghost`]: type === 'ghost',\n      [`${prefixCls}-warn`]: type === 'warn',\n      [`${prefixCls}-small`]: size === 'mini',\n      [`${prefixCls}-disabled`]: disabled,\n    });\n\n    const delayProps = {};\n    if (delayPressIn) {\n      delayProps.delayPressIn = delayPressIn;\n    }\n    if (delayPressOut) {\n      delayProps.delayPressOut = delayPressOut;\n    }\n    // use div, button native is buggy @yiminghe\n    return Nerv.createElement(\n      'a',\n      { role: 'button',\n        className: wrapCls,\n        ...restProps,\n        onClick: disabled ? undefined : onClick,\n        'aria-disabled': disabled },\n      loading ? Nerv.createElement(Loading, { mode: type === 'primary' ? 'white' : '' }) : null,\n      children,\n    );\n  }\n}\n\nexport default Button;\n","import Nerv from '@/nerv';\nimport classnames from 'classnames';\nimport Icon from './Icon';\n\nexport default class Checkbox extends Nerv.PureComponent {\n  render() {\n    const { id, prefixCls, className = '', style, type = 'checkbox', disabled, checked, onChange, color } = this.props;\n\n    const wrapCls = classnames({\n      'a-shared-checkbox': true,\n      'a-shared-checkbox-disabled': disabled,\n      [className]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n    const colorProp = disabled ? { color: '#adadad' } : color ? { color } : {};\n\n    return (\n      <span className={wrapCls} style={style} id={id}>\n        <input type={type} disabled={disabled} className={`${prefixCls}-input`} checked={!!checked} onChange={onChange} />\n        {checked ? <Icon type={type === 'radio' ? 'success' : 'success_no_circle'} size={type === 'radio' ? 22 : 16} {...colorProp} /> : null}\n      </span>\n    );\n  }\n}\n","import Nerv from '@/nerv';\nimport createSprite from './createSprite';\n\nfunction Icon(props) {\n  const { size = 23, type, color } = props;\n\n  createSprite(type);\n  return (\n    <svg\n      className={`a-icon-svg a-icon-${type}`}\n      style={{\n        width: size,\n        height: size,\n        fill: color,\n      }}\n    >\n      <use xlinkHref={`#${type}`} />\n    </svg>\n  );\n}\n\nexport default Icon;\n","import Nerv from '@/nerv';\nimport classnames from 'classnames';\n\nconst prefix = 'a-loading';\n\nclass Loading extends Nerv.PureComponent {\n  render() {\n    const wrapCls = classnames({\n      [`${prefix}-indicator`]: true,\n      white: this.props.mode === 'white',\n    });\n    return (\n      <div\n        className={wrapCls}\n        aria-hidden\n      >\n        <div className={`${prefix}-item`} />\n        <div className={`${prefix}-item`} />\n        <div className={`${prefix}-item`} />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","const svgData = {\n  success: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65zm28.749-84.5a1 1 0 0 0-.71.295L58.363 80.654l-13.75-13.651a1 1 0 0 0-.705-.29H32.752L58.362 93.7l44.886-48.2h-9.5z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  info: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65zM52.812 48.75v4.063h8.126V97.5h-8.126v4.063H81.25V97.5h-8.125V48.75H52.812zM65 40.625a8.125 8.125 0 1 0 0-16.25 8.125 8.125 0 0 0 0 16.25z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  warn: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65zM60.521 29.25l.988 51.02a1 1 0 0 0 1 .98h6.066a1 1 0 0 0 1-.98l.967-50a1 1 0 0 0-1-1.02h-9.02zm5.02 70.417a5.958 5.958 0 1 0 0-11.917 5.958 5.958 0 0 0 0 11.917z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  waiting: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M67.684 68.171L67.766 26h-6.36l-1.888 46.562-.092.19.083.04-.011.275h.586l30.94 14.76 2.544-4.406-25.884-15.25zM65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  clear: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65zm9.692-65L90.83 48.863a6.846 6.846 0 0 0 .017-9.71c-2.696-2.695-7.024-2.668-9.71.017L65 55.308 48.863 39.17a6.846 6.846 0 0 0-9.71-.017c-2.695 2.696-2.668 7.024.017 9.71L55.308 65 39.17 81.137a6.846 6.846 0 0 0-.017 9.71c2.696 2.695 7.024 2.668 9.71-.017L65 74.692 81.137 90.83a6.846 6.846 0 0 0 9.71.017c2.695-2.696 2.668-7.024-.017-9.71L74.692 65z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  success_no_circle: {\n    size: '0 0 130 89',\n    content: '<svg width=\"130\" height=\"89\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M112.132 0H130L47.227 88.884 0 39.118h20.92a1 1 0 0 1 .704.29l25.603 25.418L111.423.295a1 1 0 0 1 .709-.295z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  download: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"evenodd\"><path d=\"M65 11.818c-29.325 0-53.182 23.857-53.182 53.182 0 29.325 23.857 53.182 53.182 53.182 29.325 0 53.182-23.857 53.182-53.182 0-29.325-23.857-53.182-53.182-53.182M65 130c-35.84 0-65-29.16-65-65S29.16 0 65 0s65 29.16 65 65-29.16 65-65 65\"/><path d=\"M59.728 75.224V35.909h11.819v39.315h13.212L65.335 94.649 45.909 75.224z\"/></g></svg>',\n  },\n  cancel: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M65 130c-35.899 0-65-29.101-65-65S29.101 0 65 0s65 29.101 65 65-29.101 65-65 65zm19.446-89.77L64.76 59.919l-19.432-19.43-4.896 4.896 19.431 19.43-19.631 19.632 4.896 4.896L64.76 69.711l19.887 19.888 4.897-4.896-19.888-19.888 19.687-19.688-4.896-4.896z\" fill-rule=\"evenodd\"/></svg>',\n  },\n  search: {\n    size: '0 0 130 130',\n    content: '<svg width=\"130\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M130 118.53l-11.364 11.468-31.138-31.32c-9.168 7.066-20.583 11.308-33.005 11.308C24.398 109.986 0 85.364 0 54.993 0 24.623 24.398 0 54.493 0c30.094 0 54.491 24.62 54.491 54.992 0 11.977-3.835 23.028-10.277 32.056L130 118.53zM54.493 13.334c-22.801 0-41.285 18.65-41.285 41.658 0 23.009 18.483 41.661 41.285 41.661 22.796 0 41.279-18.652 41.279-41.66 0-23.01-18.483-41.66-41.279-41.66z\" fill-rule=\"evenodd\" opacity=\".896\"/></svg>',\n  },\n  'contact-button': {\n    size: '0 0 101 101',\n    content: '<svg width=\"101\" height=\"101\" viewBox=\"0 0 101 101\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"evenodd\"><path d=\"M0 50.5C0 78.39 22.61 101 50.5 101S101 78.39 101 50.5 78.39 0 50.5 0 0 22.61 0 50.5z\" /><path d=\"M71.52 26H29.486c-4.132-.002-7.483 3.352-7.485 7.49v29.813c0 4.137 3.348 7.49 7.479 7.49h4.35v10.705a1.501 1.501 0 0 0 2.691.913 70.674 70.674 0 0 1 5.193-5.964c1.254-1.28 2.46-2.394 3.597-3.296 1.93-1.535 3.545-2.354 4.589-2.358l.181.006h.66l2.442.006c4.445.005 8.89.005 13.335 0l3.585-.006h1.413c4.134 0 7.485-3.356 7.485-7.496V33.49c0-4.137-3.349-7.49-7.48-7.49zM51.377 69.586c.012-.069.02-.137.023-.207a.475.475 0 0 1-.023.207zM76 63.303a4.491 4.491 0 0 1-4.488 4.491h-1.41l-3.585.003c-5.255.003-10.51.003-15.765 0l-.645-.003.015.015c-.071-.009-.14-.02-.216-.02-1.905 0-4.035 1.081-6.46 3.007-1.244.988-2.54 2.184-3.875 3.545a73.709 73.709 0 0 0-2.742 2.975v-8.022c0-.83-.672-1.503-1.5-1.503h-5.844A4.482 4.482 0 0 1 25 63.311V33.49a4.484 4.484 0 0 1 4.485-4.486h42.03A4.484 4.484 0 0 1 76 33.49v29.813z\" fill=\"#FFF\"/></g></svg>',\n  },\n};\nexport default svgData;\n","import svgData from './assets/svgData';\n\nlet sprite;\nconst SymbolObj = {};\nexport default function createSprite(id) {\n  if (id && !SymbolObj[id]) {\n    if (!sprite) {\n      const aIconSpriteNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      aIconSpriteNode.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n      aIconSpriteNode.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n      aIconSpriteNode.setAttribute('style', 'position: absolute; width: 0; height: 0');\n      aIconSpriteNode.setAttribute('id', 'a-icon-sprite-node');\n      sprite = document.body.insertBefore(aIconSpriteNode, document.body.firstChild || null);\n    }\n    const symbolNode = document.createElementNS('http://www.w3.org/2000/svg', 'symbol');\n    symbolNode.setAttribute('id', id);\n    symbolNode.setAttribute('viewBox', svgData[id].size);\n    const svgNode = new DOMParser().parseFromString(svgData[id].content, 'image/svg+xml').documentElement;\n    symbolNode.appendChild(svgNode);\n    sprite.appendChild(symbolNode);\n    // SymbolObj[params.id] not be undefined is OK.\n    SymbolObj[id] = 1;\n  }\n}\n","import text from '@/text';\n\nexport default text;\n","import Nerv, { createNervClass } from '@/nerv';\nimport View from '@/view/View';\nimport TestMixin from '@/utils/TestMixin';\n\nexport default createNervClass({\n  displayName: 'View',\n  mixins: [TestMixin],\n  render: function render() {\n    const { props } = this;\n\n    return Nerv.createElement(View, { ...props, userProps: props });\n  },\n});\n","import { createComponent } from '@/framework/';\nimport View from './View';\n\nexport default createComponent({\n  pure: false,\n  name: 'view',\n})(View);\n","let index = 0;\nfunction getImmutableValue(value2) {\n  let value = value2;\n  if (Array.isArray(value)) {\n    value = value.concat();\n  }\n  return value;\n}\nfunction getValueFromProps(props) {\n  return props[props.valueProp || 'value'];\n}\n\nexport default ({\n\n  statics: {\n    isFormControl: true,\n  },\n  getInitialState: function getInitialState() {\n    const { props } = this;\n\n    let value = getValueFromProps(props);\n    if (value === true && props.$mp.tagName === 'input') {\n      value = '';\n    }\n    this.name = this.props.name || `__unknown_for_control_${++index}`;\n    return {\n      value,\n    };\n  },\n  getCurrentValue: function getCurrentValue() {\n    if (this.props.controlled) {\n      return getValueFromProps(this.props);\n    }\n    return this.state.value;\n  },\n  componentDidMount: function componentDidMount() {\n    if (this.context.form) {\n      const value = this.getCurrentValue();\n      this.initialValue = getImmutableValue(value);\n      this.context.form.registerField(this.name, this);\n      this.context.form.setFieldValue(this.name, value);\n    }\n  },\n  componentWillReceiveProps(nextProps) {\n    if (this.props.controlled) {\n      return;\n    }\n    if (getValueFromProps(nextProps) !== getValueFromProps(this.props)) {\n      this.setState({\n        value: getValueFromProps(nextProps),\n      });\n    }\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    this.updateFormValue();\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.context.form) {\n      this.context.form.removeField(this.name);\n    }\n  },\n  updateFormValue: function updateFormValue() {\n    if (this.context.form) {\n      this.context.form.setFieldValue(this.name, this.getCurrentValue());\n    }\n  },\n  reset: function reset() {\n    const _this = this;\n\n    if (this.props.controlled) {\n      return;\n    }\n    this.isResetting = true;\n    this.setState({\n      value: getImmutableValue(this.initialValue),\n    }, () => {\n      _this.isResetting = false;\n    });\n  },\n});\n","const app = {\n  getCurrentPageImpl,\n};\n\nlet currentPage;\n\nfunction App() {\n  return app;\n}\n\nfunction setCurrentPageImpl(page) {\n  currentPage = page;\n}\n\nfunction getCurrentPageImpl() {\n  return currentPage;\n}\n\nfunction getCurrentPagesImpl() {\n  return [currentPage];\n}\n\nfunction getApp() {\n  return app;\n}\n\nfunction getAppImpl() {\n  return app;\n}\n\nfunction getCurrentPages() {\n  return null;\n}\n\nexport {\n  App,\n  setCurrentPageImpl,\n  getCurrentPageImpl,\n  getCurrentPagesImpl,\n  getApp,\n  getAppImpl,\n  getCurrentPages,\n};\n","import ComponentRegistry from '../ComponentRegistry';\nimport $global from '../common/global';\nimport CustomComponent from '../legacy/CustomComponent';\n\nexport default function Component(setupConfig) {\n  const { is } = setupConfig;\n\n  $global.componentsConfig[is] = {\n    system: setupConfig,\n  };\n\n  ComponentRegistry.registerComponent(is, () => {\n    return CustomComponent(is);\n  });\n}\n","import ComponentRegistry from './index';\n\nfunction getComponentClass(is) {\n  return ComponentRegistry.getComponent(is);\n}\n\nexport default getComponentClass;\n","export const componentRegistry = {};\nconst ComponentRegistry = {\n  registerComponent(is, factory) {\n    if (componentRegistry[is]) {\n      return;\n    }\n    componentRegistry[is] = factory;\n  },\n  getComponent(is) {\n    return componentRegistry[is] && componentRegistry[is]();\n  },\n};\n\nexport default ComponentRegistry;\n","import EventEmitter from '@/utils/EventEmitter';\n\nexport default new EventEmitter();\n","import PageRegistry from '../PageRegistry';\nimport $global from '../common/global';\nimport PageComponent from '../legacy/PageComponent';\n\nexport default function Page(setupConfig) {\n  const { pagePath, tabIndex } = setupConfig;\n\n  if (typeof tabIndex === 'number') {\n    $global.tabsConfig[pagePath] = tabIndex;\n  }\n  $global.pagesConfig[pagePath] = {\n    system: setupConfig,\n  };\n  PageRegistry.registerComponent(pagePath, () => {\n    return PageComponent;\n  });\n}\n","// app注册page\n\nconst pageRegistry = {};\n\nconst PageRegistry = {\n  registerComponent: function registerComponent(name, factory) {\n    // name即pagePath\n    // factory即() => RC\n    pageRegistry[name] = factory;\n  },\n  getComponent: function getComponent(name) {\n    return pageRegistry[name] && pageRegistry[name]();\n  },\n  getRunnable: function getRunnable(name) {\n    return PageRegistry.getComponent(name);\n  },\n};\n\nexport default PageRegistry;\n","const ua = navigator.swuserAgent || navigator.userAgent;\nconst ios = /iPhone|iPad/i;\n// android can change ua?!\n\nconst Platform = {\n  OS: 'web',\n  ide: ua.indexOf('IDE') > -1,\n  browser: ua.indexOf('Android') > -1 ? 'android' : ua.match(ios) ? 'ios' : 'unknown',\n};\n\nexport default Platform;\n","import mergeArray from '@/utils/mergeArray';\n\nfunction StyleSheet() {\n  this.deps = [];\n  this.style = '';\n}\n\nStyleSheet.prototype = {\n  imports: function imports(...deps) {\n    mergeArray(this.deps, deps);\n    return this;\n  },\n  exports: function exports(style) {\n    this.style = style;\n    return this;\n  },\n  toObjects: function toObjects() {\n    if (this.objectArray) {\n      return this.objectArray;\n    }\n    // incase recrursive\n    this.objectArray = [];\n    const all = [];\n    this.deps.forEach((d) => {\n      const ds = d.toObjects();\n      mergeArray(all, ds);\n    });\n    all.push(this);\n    this.objectArray = all;\n    return all;\n  },\n  toString: function toString() {\n    if (this.valueString) {\n      return this.valueString;\n    }\n    this.valueString = this.toObjects().map((o) => {\n      return o.style;\n    }).join('\\n');\n    return this.valueString;\n  },\n};\n\nexport default StyleSheet;\n","import startsWith from '@/utils/startsWith';\nimport { getStartupParams } from '@/utils/startupParams';\nimport $global from '../common/global';\n\nconst g = self;\n\nfunction getSubPackageByPage(page) {\n  const { mpAppJson } = g;\n\n  if (!mpAppJson || !mpAppJson.app.subPackages) {\n    return false;\n  }\n  const { subPackages } = mpAppJson.app;\n\n  for (let i = 0; i < subPackages.length; i++) {\n    const p = subPackages[i];\n    if (startsWith(page, `${p.root}/`)) {\n      return p.root;\n    }\n  }\n  return false;\n}\nconst packageMap = {};\nconst packageListeners = {};\n\ng.bootstrapSubPackage = function (subPackage, { success }) {\n  packageMap[subPackage] = 1;\n  success();\n  if (packageListeners[subPackage]) {\n    packageListeners[subPackage]();\n    delete packageListeners[subPackage];\n  }\n};\nconst isWorker = typeof importScripts !== 'undefined';\n\nfunction loadPackageScript(subPackage, callback) {\n  const url = `/${subPackage}`;\n  if (isWorker) {\n    importScripts(`${url}/index.worker.js`);\n    callback();\n  } else {\n    const script = document.createElement('script');\n    script.src = `${url}/index.js`;\n    document.head.appendChild(script);\n    // do not use script.onload\n    packageListeners[subPackage] = callback;\n  }\n}\nexport function loadPage(pagePath, doLoad) {\n  const isCli = getStartupParams().mpCli;\n  const subPackage = getSubPackageByPage(pagePath);\n\n  if (subPackage) {\n    const callBridge = $global.bridge.call;\n    if (packageMap[subPackage]) {\n      doLoad();\n    } else {\n      if (isWorker) {\n        callBridge('showLoading');\n      }\n      function doLoadScript() {\n        loadPackageScript(subPackage, () => {\n          if (isWorker) {\n            $global.bridge.call('hideLoading');\n          }\n          doLoad();\n        });\n      }\n      if (isCli) {\n        doLoadScript();\n      } else {\n        callBridge('loadSubPackage', {\n          packages: [subPackage],\n        }, doLoadScript);\n      }\n    }\n  } else {\n    doLoad();\n  }\n}\n","import $global from './global';\nimport Page from '../Page';\nimport { App, getApp, getCurrentPages } from '../App';\nimport Component from '../Component';\n\nexport {\n  $global,\n  Page,\n  App,\n  getApp,\n  getCurrentPages,\n  Component,\n};\n","import StyleSheet from '../StyleSheet/index';\nimport createComponent from '../createComponent';\nimport getComponentClass from '../ComponentRegistry/getComponentClass';\n\nexport {\n  StyleSheet,\n  createComponent,\n  getComponentClass,\n};\n","const $global = {\n  tabsConfig: {},\n  pagesConfig: {},\n  componentsConfig: {},\n\n  currentPageConfig: null,\n  currentComponentConfig: null,\n};\n\nexport default $global;\n","import Nerv, { createNervClass } from '@/nerv';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport objectKeys from '@/utils/objectKeys';\nimport { getCurrentPageImpl } from '../App';\nimport resolvePageUrl from '../utils/resolvePageUrl';\nimport $global from '../common/global';\nimport camelCase from '../utils/camelCase';\nimport Platform from '../Platform';\nimport normalizeStyle from './normalizeStyle';\nimport normalizeClassNameProps from './normalizeClassNameProps';\nimport PureRenderMixin from '../mixins/PureRenderMixin';\nimport TrackPageUpdateMixin from '../mixins/TrackPageUpdateMixin';\nimport BasicEventMixin from '../mixins/BasicEventMixin';\n\nfunction getNormalizedSrc(source, page) {\n  let src;\n  if (typeof source === 'string' && source.trim()) {\n    if (source.indexOf('http://') === 0\n        || source.indexOf('https://') === 0\n        || source.indexOf('file://') === 0\n        || source.indexOf('data:image') === 0 // base64\n        || source.indexOf('myfile://') === 0 // support custom protocol of IDE\n        || source.indexOf('local://') === 0 // support custom protocol of IDE\n        || source.indexOf('temp://') === 0 // support custom protocol of IDE\n    ) {\n      src = source;\n    } else {\n      src = resolvePageUrl(source, page || getCurrentPageImpl());\n      const { mpRuntimeConfig } = self;\n\n      if (mpRuntimeConfig && mpRuntimeConfig.contextPath) {\n        src = `${mpRuntimeConfig.contextPath}/${src}`;\n      } else {\n        src = `/${src}`;\n      }\n    }\n  }\n  return src;\n}\n\nexport default function createComponent(config = {}) {\n  const { pure = true, name: tagName = '', trackPageUpdateForIOS } = config;\n\n  return function create(WrappedComponent) {\n    const mixins = pure ? [PureRenderMixin] : [];\n    if (Platform.browser === 'ios') {\n      mixins.push(TrackPageUpdateMixin);\n    }\n\n    mixins.push(BasicEventMixin);\n\n    const Container = createNervClass({\n      displayName: `MP(${tagName})`,\n      mixins,\n      getInitialState() {\n        this.$mp = {\n          ...this.$mp,\n          bridge: $global.bridge,\n\n          // getTargetForEvent: this.getTargetForEvent,\n          getDataset: this.getDataset,\n          getNormalizedEvent: this.getNormalizedEvent,\n\n          getNormalizedStyle: this.getNormalizedStyle,\n          getAriaProps: this.getAriaProps,\n          getDataProps: this.getDataProps,\n          getNormalizedSrc,\n          tagName,\n          page: this.context.$page,\n        };\n        return {\n          $style: normalizeStyle(this),\n        };\n      },\n      componentWillReceiveProps(nextProps) {\n        if (this.props.style !== nextProps.style\n                // native need recomputed\n                || !Platform.browser && this.props.className !== nextProps.className) {\n          this.setState({\n            $style: normalizeStyle(this, nextProps),\n          });\n        }\n      },\n      isTrackPageUpdateForIOS() {\n        const { wrappedComponent } = this;\n\n        return trackPageUpdateForIOS || wrappedComponent && wrappedComponent.isTrackPageUpdateForIOS && wrappedComponent.isTrackPageUpdateForIOS();\n      },\n      getNormalizedStyle(props) {\n        if (props) {\n          let goProps = props;\n          if (typeof props === 'string') {\n            goProps = {\n              style: props,\n            };\n          }\n          return normalizeStyle(this, goProps);\n        }\n      },\n      getAriaProps() {\n        const { props } = this;\n\n        return objectKeys(props).reduce((prev, key) => {\n          if (key === 'role' || key.match(/^aria[A-Z\\-]/)) {\n            prev[key] = props[key];\n          }\n          return prev;\n        }, {});\n      },\n      getDataProps() {\n        const { props } = this;\n\n        return objectKeys(props).reduce((prev, key) => {\n          if (key.slice(0, 5) === 'data-') {\n            prev[key] = props[key];\n          }\n          return prev;\n        }, {});\n      },\n      getDataset() {\n        const { props } = this;\n\n        const dataset = {};\n        objectKeys(props).forEach((n) => {\n          if (n.slice(0, 5) === 'data-') {\n            const key = camelCase(n.slice(5));\n            dataset[key] = props[n];\n          }\n        });\n        return dataset;\n      },\n      // getTargetForEvent() {\n      //   const { props } = this;\n\n      //   return {\n      //     id: props.id,\n      //     tagName,\n      //     dataset: this.getDataset(),\n      //   };\n      // },\n      // /* 格式化event对象 */\n      // getNormalizedEvent(eventParam, other) {\n      //   let eventType = eventParam;\n      //   let srcEvent;\n      //   if (eventType.eventType) {\n      //     srcEvent = eventType.srcEvent;\n      //     eventType = eventType.eventType;\n      //   }\n      //   const nativeEvent = srcEvent && srcEvent.nativeEvent || srcEvent;\n      //   const currentTarget = this.getTargetForEvent();\n      //   let target = nativeEvent && nativeEvent.$target || currentTarget;\n      //   if (nativeEvent && !nativeEvent.$target) {\n      //     nativeEvent.$target = target;\n      //   }\n      //   // bug compatibility\n      //   target = {\n      //     targetDataset: target.dataset,\n      //     ...target,\n      //     dataset: currentTarget.dataset,\n      //   };\n\n      //   return {\n      //     type: eventType,\n      //     timeStamp: Date.now(),\n      //     target,\n      //     currentTarget,\n      //     ...other,\n      //   };\n      // },\n      saveRef(c) {\n        this.wrappedComponent = c;\n      },\n      getWrappedComponent() {\n        return this.wrappedComponent;\n      },\n      $getNormalizedProps() {\n        const { slot, ...props } = this.props;\n        props.$mp = this.$mp;\n        normalizeClassNameProps(props);\n        delete props.style;\n        if (this.state.$style) {\n          props.style = this.state.$style;\n        } else {\n          props.style = undefined;\n        }\n        const { $numProps } = this.constructor;\n\n        if ($numProps) {\n          $numProps.forEach((prop) => {\n            if (typeof props[prop] === 'string') {\n              props[prop] = parseFloat(props[prop]);\n            }\n          });\n        }\n        return props;\n      },\n      render() {\n        const props = this.$getNormalizedProps();\n        if (WrappedComponent.prototype.render) {\n          props.ref = this.saveRef;\n        }\n\n        return (\n          <WrappedComponent {...props} />\n        );\n      },\n    });\n\n    const RetComponent = hoistNonReactStatics(Container, WrappedComponent);\n    const $numProps = [];\n    const { defaultProps } = WrappedComponent;\n    if (defaultProps) {\n      objectKeys(defaultProps).forEach((prop) => {\n        if (typeof defaultProps[prop] === 'number') {\n          $numProps.push(prop);\n        }\n      });\n      if ($numProps.length) {\n        RetComponent.$numProps = $numProps;\n      }\n    }\n    return RetComponent;\n  };\n}\n","export default function normalizeClassNameProps(props) {\n  const { className = '' } = props;\n  const { tagName } = props.$mp;\n  if (tagName && className.indexOf(` a-${tagName}`) === -1) {\n    props.className = ` a-${tagName} ${className}`;\n  }\n}\n","export default function normalizeClassNameStyle(totalStyle) {\n  return totalStyle;\n}\n","import Platform from '../Platform';\nimport transformStyle from '../utils/transformStyle';\nimport normalizeClassNameStyle from './normalizeClassNameStyle';\n\nfunction parseStyle(style) {\n  const styles = {};\n  if (style) {\n    style.split(';').filter((s) => {\n      return !!s.trim();\n    }).forEach((rule) => {\n      const nameIndex = rule.indexOf(':');\n      let name;\n      let value;\n      if (nameIndex !== -1) {\n        name = rule.slice(0, nameIndex).trim();\n        value = rule.slice(nameIndex + 1).trim();\n        styles[name] = value;\n      }\n    });\n  }\n  return styles;\n}\n\nexport default function normalizeStyle(component, cProps) {\n  let totalStyle = [];\n  const { tagName } = component.$mp;\n  const { style, className, id } = cProps || component.props;\n\n  totalStyle = normalizeClassNameStyle(totalStyle, component, tagName, className, id);\n  // inline\n  if (style) {\n    let styleObj = style;\n    if (typeof styleObj === 'string') {\n      styleObj = parseStyle(styleObj.trim());\n    }\n    totalStyle.push(transformStyle(styleObj));\n  }\n  if (Platform.OS === 'web') {\n    if (totalStyle.length) {\n      totalStyle = Object.assign.apply(undefined, [{}].concat(totalStyle));\n    } else {\n      totalStyle = undefined;\n    }\n  } else if (!totalStyle.length) {\n    totalStyle = undefined;\n  }\n  return totalStyle;\n}\n","import './utils/env';\nimport { debug } from '@/utils/log';\nimport bootstrap from './web/bootstrap';\nimport { StyleSheet, createComponent, getComponentClass } from './common/commonUI';\nimport { Page, App, getApp, getCurrentPages, Component } from './common/commonLogic';\nimport $global from './common/global';\nimport { setStartupParams, getStartupParams } from './startupParams';\nimport EventHub from './EventHub';\nimport {\n  setCurrentPageImpl,\n  getCurrentPageImpl,\n  getCurrentPagesImpl,\n  getAppImpl,\n} from './App';\n\nconst g = self;\n\nfunction ready(callback) {\n  callback();\n}\n\ng.onerror = function onerror(msg = '', url, line, col, error) {\n  let stack = [];\n  try {\n    stack = JSON.stringify(error.stack).split('\\\\n').splice(0, 3);\n  } catch (e) {}\n\n  const args = [msg, url, line, col, error];\n  console.error('[RENDER] onerror', args);\n};\n\ng.bootstrapApp = function bootstrapApp(config = {}) {\n  const { container, onReady = ready, onRender, onFail } = config;\n\n  onReady((runInfo) => {\n    const { bridge } = runInfo || {};\n    const { startupParams } = bridge;\n\n    setStartupParams(startupParams);\n\n    if (location.hash.length > 1) {\n      debug('framework', '[RENDER] bootstrap page');\n      bootstrap({ container, onRender, onFail, type: 'initial hash' }, bridge);\n    } else {\n      window.addEventListener('hashchange', () => {\n        debug('framework', '[RENDER] bootstrap page when hashchange');\n        bootstrap({ container, onRender, onFail, type: 'hashchange' }, bridge);\n      }, false);\n    }\n  });\n};\n\nexport {\n  EventHub,\n  App,\n  setCurrentPageImpl,\n  getCurrentPageImpl,\n  getCurrentPagesImpl,\n  getApp,\n  getAppImpl,\n  getCurrentPages,\n  getStartupParams,\n  setStartupParams,\n  Component,\n  getComponentClass,\n  StyleSheet,\n  createComponent,\n  Page,\n  $global,\n};\n","import Nerv, { createNervClass } from '@/nerv';\nimport { getOpFn } from '@/utils/setData';\nimport objectKeys from '@/utils/objectKeys';\nimport {\n  PayloadKeyMountedComponents,\n  PayloadKeyUnmountedComponents,\n  ComponentKeyId,\n  ComponentKeyIs,\n  ComponentKeyDiffProps,\n  DiffKeyUpdated,\n  DiffKeyDeleted,\n  ComponentPropsId,\n} from '@/utils/consts';\nimport { debug } from '@/utils/log';\n\nimport $global from '../common/global';\nimport EventHub from '../EventHub';\nimport PureRenderMixin from '../mixins/PureRenderMixin';\nimport BasicEventMixin from '../mixins/BasicEventMixin';\nimport transformChildrenToSlots from '../utils/transformChildrenToSlots';\nimport normalizeComponentProps from '../utils/normalizeComponentProps';\nimport { getType } from '../../utils/types';\n\nlet componentId = 1;\nlet mountedComponents;\nlet unmountedComponents;\n\nfunction reset() {\n  mountedComponents = [];\n  unmountedComponents = [];\n}\n\nreset();\n\nEventHub.addListener(['pageLoad', 'pageReady', 'pageUpdate'], (e) => {\n  e.payload = {\n    ...(e.payload || {}),\n    ...{\n      [PayloadKeyMountedComponents]: mountedComponents,\n      [PayloadKeyUnmountedComponents]: unmountedComponents,\n    },\n  };\n  reset();\n});\n\nconst renderCache = {};\n\nfunction getRender(is) {\n  if (is in renderCache) {\n    return renderCache[is];\n  }\n  const setupConfig = $global.componentsConfig[is].system;\n  const _render = setupConfig.render;\n\n  let render = _render();\n  render = render.default || render;\n  renderCache[is] = render;\n  return render;\n}\n\nexport default (is) => createNervClass({\n  $isCustomComponent: true,\n  displayName: is,\n  mixins: [\n    BasicEventMixin,\n    PureRenderMixin,\n  ],\n  statics: {\n    is,\n    getDerivedStateFromProps(nextProps, state) {\n      const { __page } = nextProps;\n      const { properties } = __page.customComponents[is];\n      const changedProps = {};\n\n      for (const key in nextProps) {\n        if (nextProps.hasOwnProperty(key)) {\n          const nextProp = nextProps[key];\n          if (properties.hasOwnProperty(key) && getType(nextProp) === properties[key].type) {\n            changedProps[key] = nextProp;\n          }\n        }\n      }\n      return { ...state, ...changedProps };\n    },\n  },\n\n  getInitialState() {\n    const { __page, id } = this.props;\n    this.is = is;\n    this.id = this.id || ++componentId;\n    const { properties, data } = __page.customComponents[is];\n    this.properties = properties;\n    this.eventHandlers = {};\n\n    this.prevProps = {};\n    __page.componentInstances[this.id] = this;\n    __page.callRemote('self', 'fireComponentLifecycle', this.recordMounted(false), 'created');\n\n    return { ...data };\n  },\n  componentDidMount() {\n    const { __page } = this.props;\n\n    const info = this.recordMounted(this.diffProps(this.prevProps));\n    __page.callRemote('self', 'fireComponentLifecycle', info, 'attached');\n\n    this.prevProps = this.props;\n  },\n  onAttachedReady() {\n    const { __page } = this.props;\n\n    const info = this.recordMounted(this.diffProps(this.prevProps));\n    __page.callRemote('self', 'fireComponentLifecycle', info, 'ready');\n  },\n  componentDidUpdate(prevProps) {\n    const diffProps = this.diffProps(prevProps);\n\n    if (diffProps) {\n      this.recordMounted(diffProps);\n    }\n  },\n  componentWillUnmount() {\n    const { __page } = this.props;\n    delete __page.componentInstances[this.id];\n    unmountedComponents.push(this.id);\n    __page.callRemote('self', 'fireComponentLifecycle', this.recordMounted(false), 'unload');\n  },\n  setData(toBeData, callback) {\n    const data = this.state;\n\n    let ret = data;\n    if (Array.isArray(toBeData)) {\n      toBeData.forEach((d) => {\n        // immutable for shouldComponentUpdate\n        ret = getOpFn(d.op)(ret, d.data);\n      });\n    } else {\n      ret = getOpFn(toBeData.op)(ret, toBeData.data);\n    }\n\n    this.setState({\n      ...ret,\n    }, callback);\n  },\n  recordMounted(diffProps) {\n    const { id } = this.props;\n    const info = {\n      [ComponentKeyId]: this.id,\n      [ComponentKeyIs]: this.is,\n      [ComponentPropsId]: id,\n    };\n\n    mountedComponents.push(info);\n\n    if (diffProps) {\n      const { newProps } = this.normalizeProps(diffProps);\n\n      info[ComponentKeyDiffProps] = newProps;\n    }\n    return info;\n  },\n  diffProps(prevProps) {\n    const { properties = {} } = this;\n    const { props } = this; // 当前props\n\n    const deleted = [];\n    const updated = {};\n    let isUpdated;\n    let isDeleted;\n\n    objectKeys(normalizeComponentProps(prevProps)).forEach((prevKey) => {\n      const prevProp = prevProps[prevKey];\n      if (properties.hasOwnProperty(prevKey) && getType(prevProp) === properties[prevKey].type) {\n        if (!(prevKey in props)) {\n          deleted.push(prevKey);\n          isDeleted = true;\n        } else if (prevProp !== props[prevKey]) {\n          updated[prevKey] = props[prevKey];\n          isUpdated = true;\n        }\n      }\n    });\n\n    objectKeys(normalizeComponentProps(props)).forEach((key) => {\n      const prop = props[key];\n      if (properties.hasOwnProperty(key) && getType(prop) === properties[key].type) {\n        if (!(key in prevProps)) {\n          updated[key] = prop;\n          isUpdated = true;\n        }\n      }\n    });\n\n    let ret;\n    if (isUpdated) {\n      ret = ret || {};\n      ret[DiffKeyUpdated] = updated;\n    }\n    if (isDeleted) {\n      ret = ret || {};\n      ret[DiffKeyDeleted] = deleted;\n    }\n    return ret;\n  },\n  normalizeProps(props) {\n    const newProps = {};\n    if (props[DiffKeyDeleted]) {\n      newProps[DiffKeyDeleted] = props[DiffKeyDeleted];\n    }\n\n    if (props[DiffKeyUpdated]) {\n      newProps[DiffKeyUpdated] = { ...props[DiffKeyUpdated] };\n    }\n\n    return { newProps };\n  },\n  $getEventHandler(name) {\n    const _this = this;\n\n    if (!name || typeof name !== 'string') {\n      return name;\n    }\n    const { eventHandlers } = this;\n    const { __page } = this.props;\n\n    if (!eventHandlers[name]) {\n      const handle = function (e, more) {\n        const event = _this.getNormalizedEvent(e, more);\n        __page.callRemote.apply(__page, ['self', 'triggerComponentEvent', _this.id, name].concat(event));\n      };\n      handle.handleName = name;\n      handle.type = 'component';\n      handle.id = this.id;\n\n      eventHandlers[name] = handle;\n    }\n    return eventHandlers[name];\n  },\n  $getRefHandler(...args) {\n    const { __page } = this.props;\n\n    return __page.$getRefHandler.call(__page, ...args);\n  },\n\n  triggerEvent(eventName, detail, options) {\n    const event = new CustomEvent(eventName, {\n      detail,\n      ...options,\n    });\n    this.root.dispatchEvent(event);\n  },\n\n  render() {\n    const { children, $scopedSlots } = this.props;\n    const props = normalizeComponentProps(this.props);\n    const $slots = transformChildrenToSlots(children);\n\n    const {\n      id,\n      className,\n      ...rest\n    } = props;\n\n    return (\n      <span\n        ref={(ref) => this.root = ref}\n        id={id}\n        className={className}\n        {...rest}\n      >\n        {getRender(is).call(this, {\n          $id: this.id,\n          $scopedSlots,\n          $slots,\n          ...rest,\n          ...this.state,\n        })}\n      </span>\n    );\n  },\n});\n","import Nerv, { createNervClass } from '@/nerv';\n\nimport addEvents from '@/utils/addEvents';\nimport {\n  PendingKeyType,\n  PendingKeyId,\n  PendingKeyData,\n  PendingKeyOp,\n  PendingValuePage,\n  PendingValueComponent,\n  OpSet,\n} from '@/utils/consts';\nimport objectKeys from '@/utils/objectKeys';\nimport { getOpFn } from '@/utils/setData';\nimport { debug } from '@/utils/log';\nimport BasicEventMixin from '../mixins/BasicEventMixin';\nimport MessageHandleMixin from '../mixins/MessageHandleMixin';\nimport RefMixin from '../mixins/RefMixin';\nimport { setCurrentPageImpl } from '../App';\nimport EventHub from '../EventHub';\nimport $global from '../common/global';\nimport { rpx2px } from '../utils/unit';\nimport Platform from '../Platform';\nimport Scene from './Scene';\n\nconst styleSheetCaches = {};\nfunction getStyleSheet(pagePath) {\n  if (pagePath in styleSheetCaches) {\n    return styleSheetCaches[pagePath];\n  }\n  const setupConfig = $global.pagesConfig[pagePath].system;\n  let _stylesheet = setupConfig.stylesheet;\n\n  if (_stylesheet) {\n    _stylesheet = _stylesheet();\n  }\n  const stylesheet = _stylesheet && (_stylesheet.default || _stylesheet);\n  styleSheetCaches[pagePath] = stylesheet;\n  return stylesheet;\n}\n\nconst renderCache = {};\nfunction getRender(pagePath) {\n  if (pagePath in renderCache) {\n    return renderCache[pagePath];\n  }\n  const setupConfig = $global.pagesConfig[pagePath].system;\n  const _render = setupConfig.render;\n  // lazy require xml and css\n  let render = _render();\n  render = render.default || render;\n  renderCache[pagePath] = render;\n  return render;\n}\n\nexport default createNervClass({\n  $isCustomComponent: false,\n  displayName: 'PageComponent',\n  mixins: [\n    BasicEventMixin,\n    MessageHandleMixin,\n    RefMixin,\n  ],\n  getInitialState() {\n    const { pagePath } = this.props;\n\n    this.pagePath = pagePath;\n    this.pageType = 'RENDER';\n    this.eventHandlers = {};\n    this.onShowReadyCallbacks = [];\n    this.componentInstances = {};\n    this.self = this;\n    this.publicInstance = {};\n\n    return {\n      __InitialDataReady__: false,\n    };\n  },\n  componentDidMount() {\n    this.insertStyle();\n\n    Object.assign(this, {\n      bridge: $global.bridge,\n      renderSeq: 1,\n    });\n\n    setCurrentPageImpl(this);\n\n    this.initMessageChannel();\n  },\n  UNSAFE_componentWillUpdate() {\n    this.renderSeq+=1;\n  },\n  insertStyle() {\n    const headNode = document.getElementsByTagName('head')[0];\n    // special for 1rpx or 2rpx\n    const remReg = rpx2px(2) < 1 ? /\\b0\\.0[12]rem/g : rpx2px(1) < 1 ? /\\b0\\.01rem/g : null;\n    const replacer = Platform.browser === 'ios' ? '0.5px' : '1px';\n\n    const stylesheet = getStyleSheet(this.pagePath);\n    if (stylesheet) {\n      const styleNode = document.createElement('style');\n      let styleString = stylesheet.toString();\n      if (remReg) {\n        styleString = styleString.replace(remReg, replacer);\n      }\n      styleNode.innerHTML = styleString;\n      headNode.appendChild(styleNode);\n    }\n  },\n  onInitDataReady(data) {\n    debug('framework', `[RENDER] Page ${this.pagePath} onInitDataReady: `, data);\n    const _this = this;\n    const { id, publicInstance, customComponents, isRefresh } = data;\n    this.publicInstance = publicInstance;\n    this.setId(id);\n    this.customComponents = customComponents;\n    const now = Date.now();\n    this.setState({\n      ...(publicInstance.data || {}),\n      __InitialDataReady__: true,\n    }, () => {\n      _this.logRenderTime(now);\n\n      if (publicInstance.onReachBottom || publicInstance.onPageScroll) {\n        addEvents(window, {\n          scroll: _this.checkScroll,\n        });\n      }\n    });\n  },\n  /* load完成 准备ready */\n  onLoaded() {\n    setTimeout(() => {\n      debug('framework', `[RENDER] Page ${this.pagePath} onLoaded`);\n      while (this.onShowReadyCallbacks.length) {\n        const fn = this.onShowReadyCallbacks.shift();\n        fn();\n      }\n\n      const e = { page: this };\n      EventHub.emit('pageReady', e);\n      this.callRemote('self', 'ready', e.payload);\n      this.loaded = true;\n    });\n  },\n  onComponentAttached(componentId) {\n    const fn = () => {\n      const component = this.componentInstances[componentId];\n      if (component) {\n        component.onAttachedReady();\n      }\n    };\n\n    if (this.loaded) {\n      fn();\n    } else {\n      this.onShowReadyCallbacks.push(fn);\n    }\n  },\n  checkScroll() {\n    const onReachBottomDistance = 50;\n    const { innerHeight, pageYOffset } = window;\n    const { scrollHeight } = document.body;\n\n    if (this.publicInstance.onPageScroll) {\n      this.callRemote('self', 'onPageScroll', {\n        scrollTop: pageYOffset,\n        scrollHeight,\n      });\n    }\n    if (this.publicInstance.onReachBottom && pageYOffset > 0) {\n      const closeBottom = scrollHeight - (innerHeight + pageYOffset) <= onReachBottomDistance;\n      if (closeBottom) {\n        if (!this.shouldNotFireOnReachBottom) {\n          this.shouldNotFireOnReachBottom = true;\n          this.callRemote('self', 'onReachBottom');\n        }\n      } else {\n        this.shouldNotFireOnReachBottom = false;\n      }\n    }\n  },\n  $getEventHandler(name) {\n    const _this = this;\n\n    if (!name || typeof name !== 'string') {\n      return name;\n    }\n    if (!this.eventHandlers[name]) {\n      this.eventHandlers[name] = function (e, more) {\n        const event = _this.getNormalizedEvent(e, more);\n        _this.callRemote.apply( _this, ['self', 'onRenderEvent', name].concat(event));\n      };\n      const handle = this.eventHandlers[name];\n      handle.handleName = name;\n      handle.type = 'page';\n      handle.id = this.id;\n    }\n    return this.eventHandlers[name];\n  },\n  /* 接受worker消息触发 */\n  triggerComponentCustomEvent(componentId, eventName, detail, options) {\n    const component = this.componentInstances[componentId];\n    if (component) {\n      component.triggerEvent(eventName, detail, options);\n    }\n  },\n  receiveData(toBeData, callback) {\n    const _this = this;\n\n    if (!toBeData.length) {\n      return callback();\n    }\n    const pageData = [];\n    const { componentInstances } = this;\n\n    const componentsData = {};\n    toBeData.forEach((toData) => {\n      const type = toData[PendingKeyType];\n      const data = toData[PendingKeyData];\n      const id = toData[PendingKeyId];\n      const op = toData[PendingKeyOp] || OpSet;\n      if (type === PendingValuePage) {\n        pageData.push({ data, op });\n      } else if (type === PendingValueComponent && componentInstances[id]) {\n        componentsData[id] = componentsData[id] || [];\n        componentsData[id].push({ data, op });\n      }\n    });\n    const doIt = () => {\n      const count = objectKeys(componentsData).length + (pageData.length ? 1 : 0);\n      let c = 0;\n      const now = Date.now();\n      const unmountedChecked = objectKeys(componentsData);\n      const allKeys = unmountedChecked.concat();\n      const pageComponent = _this;\n      function done() {\n        if (c < 0) {\n          return;\n        }\n        const doneComponent = this;\n        if (doneComponent === pageComponent) {\n          ++c;\n        }\n        for (let l = unmountedChecked.length - 1; l >= 0; l--) {\n          const id = unmountedChecked[l];\n          const currentComponent = componentInstances[id];\n          if (!currentComponent || currentComponent === doneComponent) {\n            ++c;\n            unmountedChecked.splice(l, 1);\n          }\n        }\n        if (c === count) {\n          c = -1;\n          pageComponent.onPageUpdate(now, callback);\n        }\n      }\n      allKeys.forEach((id) => {\n        // if unmounted, will not trigger setState callback\n        componentInstances[id].setData(componentsData[id], done);\n      });\n      if (pageData.length) {\n        _this.setData(pageData, done);\n      }\n    };\n\n    doIt();\n  },\n  onPageUpdate(now, callback) {\n    this.logRenderTime(now);\n    const e = { page: this };\n    EventHub.emit('pageUpdate', e);\n    if (e.payload) {\n      this.callRemote('self', 'update', e.payload);\n    }\n    if (callback) {\n      callback();\n    }\n  },\n  setData(toBeData, callback) {\n    let ret = this.state;\n    toBeData.forEach((d) => {\n      // immutable for shouldComponentUpdate\n      ret = getOpFn(d.op)(ret, d.data);\n    });\n\n    this.setState({\n      ...ret,\n    }, callback);\n  },\n  initMessageChannel: function initMessageChannel() {\n    const { messageChannel } = this.props;\n    messageChannel.onMessage(this.onMessage);\n  },\n  postMessage(data) {\n    debug('framework', `[RENDER] Page ${this.pagePath} postMessage`, data);\n    const { messageChannel } = this.props;\n    messageChannel.postMessage({\n      ...data,\n      pageType: this.pageType,\n      msgType: 'endpoint',\n    });\n  },\n  logRenderTime(now) {\n    debug('framework', `render ${this.pagePath} costs ${Date.now() - now}ms.`);\n  },\n  saveRoot(ref) {\n    this.root = ref;\n  },\n  render() {\n    const { __InitialDataReady__, ...data } = this.state;\n\n    if (!__InitialDataReady__) {\n      return null;\n    }\n\n    return (\n      <Scene\n        pagePath={this.pagePath}\n        saveRoot={this.saveRoot}\n        __page={this}\n        __render={getRender(this.pagePath)}\n        data={data}\n      />\n    );\n  },\n});\n","import Nerv from '@/nerv';\nimport EventHub from '../EventHub';\n\nexport default class Scene extends Nerv.Component {\n  componentDidMount() {\n    const { __page } = this.props;\n    const e = { page: __page };\n\n    EventHub.emit('pageLoad', e);\n    __page.callRemote('self', 'load');\n  }\n\n  render() {\n    const { data, saveRoot, __page, __render } = this.props;\n    return (\n      <div className=\"a-page tiny-page\" ref={saveRoot}>\n        {__render.call(__page, data)}\n      </div>\n    );\n  }\n}\n","import { findDOMNode } from '@/nerv';\n\nimport addEvents from '@/utils/addEvents';\nimport objectKeys from '@/utils/objectKeys';\nimport { getPropsEventName } from '@/utils/eventReg';\n\nfunction defaultCreateTouchList(touchList = []) {\n  const list = [].slice.call(touchList, 0);\n  return list.map((item) => {\n    return {\n      clientX: item.clientX,\n      clientY: item.clientY,\n      identifier: item.identifier,\n      pageX: item.pageX,\n      pageY: item.pageY,\n    };\n  });\n}\n\nfunction callBubblesEvent(instance, eventType, srcEvent, more, capture) {\n  const catchHandler = instance.props[getPropsEventName(eventType, true, capture)];\n\n  const e = instance.getNormalizedEvent({\n    eventType,\n    srcEvent,\n  }, more);\n\n  e.currentTarget = { ...e.currentTarget, ...instance.getTargetForEvent() };\n\n  if (catchHandler && srcEvent.stopPropagation) {\n    srcEvent.stopPropagation();\n    typeof catchHandler === 'function' && catchHandler(e);\n    return;\n  }\n\n  const onHandler = instance.props[getPropsEventName(eventType, false, capture)];\n  if (typeof onHandler === 'function') {\n    onHandler(e);\n  }\n}\n\nfunction defaultCreateTap(nativeEvent) {\n  const detail = {};\n  if (nativeEvent) {\n    nativeEvent = nativeEvent.nativeEvent || nativeEvent;\n    if ('pageX' in nativeEvent) {\n      detail.pageX = nativeEvent.pageX;\n      detail.pageY = nativeEvent.pageY;\n    }\n    if ('clientX' in nativeEvent) {\n      detail.clientX = nativeEvent.clientX;\n      detail.clientY = nativeEvent.clientY;\n    } else if ('pageX' in detail) {\n      detail.clientX = detail.pageX - window.pageXOffset;\n      detail.clientY = detail.pageY - window.pageYOffset;\n    }\n  }\n  return {\n    detail,\n  };\n}\n\nfunction detachScroll(instance) {\n  if (instance.detachScrollEvent) {\n    instance.detachScrollEvent.remove();\n    instance.detachScrollEvent = null;\n  }\n}\n\nfunction attachScroll(instance) {\n  const { disableScroll } = instance.props;\n  const { detachScrollEvent } = instance;\n  const { __basicEventRoot } = instance;\n\n  if (!__basicEventRoot) {\n    return;\n  }\n  if (!disableScroll && detachScrollEvent) {\n    return detachScroll(instance);\n  }\n  if (disableScroll && !detachScrollEvent) {\n    instance.detachScrollEvent = addEvents(instance.__basicEventRoot, {\n      touchmove: function touchmove(e) {\n        e.preventDefault();\n      },\n    });\n  }\n}\n\nexport default {\n  // componentDidMount() {\n  //   this.__basicEventRoot = findDOMNode(this);\n  //   attachScroll(this);\n  // },\n  // componentDidUpdate() {\n  //   attachScroll(this);\n  // },\n  // componentWillUnmount() {\n  //   detachScroll(this);\n  // },\n  // recordTarget(srcEvent) {\n  //   const nativeEvent = srcEvent && srcEvent.nativeEvent;\n  //   if (nativeEvent && !nativeEvent.$target) {\n  //     nativeEvent.$target = this.getTargetForEvent();\n  //   }\n  // },\n  // hasEvent(event, capture) {\n  //   return getPropsEventName(event, false, capture) || getPropsEventName(event, true, capture);\n  // },\n  getDatasetForTarget(target) {\n    const dataset = {};\n\n    for (const key in target.dataset) {\n      if (Object.hasOwnProperty.call(target.dataset, key)) {\n        const value = target.dataset[key];\n        dataset[key] = value;\n      }\n    }\n    return dataset;\n  },\n  getTargetForEvent(nativeEvent, key = 'target') {\n    const { props } = this;\n    const { offsetLeft, offsetTop } = nativeEvent[key];\n\n    return {\n      id: props.id || '',\n      dataset: this.getDatasetForTarget(nativeEvent[key]),\n      offsetLeft,\n      offsetTop,\n    };\n  },\n  getDetailForEvent(nativeEvent) {\n    const eventType = nativeEvent.type;\n    const detail = {};\n\n    if (eventType === 'click') {\n      detail.x = nativeEvent.pageX;\n      detail.y = nativeEvent.pageY;\n    } else if (eventType === 'transitionend') {\n      detail.elapsedTime = nativeEvent.elapsedTime;\n      detail.propertyName = nativeEvent.propertyName;\n    } else if (eventType === 'animationstart' || eventType === 'animationiteration' || eventType === 'animationend') {\n      detail.elapsedTime = nativeEvent.elapsedTime;\n      detail.animationName = nativeEvent.animationName;\n    }\n\n    return detail;\n  },\n  getTouchesForEvent(nativeEvent, key = 'touches') {\n    if (nativeEvent[key]) {\n      const list = [].slice.call((nativeEvent[key]), 0);\n      return list.map((item) => {\n        return {\n          clientX: item.clientX,\n          clientY: item.clientY,\n          identifier: item.identifier,\n          force: item.force,\n          pageX: item.pageX,\n          pageY: item.pageY,\n        };\n      });\n    }\n  },\n  /* 格式化event对象 */\n  getNormalizedEvent(nativeEvent, more = {}) {\n    const eventType = nativeEvent.type === 'click' ? 'tap' : nativeEvent.type;\n    const target = this.getTargetForEvent(nativeEvent);\n    const currentTarget = this.getTargetForEvent(nativeEvent, 'currentTarget');\n    const detail = this.getDetailForEvent(nativeEvent);\n    const touches = this.getTouchesForEvent(nativeEvent);\n    const changedTouches = this.getTouchesForEvent(nativeEvent, 'changedTouches');\n\n    return {\n      type: eventType,\n      timeStamp: Date.now(),\n      target,\n      currentTarget,\n      detail,\n      touches,\n      changedTouches,\n      ...more,\n    };\n  },\n  // onTap(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   // ios also trigger onTap after onLongTap\n  //   if (this.__longTapTriggered) {\n  //     return;\n  //   }\n  //   const eventName = 'tap';\n  //   if (this.hasEvent(eventName, capture)) {\n  //     callBubblesEvent(this, eventName, srcEvent, createTap && createTap.call(this, srcEvent, defaultCreateTap), capture);\n  //   }\n  // },\n  // onTouchStart(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   this.__longTapTriggered = 0;\n\n  //   const eventName = 'touchstart';\n  //   if (this.hasEvent(eventName, capture)) {\n  //     callBubblesEvent(this, eventName, srcEvent, {\n  //       touches: createTouchList.call(this, srcEvent.touches),\n  //       changedTouches: createTouchList.call(this, srcEvent.changedTouches),\n  //     }, capture);\n  //   }\n  // },\n  // onTouchMove(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   const eventName = 'touchmove';\n  //   if (this.hasEvent(eventName, capture)) {\n  //     callBubblesEvent(this, eventName, srcEvent, {\n  //       touches: createTouchList.call(this, srcEvent.touches),\n  //       changedTouches: createTouchList.call(this, srcEvent.changedTouches),\n  //     }, capture);\n  //   }\n  // },\n  // onTouchEnd(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   const eventName = 'touchend';\n  //   if (this.hasEvent(eventName, capture)) {\n  //     callBubblesEvent(this, eventName, srcEvent, {\n  //       touches: createTouchList.call(this, srcEvent.touches),\n  //       changedTouches: createTouchList.call(this, srcEvent.changedTouches),\n  //     }, capture);\n  //   }\n  // },\n  // onTouchCancel(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   const eventName = 'touchcancel';\n  //   if (this.hasEvent(eventName, capture)) {\n  //     callBubblesEvent(this, eventName, srcEvent, {\n  //       touches: createTouchList.call(this, srcEvent.touches),\n  //       changedTouches: createTouchList.call(this, srcEvent.changedTouches),\n  //     }, capture);\n  //   }\n  // },\n  // onLongTap(srcEvent) {\n  //   this.__longTapTriggered = 1;\n  //   if (this.hasEvent('LongTap')) {\n  //     callBubblesEvent(this, 'longTap', srcEvent, createTap && createTap.call(this, srcEvent, defaultCreateTap));\n  //   }\n  // },\n  // onTransitionEnd(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   if (this.hasEvent('transitionend', capture)) {\n  //     callBubblesEvent(this, 'transitionend', srcEvent, {\n  //       detail: {\n  //         elapsedTime: srcEvent.elapsedTime,\n  //         propertyName: srcEvent.propertyName,\n  //       },\n  //     }, capture);\n  //   }\n  // },\n  // onAnimationStart(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   if (this.hasEvent('animationstart', capture)) {\n  //     callBubblesEvent(this, 'animationstart', srcEvent, {\n  //       detail: {\n  //         elapsedTime: srcEvent.elapsedTime,\n  //         animationName: srcEvent.animationName,\n  //       },\n  //     }, capture);\n  //   }\n  // },\n  // onAnimationIteration(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   if (this.hasEvent('animationiteration', capture)) {\n  //     callBubblesEvent(this, 'animationiteration', srcEvent, {\n  //       detail: {\n  //         elapsedTime: srcEvent.elapsedTime,\n  //         animationName: srcEvent.animationName,\n  //       },\n  //     }, capture);\n  //   }\n  // },\n  // onAnimationEnd(srcEvent, capture = false) {\n  //   this.recordTarget(srcEvent);\n  //   if (this.hasEvent('animationend', capture)) {\n  //     callBubblesEvent(this, 'animationend', srcEvent, {\n  //       detail: {\n  //         elapsedTime: srcEvent.elapsedTime,\n  //         animationName: srcEvent.animationName,\n  //       },\n  //     }, capture);\n  //   }\n  // },\n};\n","import { debug } from '@/utils/log';\nimport { noop } from '@/utils/types';\n\nconst MessageHandle = {\n  getCallbackId() {\n    this.callbackSeq = this.callbackSeq || 0;\n    this.callbackSeq += 2;\n    return this.callbackSeq;\n  },\n  setId(id) {\n    this.id = id;\n  },\n  getId() {\n    return this.id;\n  },\n  getPagePath() {\n    return this.pagePath;\n  },\n  onMessage(event) {\n    const _this = this;\n\n    if (this.unloaded) {\n      return;\n    }\n    let { data } = event;\n\n    if (typeof data === 'string') {\n      data = JSON.parse(data).data;\n    }\n\n    const { method, args, caller, successCallback, errorCallback } = data;\n\n    if (caller !== 'bridge' || method !== 'console') {\n      debug('framework', `[${this.pageType}] Page ${this.pagePath} onMessage`, data);\n    }\n    const callPath = caller && caller.split('.') || [];\n    let callObj = this;\n    callPath.forEach((p) => {\n      callObj = callObj && callObj[p];\n    });\n\n    if (callObj) {\n      if (!args) {\n        debug('framework', `[${this.pageType}] Page ${this.pagePath} unhandled message`, event.data);\n        return;\n      }\n      const myArgs = args.concat();\n      if (successCallback) {\n        myArgs.push((...a) => {\n          _this.callRemote.apply(_this, ['self', 'invokeCallback', successCallback].concat(a));\n        });\n      } else {\n        myArgs.push(noop);\n      }\n      if (errorCallback) {\n        myArgs.push((...a) => {\n          _this.callRemote.apply(_this, ['self', 'invokeCallback', errorCallback].concat(a));\n        });\n      } else {\n        myArgs.push(noop);\n      }\n      if (callObj[method]) {\n        let _callObj;\n\n        (_callObj = callObj)[method].apply(_callObj, myArgs);\n        return;\n      }\n    }\n    debug('framework', `[${this.pageType}] Page ${this.pagePath} unhandled message`, event.data);\n  },\n\n  invokeCallback(callbackId, ...args) {\n    if (this.unloaded) {\n      return;\n    }\n    const { callbacks } = this;\n    if (callbacks) {\n      if (callbackId && callbacks[callbackId]) {\n        callbacks[callbackId].apply(callbacks, args);\n      }\n      if (callbackId % 2 === 0) {\n        callbackId -= 1;\n      }\n      // success and error\n      delete callbacks[callbackId];\n      delete callbacks[callbackId + 1];\n    }\n  },\n  callRemote(caller, method, ...args) {\n    if (this.unloaded) {\n      return;\n    }\n    let successCallback;\n    let errorCallback;\n    if (typeof args[args.length - 2] === 'function') {\n      this.callbacks = this.callbacks || {};\n      successCallback = this.getCallbackId() - 1;\n      this.callbacks[successCallback] = args[args.length - 2];\n      errorCallback = successCallback + 1;\n      this.callbacks[errorCallback] = args[args.length - 1];\n      args.pop();\n      args.pop();\n    } else if (typeof args[args.length - 1] === 'function') {\n      this.callbacks = this.callbacks || {};\n      successCallback = this.getCallbackId() - 1;\n      this.callbacks[successCallback] = args[args.length - 1];\n      errorCallback = successCallback + 1;\n      args.pop();\n    }\n\n    this.postMessage({\n      caller,\n      method,\n      id: this.getId(),\n      successCallback,\n      errorCallback,\n      args,\n    });\n  },\n};\n\nexport default MessageHandle;\n","import shallowEqual from '@/utils/shallowEqual';\n\nconst PureRender = {\n  shouldComponentUpdate(nextProps, nextState) {\n    return !shallowEqual(nextProps, this.props) || !shallowEqual(nextState, this.state);\n  },\n};\n\nexport default PureRender;\n","const Ref = {\n  getInitialState() {\n    this.refHandlers = {};\n    this.refComponents = {};\n    return {};\n  },\n  $getRefHandler(name) {\n    const _this = this;\n\n    if (this.refHandlers[name]) {\n      return this.refHandlers[name];\n    }\n    this.refHandlers[name] = function (ref) {\n      let c = ref;\n      if (c && c.getWrappedComponent) {\n        c = c.getWrappedComponent();\n      }\n      _this.refComponents[name] = c;\n    };\n\n    return this.refHandlers[name];\n  },\n};\n\nexport default Ref;\n","import EventHub from '../EventHub';\nimport { getCurrentPageImpl } from '../App';\n\nfunction needReLayout(instance) {\n  const { tagName } = instance.$mp;\n  const _self = self;\n  const { NATIVE_COMPONENTS_AUTO_ADJUST } = _self;\n\n  return !(NATIVE_COMPONENTS_AUTO_ADJUST && tagName in NATIVE_COMPONENTS_AUTO_ADJUST);\n}\n\nconst TrackPageUpdate = {\n  componentDidMount() {\n    const _this = this;\n\n    if (this.isTrackPageUpdateForIOS()) {\n      this.renderSeq = getCurrentPageImpl().renderSeq;\n      this.detachPageUpdate = EventHub.addListener('pageUpdate', () => {\n        if (needReLayout(_this) && _this.renderSeq !== getCurrentPageImpl().renderSeq) {\n          _this.forceUpdate();\n        }\n      });\n    }\n  },\n  componentDidUpdate() {\n    if (this.isTrackPageUpdateForIOS()) {\n      this.renderSeq = getCurrentPageImpl().renderSeq;\n    }\n  },\n  componentWillUnmount() {\n    if (this.isTrackPageUpdateForIOS()) {\n      this.detachPageUpdate.remove();\n    }\n  },\n};\n\nexport default TrackPageUpdate;\n","import { getStartupParams, setStartupParams } from '@/utils/startupParams';\n\nexport {\n  getStartupParams,\n  setStartupParams,\n};\n","export default function camelCase(name) {\n  return name.replace(/-(\\w)/g, (_w, g) => {\n    return g.toUpperCase();\n  });\n}\n","if (!global.Symbol) {\n  let id = 0;\n  const _Symbol = function Symbol(key) {\n    return `$$_mp_symbol_${key}_${++id}_$$`;\n  };\n  _Symbol.iterator = _Symbol('Symbol.iterator');\n  global.Symbol = _Symbol;\n}\n","import { rpx } from './unit';\nimport isNumber from './isNumber';\n\nfunction normalizeCssValueWeb(_value) {\n  let value = _value;\n  if (typeof value === 'string') {\n    value = value.replace(/\\b([.\\d]+)rpx\\b/gi, (_m, v) => {\n      return `${rpx(parseFloat(v))}`;\n    });\n    if (isNumber(value)) {\n      return parseFloat(value);\n    }\n  }\n  return value;\n}\n\nexport default function filterCssValue(name, style) {\n  const ret = {};\n  ret[name] = normalizeCssValueWeb(style[name]);\n\n  return ret;\n}\n","const numberReSnippet = '(?:NaN|-?(?:(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[E|e][+|-]?\\\\d+)?|Infinity))';\nconst matchOnlyNumberRe = new RegExp(`^(${numberReSnippet})$`);\n\nexport default function isNumber(str) {\n  return !!str.trim().match(matchOnlyNumberRe);\n}\n","export default function normalizeComponentProps(props) {\n  const { children, $scopedSlots, slot, ...ret } = props;\n\n  return ret;\n}\n","import $global from '../common/global';\n\nconst pageMatchReg = /#([^?]+)(\\?.+)?/;\nconst MP_PAGE_ID = '__mpPageId';\nconst pageIdMatch = new RegExp(`[&?]${MP_PAGE_ID}=(\\\\d+)(?:&|$)`);\n\nexport function getUrlFromPageInfo({ pagePath, pageId, queryString }) {\n  return `#${pagePath}?${MP_PAGE_ID}=${pageId}${queryString ? `&${queryString}` : ''}`;\n}\n\nexport function getPageInfoFromUrl(url) {\n  let id;\n  const pageMatch = url && url.match(pageMatchReg);\n  let pagePath = pageMatch && pageMatch[1];\n  if (pagePath && pagePath.charAt(0) === '/') {\n    pagePath = pagePath.slice(1);\n  }\n  let queryString = pageMatch && pageMatch[2] || '';\n  const idMatch = queryString.match(pageIdMatch);\n  if (idMatch) {\n    id = parseInt(idMatch[1], 10);\n    queryString = queryString.replace(pageIdMatch, '');\n  }\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.slice(1);\n  }\n  id = id || $global.tabsConfig[pagePath] || 0;\n  return {\n    id,\n    pagePath,\n    queryString,\n  };\n}\n","import resolveUrl from './resolveUrl';\n\nexport default function resolvePageUrl(pagePath, currentPage) {\n  let url = pagePath;\n  let queryString = '';\n  const queryIndex = url.indexOf('?');\n  if (queryIndex !== -1) {\n    queryString = url.slice(queryIndex + 1);\n    url = url.slice(0, queryIndex);\n  }\n  if (url.charAt(0) === '/') {\n    url = url.slice(1);\n  } else if (currentPage) {\n    const refer = currentPage.getPagePath();\n    url = resolveUrl(url, refer);\n  }\n  queryString = queryString ? `?${queryString}` : queryString;\n  return `${url}${queryString}`;\n}\n","import startsWith from '@/utils/startsWith';\n\nexport default function resolveUrl(path, refered) {\n  if (startsWith(path, '/')) {\n    return path;\n  }\n  if (!startsWith(path, './') && !startsWith(path, '../')) {\n    path = `./${path}`;\n  }\n  const referedParts = refered.split('/');\n  if (referedParts[referedParts.length - 1]) {\n    referedParts.pop();\n  }\n  const parts = referedParts.concat(path.split('/'));\n  const res = [];\n  parts.forEach((p) => {\n    // ignore empty parts\n    if (!p || p === '.') {\n      return;\n    }\n    if (p === '..') {\n      res.pop();\n    } else {\n      res.push(p);\n    }\n  });\n  return res.join('/');\n}\n","import { supportedProperty, supportedValue } from 'css-vendor';\n\nexport function ruleName(v) {\n  return supportedProperty(v);\n}\nexport function ruleValue(n, v) {\n  return supportedValue(n, v);\n}\nexport function needNormalizeCssValue(property) {\n  return property.indexOf('flex') !== -1 || property.indexOf('display') !== -1;\n}\n","import Nerv from '@/nerv';\n\nexport default function transformChildrenToSlots(children) {\n  const slots = {};\n  Nerv.Children.forEach(children, (c) => {\n    const slot = c && c.props && c.props.slot || '$default';\n    const holder = slots[slot] || [];\n    holder.push(c);\n    slots[slot] = holder;\n  });\n  return slots;\n}\n","import objectKeys from '@/utils/objectKeys';\nimport camelCase from './camelCase';\nimport filterCssValue from './filterCssValue';\nimport { ruleName, needNormalizeCssValue, ruleValue } from './ruleTransform';\n\nexport default function transformStyle(style) {\n  const d = {};\n  objectKeys(style).forEach((name) => {\n    const expanded = filterCssValue(name, style);\n    if (expanded === false) {\n      return;\n    }\n    objectKeys(expanded).forEach((key) => {\n      const v = expanded[key];\n      const property = ruleName(camelCase(key));\n      // color #xxx -> rgb()\n      if (property) {\n        d[property] = needNormalizeCssValue(property) ? ruleValue(property, v) : v;\n      }\n    });\n  });\n  return d;\n}\n","import Platform from '../Platform';\n\nconst isIOS = Platform.browser === 'ios';\nconst { clientWidth } = document.documentElement;\n\nexport function rpx(v) {\n  let value = rpx2px(v);\n  if (value > 0 && value < 1) {\n    value = isIOS ? 0.5 : 1;\n  } else {\n    value = Math.floor(value);\n  }\n  return `${value}px`;\n}\n\nexport function rpx2px(v) {\n  return v / 750 * clientWidth;\n}\n\nexport function px(v) {\n  return `${v}px`;\n}\n","import Nerv, { render, unmountComponentAtNode } from '@/nerv';\nimport { debug } from '@/utils/log';\nimport { noop } from '@/utils/types';\nimport PageRegistry from '../PageRegistry';\nimport { getPageInfoFromUrl } from '../utils/pageInfoAndUrl';\nimport getMessageChannel from './getMessageChannel';\nimport { loadPage } from '../SubPackage';\n\nconst g = self;\n\nexport default function (config, bridge) {\n  const { container = document.getElementById('__frame__'), onRender = noop, onFail = noop, type } = config;\n  const pageInfo = getPageInfoFromUrl(location.href);\n  debug('framework', 'pageInfo', pageInfo);\n  const { pagePath } = pageInfo;\n  if (pagePath) {\n    document.documentElement.style.fontSize = `${100 * document.documentElement.clientWidth / 750}px`;\n\n    loadPage(pagePath, () => {\n      const PageComponent = PageRegistry.getComponent(pagePath);\n      if (PageComponent) {\n        debug('framework', `Render page: ${pagePath}`);\n        if (onRender) {\n          onRender(type);\n        }\n        const messageChannel = getMessageChannel(pageInfo, bridge);\n\n        render(<PageComponent\n          pagePath={pagePath}\n          container={container}\n          messageChannel={messageChannel}\n        />, container);\n      } else {\n        const error = new Error(`page '${pagePath}' not found!`);\n        error.type = 'PAGE_NOT_FOUND';\n        if (onFail) {\n          onFail(error);\n        }\n      }\n    });\n  } else {\n    unmountComponentAtNode(container);\n  }\n}\n","const g = self;\n\nexport default function getMessageChannel(pageInfo, bridge) {\n  let unhandledMessages = [];\n\n  let callback;\n\n  g.send = (event) => {\n    if (callback) {\n      callback(event);\n    } else {\n      unhandledMessages.push(event);\n    }\n  };\n\n  g.addEventListener('message', g.send);\n\n  const { queryString, id, pagePath } = pageInfo;\n\n  const payload = {\n    pagePath,\n    id,\n    pageType: 'RENDER',\n    msgType: 'DOMContentLoaded',\n    viewId: g.WEBVIEWID,\n  };\n  if (queryString) {\n    payload.queryString = queryString;\n  }\n\n  bridge.call('postMessage', payload);\n\n  return {\n    id,\n    postMessage: function postMessage(data) {\n      bridge.call('postMessage', {\n        viewId: g.WEBVIEWID,\n        ...data,\n        id: data.id || id,\n      });\n    },\n    onMessage: function onMessage(fn) {\n      callback = fn;\n      if (unhandledMessages.length) {\n        unhandledMessages.forEach((message) => {\n          fn(message);\n        });\n        unhandledMessages = [];\n      }\n    },\n  };\n}\n","import './web-components';\nimport bridge from '@/apis/';\nimport {\n  Button,\n  CheckBox,\n  CheckBoxGroup,\n  Icon,\n  Image,\n  Input,\n  Label,\n  Radio,\n  RadioGroup,\n  ScrollView,\n  Text,\n  View,\n} from '@/components/';\nimport Nerv from '@/nerv';\n\nimport { debug } from '@/utils/log';\nimport {\n  EventHub,\n  App,\n  setCurrentPageImpl,\n  getCurrentPageImpl,\n  getCurrentPagesImpl,\n  getApp,\n  getAppImpl,\n  getCurrentPages,\n  getStartupParams,\n  setStartupParams,\n  Component,\n  getComponentClass,\n  StyleSheet,\n  createComponent,\n  Page,\n  $global,\n} from './framework/index';\n\nimport XMLRuntime from './xml-runtime';\n\nconst __mpStartTime = Date.now();\n\nself.Nerv = Nerv;\n\nself.XMLRuntime = XMLRuntime;\nself.MPUI = {\n  button: Button,\n  checkbox: CheckBox,\n  'checkbox-group': CheckBoxGroup,\n  icon: Icon,\n  image: Image,\n  input: Input,\n  label: Label,\n  radio: Radio,\n  'radio-group': RadioGroup,\n  'scroll-view': ScrollView,\n  text: Text,\n  view: View,\n};\n\nself.MP = {\n  bridge,\n  EventHub,\n  App,\n  setCurrentPageImpl,\n  getCurrentPageImpl,\n  getCurrentPagesImpl,\n  getApp,\n  getAppImpl,\n  getCurrentPages,\n  getStartupParams,\n  setStartupParams,\n  Component,\n  getComponentClass,\n  StyleSheet,\n  createComponent,\n  Page,\n  $global,\n};\n\nconst __mpCosts = Date.now() - __mpStartTime;\ndebug('framework', `web bundle costs ${__mpCosts} ms`);\n","import { isArray } from '@/nerv/utils';\nimport {\n  isNullOrUndef,\n  VirtualChildren,\n  EMPTY_CHILDREN,\n  isInvalid,\n} from '@/nerv/shared';\n\nexport type IterateFn = (\n  value: VirtualChildren | any,\n  index: number,\n  array: Array<VirtualChildren | any>\n) => any\n\nexport const Children = {\n  map(children: Array<VirtualChildren | any>, fn: IterateFn, ctx: any): any[] {\n    if (isNullOrUndef(children)) {\n      return children;\n    }\n    children = Children.toArray(children);\n    if (ctx && ctx !== children) {\n      fn = fn.bind(ctx);\n    }\n    return children.map(fn);\n  },\n  forEach(\n    children: Array<VirtualChildren | any>,\n    fn: IterateFn,\n    ctx: any,\n  ): void {\n    if (isNullOrUndef(children)) {\n      return;\n    }\n    children = Children.toArray(children);\n    if (ctx && ctx !== children) {\n      fn = fn.bind(ctx);\n    }\n    for (let i = 0, len = children.length; i < len; i++) {\n      const child = isInvalid(children[i]) ? null : children[i];\n\n      fn(child, i, children);\n    }\n  },\n  count(children: Array<VirtualChildren | any>): number {\n    children = Children.toArray(children);\n    return children.length;\n  },\n  only(children: Array<VirtualChildren | any>): VirtualChildren | any {\n    children = Children.toArray(children);\n    if (children.length !== 1) {\n      throw new Error('Children.only() expects only one child.');\n    }\n    return children[0];\n  },\n  toArray(\n    children: Array<VirtualChildren | any>,\n  ): Array<VirtualChildren | any> {\n    if (isNullOrUndef(children)) {\n      return [];\n    }\n    if (isArray(children)) {\n      const result = [];\n\n      flatten(children, result);\n\n      return result;\n    }\n    return EMPTY_CHILDREN.concat(children);\n  },\n};\n\nfunction flatten(arr, result) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    const value = arr[i];\n    if (isArray(value)) {\n      flatten(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import { extend, clone, isArray, isString, isNumber } from '@/nerv/utils';\nimport { isVText, isVNode, EMPTY_CHILDREN, VType, isNullOrUndef, isPortal, isInvalid } from '@/nerv/shared';\nimport createElement from './create-element';\nimport createVText from './vdom/create-vtext';\nimport { createVoid } from './vdom/create-void';\n\nexport default function cloneElement(vnode, props?: object, ...children): any {\n  if (isVText(vnode)) {\n    return createVText(vnode.text);\n  }\n  if (isString(vnode) || isNumber(vnode)) {\n    return createVText(vnode);\n  }\n  if (isInvalid(vnode)\n    || (!isInvalid(vnode) && isPortal(vnode.vtype, vnode))\n    || (vnode && (vnode.vtype & VType.Void))) {\n    return createVoid();\n  }\n  const properties = clone(extend(clone(vnode.props), props));\n  if (vnode.namespace) {\n    properties.namespace = vnode.namespace;\n  }\n  if ((vnode.vtype & VType.Composite) && !isNullOrUndef(vnode.ref)) {\n    properties.ref = vnode.ref;\n  }\n  let childrenTmp = (arguments.length > 2\n    ? [].slice.call(arguments, 2)\n    : vnode.children || properties.children) || [];\n  if (childrenTmp.length) {\n    if (childrenTmp.length === 1) {\n      childrenTmp = children[0];\n    }\n  }\n  if (isArray(vnode)) {\n    return vnode.map((item) => {\n      return cloneElement(item);\n    });\n  }\n  const newVNode = createElement(vnode.type, properties);\n  if (isArray(childrenTmp)) {\n    let _children = childrenTmp.map((child) => {\n      return cloneElement(child, child.props);\n    });\n    if (_children.length === 0) {\n      _children = EMPTY_CHILDREN;\n    }\n    if (isVNode(newVNode)) {\n      newVNode.children = _children;\n    }\n    newVNode.props.children = _children;\n  } else if (childrenTmp) {\n    if (isVNode(newVNode)) {\n      newVNode.children = cloneElement(childrenTmp);\n    }\n    newVNode.props.children = cloneElement(childrenTmp, childrenTmp.props);\n  }\n  return newVNode;\n}\n","import { isFunction, extend, clone } from '@/nerv/utils';\nimport {\n  Props,\n  ComponentLifecycle,\n  Refs,\n  EMPTY_OBJ,\n  Component as ComponentInst,\n  CompositeComponent,\n  EMPTY_CHILDREN,\n} from '@/nerv/shared';\nimport { enqueueRender } from './render-queue';\nimport { updateComponent } from './lifecycle';\nimport { Hook, HookEffect } from './hooks';\n\ninterface Component<P = {}, S = {}> extends ComponentLifecycle<P, S> {\n  _rendered: any;\n  dom: any;\n}\n\nclass Component<P, S> implements ComponentInst<P, S> {\n  public static defaultProps: {}\n\n  static getDerivedStateFromError? (error?): object | null\n\n  state: Readonly<S>\n\n  props: Readonly<P> & Readonly<Props>\n\n  prevProps: P\n\n  prevState: S\n\n  prevContext: object\n\n  _parentComponent: Component<any, any>\n\n  vnode: CompositeComponent\n\n  context: any\n\n  _dirty = true\n\n  _disable = true\n\n  _pendingStates: any[] = []\n\n  _pendingCallbacks: Function[] = []\n\n  refs: Refs\n\n  isReactComponent: Record<string, any>\n\n  _afterScheduleEffect = false\n\n  hooks: Hook[] = []\n\n  effects: HookEffect[] = EMPTY_CHILDREN\n\n  layoutEffects: HookEffect[] = EMPTY_CHILDREN\n\n  constructor(props?: P, context?: any) {\n    if (!this.state) {\n      this.state = {} as S;\n    }\n    this.props = props || ({} as P);\n    this.context = context || EMPTY_OBJ;\n    this.refs = {};\n  }\n\n  setState<K extends keyof S>(\n    state:\n      | ((prevState: Readonly<S>, props: P) => Pick<S, K> | S)\n      | (Pick<S, K> | S),\n    callback?: () => void,\n  ): void {\n    if (state) {\n      this._pendingStates.push(state);\n    }\n    if (isFunction(callback)) {\n      this._pendingCallbacks.push(callback);\n    }\n    if (!this._disable) {\n      enqueueRender(this);\n    }\n  }\n\n  getState() {\n    // tslint:disable-next-line:no-this-assignment\n    const { _pendingStates, state, props } = this;\n    if (!_pendingStates.length) {\n      return state;\n    }\n    const stateClone = clone(state);\n    const queue = _pendingStates.concat();\n    this._pendingStates.length = 0;\n    queue.forEach((nextState) => {\n      if (isFunction(nextState)) {\n        nextState = nextState.call(this, state, props);\n      }\n      extend(stateClone, nextState);\n    });\n\n    return stateClone as S;\n  }\n\n  clearCallBacks() {\n    // cached the length of callbacks, or callbacks may increase by calling them in the same loop\n    let len = this._pendingCallbacks.length;\n    while (this._dirty ? this._pendingCallbacks.length : len) {\n      const cb = this._pendingCallbacks.shift()!;\n      cb.call(this);\n      len--;\n    }\n  }\n\n  forceUpdate(callback?: Function) {\n    if (isFunction(callback)) {\n      this._pendingCallbacks.push(callback);\n    }\n    updateComponent(this, true);\n  }\n\n  // tslint:disable-next-line\n  public render(nextProps?: P, nextState?, nextContext?): any {}\n}\n\nComponent.prototype.isReactComponent = EMPTY_OBJ;\n\nexport default Component;\n","import { isNullOrUndef, ComponentLifecycle } from '@/nerv/shared';\nimport { isFunction, isUndefined } from '@/nerv/utils';\nimport Component from './component';\n\nexport interface Mixin<P, S> extends ComponentLifecycle<P, S> {\n  statics?: {\n    [key: string]: any;\n  };\n  mixins?: any;\n\n  displayName?: string;\n  propTypes?: { [index: string]: Function };\n\n  getDefaultProps? (): P;\n  getInitialState? (): S;\n}\n\nexport interface ComponentClass<P, S> extends Mixin<P, S> {\n  propTypes?: {};\n  contextTypes?: {};\n  childContextTypes?: {};\n  defaultProps?: P;\n  displayName?: string;\n  new (props?: P, context?: any): Component<P, S>;\n}\n\nexport interface ComponentSpec<P, S> extends Mixin<P, S> {\n  [propertyName: string]: any;\n  render (props?, context?): any;\n}\n\nexport interface ClassicComponent<P, S> extends Component<P, S> {\n  replaceState (nextState: S, callback?: () => any): void;\n  isMounted (): boolean;\n  getInitialState? (): S;\n}\n\nexport interface ClassicComponentClass<P, S> extends ComponentClass<P, S> {\n  new (props?: P, context?: any): ClassicComponent<P, S>;\n  getDefaultProps? (): P;\n}\n\n// don't autobind these methods since they already have guaranteed context.\nconst AUTOBIND_BLACKLIST = {\n  constructor: 1,\n  render: 1,\n  shouldComponentUpdate: 1,\n  // tslint:disable-next-line:object-literal-sort-keys\n  componentWillUpdate: 1,\n  componentWillReceiveProps: 1,\n  componentDidUpdate: 1,\n  componentWillMount: 1,\n  componentDidMount: 1,\n  componentWillUnmount: 1,\n  componentDidUnmount: 1,\n  getDerivedStateFromProps: 1,\n};\n\nfunction extend(base, props) {\n  for (const key in props) {\n    if (!isNullOrUndef(props[key])) {\n      base[key] = props[key];\n    }\n  }\n  return base;\n}\n\nfunction bindAll<P, S>(ctx: Component<P, S>) {\n  for (const i in ctx) {\n    const v = ctx[i];\n    if (typeof v === 'function' && !v.__bound && AUTOBIND_BLACKLIST[i] !== 1) {\n      (ctx[i] = v.bind(ctx)).__bound = true;\n    }\n  }\n}\n\nfunction collateMixins(mixins: Function[] | any[], keyed = {}): any {\n  for (let i = 0, len = mixins.length; i < len; i++) {\n    const mixin = mixins[i];\n\n    if (mixin.mixins) {\n      // Recursively collate sub-mixins\n      collateMixins(mixin.mixins, keyed);\n    }\n\n    for (const key in mixin as Function[]) {\n      if (mixin.hasOwnProperty(key) && typeof mixin[key] === 'function') {\n        (keyed[key] || (keyed[key] = [])).push(mixin[key]);\n      }\n    }\n  }\n  return keyed;\n}\n\nfunction multihook(hooks: Function[], mergeFn?: Function): any {\n  return function () {\n    let ret;\n\n    for (let i = 0, len = hooks.length; i < len; i++) {\n      const hook = hooks[i];\n      const r = hook.apply(this, arguments);\n\n      if (mergeFn) {\n        ret = mergeFn(ret, r);\n      } else if (!isUndefined(r)) {\n        ret = r;\n      }\n    }\n\n    return ret;\n  };\n}\n\nfunction mergeNoDupes(previous: any, current: any) {\n  if (!isUndefined(current)) {\n    if (!previous) {\n      previous = {};\n    }\n\n    for (const key in current) {\n      if (current.hasOwnProperty(key)) {\n        if (previous.hasOwnProperty(key)) {\n          throw new Error(\n            `Mixins return duplicate key ${key} in their return values`,\n          );\n        }\n\n        previous[key] = current[key];\n      }\n    }\n  }\n  return previous;\n}\n\nfunction applyMixin<P, S>(\n  key: string,\n  inst: Component<P, S>,\n  mixin: Function[],\n): void {\n  const hooks = isUndefined(inst[key]) ? mixin : mixin.concat(inst[key]);\n  inst[key] = key === 'getDefaultProps'\n    || key === 'getInitialState'\n    || key === 'getChildContext'\n    ? multihook(hooks, mergeNoDupes)\n    : multihook(hooks);\n}\n\nfunction applyMixins(Cl: any, mixins: Function[] | any[]) {\n  for (const key in mixins) {\n    if (mixins.hasOwnProperty(key)) {\n      const mixin = mixins[key];\n\n      const inst = key === 'getDefaultProps' ? Cl : Cl.prototype;\n\n      if (isFunction(mixin[0])) {\n        applyMixin(key, inst, mixin);\n      } else {\n        inst[key] = mixin;\n      }\n    }\n  }\n}\n\nexport default function createClass<P, S>(\n  obj: ComponentSpec<P, S>,\n): ClassicComponentClass<P, S> {\n  class BoundClass extends Component<P, S> {\n    static defaultProps\n\n    static displayName = obj.displayName || 'Component'\n\n    static propTypes = obj.propTypes\n\n    static mixins = obj.mixins && collateMixins(obj.mixins)\n\n    static getDefaultProps = obj.getDefaultProps\n\n    constructor(props, context) {\n      super(props, context);\n      bindAll(this);\n      if (this.getInitialState) {\n        this.state = this.getInitialState();\n      }\n    }\n\n    getInitialState? (): S\n\n    replaceState(nextState: S, callback?: () => any) {\n      this.setState(nextState, callback);\n    }\n\n    isMounted(): boolean {\n      return !this.dom;\n    }\n  }\n\n  extend(BoundClass.prototype, obj);\n\n  if (obj.statics) {\n    extend(BoundClass, obj.statics);\n  }\n\n  if (obj.mixins) {\n    applyMixins(BoundClass, collateMixins(obj.mixins));\n  }\n\n  BoundClass.defaultProps = isUndefined(BoundClass.getDefaultProps)\n    ? undefined\n    : BoundClass.getDefaultProps();\n\n  return BoundClass;\n}\n","import { isUndefined, objectIs } from '@/nerv/utils';\nimport { Emiter } from './emiter';\nimport Component from './component';\n\nexport let uid = 0;\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nexport interface ProviderProps<T> {\n  value: T;\n}\n\nexport interface ConsumerProps {\n  children: Function;\n}\n\nexport interface ConsumerState<T> {\n  value: T;\n}\n\nexport interface Context<T> {\n  Provider: Component<ProviderProps<T>>;\n  Consumer: Component<ConsumerProps, ConsumerState<T>>;\n  _id: string;\n  _defaultValue: T;\n}\n\nexport function createContext<T>(defaultValue: T): Context<T> {\n  const contextProp = `__context_${uid++}__`;\n\n  class Provider extends Component<ProviderProps<T>> {\n    static isContextProvider = true\n\n    emiter = new Emiter(this.props.value)\n\n    getChildContext() {\n      return {\n        [contextProp]: this.emiter,\n      };\n    }\n\n    componentWillReceiveProps(nextProps: ProviderProps<T>) {\n      if (!objectIs(this.props.value, nextProps.value)) {\n        this.emiter.set(nextProps.value);\n      }\n    }\n\n    render() {\n      return this.props.children;\n    }\n  }\n\n  // tslint:disable-next-line: max-classes-per-file\n  class Consumer extends Component<ConsumerProps, ConsumerState<T>> {\n    static isContextConsumer = true\n\n    state = {\n      value: this.getContextValue(),\n    }\n\n    context: {\n      [contextProp: string]: Emiter<T> | undefined;\n    }\n\n    componentWillMount() {\n      const emiter = this.context[contextProp];\n      if (emiter) {\n        emiter.off(this.onUpdate);\n      }\n    }\n\n    componentDidMount() {\n      const emiter = this.context[contextProp];\n      if (emiter) {\n        emiter.on(this.onUpdate);\n      }\n    }\n\n    onUpdate = (value: T) => {\n      if (!objectIs(value, this.state.value)) {\n        this.setState({\n          value: this.getContextValue(),\n        });\n      }\n    }\n\n    getContextValue(): T {\n      const emiter = this.context[contextProp];\n      return isUndefined(emiter) ? defaultValue : emiter.value;\n    }\n\n    render() {\n      return onlyChild(this.props.children)(this.state.value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer,\n    _id: contextProp,\n    _defaultValue: defaultValue,\n  } as any;\n}\n","import { isFunction, isString, isUndefined } from '@/nerv/utils';\nimport {\n  Props,\n  VNode,\n  VirtualChildren,\n  EMPTY_CHILDREN,\n} from '@/nerv/shared';\nimport h from './vdom/h';\nimport FullComponent from './full-component';\n// import StatelessComponent from './stateless-component'\nimport CurrentOwner from './current-owner';\nimport SVGPropertyConfig from './vdom/svg-property-config';\nimport Component from './component';\n\nfunction transformPropsForRealTag(type: string, props: Props) {\n  const newProps: Props = {};\n  for (const propName in props) {\n    const propValue = props[propName];\n    if (propName === 'defaultValue') {\n      newProps.value = props.value || props.defaultValue;\n      continue;\n    }\n    const svgPropName = SVGPropertyConfig.DOMAttributeNames[propName];\n    if (svgPropName && svgPropName !== propName) {\n      newProps[svgPropName] = propValue;\n      continue;\n    }\n    newProps[propName] = propValue;\n  }\n  return newProps;\n}\n\n/**\n *\n * @param props\n * @param defaultProps\n * defaultProps should respect null but ignore undefined\n * @see: https://facebook.github.io/react/docs/react-component.html#defaultprops\n */\nfunction transformPropsForComponent(props: Props, defaultProps?: Props) {\n  const newProps: any = {};\n  for (const propName in props) {\n    const propValue = props[propName];\n    newProps[propName] = propValue;\n  }\n  if (defaultProps) {\n    for (const propName in defaultProps) {\n      if (isUndefined(newProps[propName])) {\n        newProps[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return newProps;\n}\n\nfunction createElement<T>(\n  type: string | Function | Component<any, any>,\n  properties?: T & Props | null,\n  ..._children: Array<VirtualChildren | null>\n) {\n  let children: any = _children;\n  if (_children) {\n    if (_children.length === 1) {\n      children = _children[0];\n    } else if (_children.length === 0) {\n      children = undefined;\n    }\n  }\n  let props;\n  if (isString(type)) {\n    props = transformPropsForRealTag(type, properties as Props);\n    props.owner = CurrentOwner.current;\n    return h(type, props, children as any) as VNode;\n  } else if (isFunction(type)) {\n    props = transformPropsForComponent(\n      properties as any,\n      (type as any).defaultProps,\n    );\n    if (!props.children || props.children === EMPTY_CHILDREN) {\n      props.children = children || children === 0 ? children : EMPTY_CHILDREN;\n    }\n    props.owner = CurrentOwner.current;\n    return new FullComponent(type, props);\n  }\n  return type;\n}\n\nexport default createElement;\n","export interface RefObject<T> {\n  current?: T\n}\n\nexport function createRef<T> (): RefObject<T> {\n  return {}\n}\n\nexport function forwardRef (cb: Function): Function {\n  const fn = (props) => {\n    const ref = props.ref\n    delete props.ref\n    return cb(props, ref)\n  }\n  fn._forwarded = true\n  return fn\n}\n","import Component from './component'\n\nconst Current: {\n  current: null | Component<any, any>,\n  index: number\n} = {\n  current: null,\n  index: 0\n}\n\nexport default Current\n","import { isValidElement as isValidNervElement, VType, isComponent, isInvalid } from '@/nerv/shared'\nimport { nextTick } from '@/nerv/utils'\nimport { getChildContext } from './lifecycle'\nimport { render } from './render'\nimport { unmount } from './vdom/unmount'\nimport createElement from './create-element'\nimport Component from './component'\n\nexport function unmountComponentAtNode (dom) {\n  const component = dom._component\n  if (isValidNervElement(component)) {\n    unmount(component, dom)\n    delete dom._component\n    return true\n  }\n  return false\n}\n\nexport function findDOMNode (component) {\n  if (isInvalid(component)) {\n    return null\n  }\n  return isComponent(component)\n    ? component.vnode.dom\n    : isValidNervElement(component)\n      ? component.dom : component\n}\n\nexport function createFactory (type) {\n  return createElement.bind(null, type)\n}\n\nclass WrapperComponent<P, S> extends Component<P, S> {\n  getChildContext () {\n    // tslint:disable-next-line\n    return this.props.context\n  }\n\n  render () {\n    return this.props.children\n  }\n}\n\nexport function unstable_renderSubtreeIntoContainer (\n  parentComponent,\n  vnode,\n  container,\n  callback\n) {\n  // @TODO: should handle props.context?\n  const wrapper = createElement(\n    WrapperComponent,\n    { context: getChildContext(parentComponent, parentComponent.context) },\n    vnode\n  )\n  const rendered = render(wrapper as any, container)\n  if (callback) {\n    callback.call(rendered)\n  }\n  return rendered\n}\n\nexport function isValidElement (element) {\n  return (\n    isValidNervElement(element) && (element.vtype & (VType.Composite | VType.Node)) > 0\n  )\n}\n\nexport const unstable_batchedUpdates = nextTick\n","class Emiter<T> {\n  public value: T\n\n  private handlers: Function[] = []\n\n  constructor(value: T) {\n    this.value = value;\n  }\n\n  on(handler: Function) {\n    this.handlers.push(handler);\n  }\n\n  off(handler: Function) {\n    this.handlers = this.handlers.filter((h) => h !== handler);\n  }\n\n  set(value: T) {\n    this.value = value;\n    this.handlers.forEach((h) => h(this.value));\n  }\n}\n\nexport {\n  Emiter,\n};\n","import { isFunction, MapClass } from '@/nerv/utils';\nimport { noop } from '@/nerv/shared';\nimport { supportedPassiveEventMap } from './passive-event';\n\nconst ONINPUT = 'oninput';\nconst ONPROPERTYCHANGE = 'onpropertychange';\n\nconst delegatedEvents = new MapClass();\n\nconst bindFocus = false;\ndeclare global {\n  interface Event {\n    persist: Function;\n  }\n}\n\nif (typeof Event !== 'undefined' && !Event.prototype.persist) {\n  // tslint:disable-next-line:no-empty\n  Event.prototype.persist = noop;\n}\n\nexport function attachEvent(\n  domNode: Element,\n  eventName: string,\n  handler: Function,\n) {\n  eventName = fixEvent(domNode, eventName);\n  /* istanbul ignore next */\n  if (eventName === ONPROPERTYCHANGE) {\n    processOnPropertyChangeEvent(domNode, handler);\n    return;\n  }\n  const parsedEvent = parseEventName(eventName);\n  let delegatedRoots = delegatedEvents.get(normalizeEventName(eventName));\n  if (!delegatedRoots) {\n    delegatedRoots = new MapClass();\n  }\n  const event = attachEventToNode(domNode, parsedEvent, delegatedRoots);\n  delegatedEvents.set(normalizeEventName(eventName), delegatedRoots);\n  if (isFunction(handler)) {\n    delegatedRoots.set(domNode, {\n      eventHandler: (e) => {\n        if (parsedEvent.stop) {\n          e.stopPropagation();\n        }\n        handler(e);\n      },\n      event,\n    });\n  }\n}\n\nexport function detachEvent(\n  domNode: Element,\n  eventName: string,\n  handler: Function,\n) {\n  eventName = fixEvent(domNode, eventName);\n  if (eventName === ONPROPERTYCHANGE) {\n    return;\n  }\n  const parsedEvent = parseEventName(eventName);\n  const delegatedRoots = delegatedEvents.get(normalizeEventName(eventName));\n  const event = delegatedRoots.get(domNode);\n  if (event) {\n    domNode.removeEventListener(parsedEvent.name, event.event, false);\n    /* istanbul ignore next */\n    const delegatedRootsSize = delegatedRoots.size;\n    if (delegatedRoots.delete(domNode) && delegatedRootsSize === 0) {\n      delegatedEvents.delete(normalizeEventName(eventName));\n    }\n  }\n}\n\nlet propertyChangeActiveElement;\nlet propertyChangeActiveElementValue;\nlet propertyChangeActiveElementValueProp;\nconst propertyChangeActiveHandlers = {};\n\n/* istanbul ignore next */\nfunction propertyChangeHandler(event) {\n  if (event.propertyName !== 'value') {\n    return;\n  }\n  const target = event.target || event.srcElement;\n  const val = target.value;\n  if (val === propertyChangeActiveElementValue) {\n    return;\n  }\n  propertyChangeActiveElementValue = val;\n  const handler = propertyChangeActiveHandlers[target.name];\n  if (isFunction(handler)) {\n    handler.call(target, event);\n  }\n}\n\n/* istanbul ignore next */\nfunction processOnPropertyChangeEvent(node, handler) {\n  propertyChangeActiveHandlers[node.name] = handler;\n  if (!bindFocus) {\n    // bindFocus = true\n    node.addEventListener(\n      'focusin',\n      () => {\n        unbindOnPropertyChange();\n        bindOnPropertyChange(node);\n      },\n      false,\n    );\n    node.addEventListener('focusout', unbindOnPropertyChange, false);\n  }\n}\n\n/* istanbul ignore next */\nfunction bindOnPropertyChange(node) {\n  propertyChangeActiveElement = node;\n  propertyChangeActiveElementValue = node.value;\n  propertyChangeActiveElementValueProp = Object.getOwnPropertyDescriptor(\n    node.constructor.prototype,\n    'value',\n  );\n  Object.defineProperty(propertyChangeActiveElement, 'value', {\n    get() {\n      return propertyChangeActiveElementValueProp.get.call(this);\n    },\n    set(val) {\n      propertyChangeActiveElementValue = val;\n      propertyChangeActiveElementValueProp.set.call(this, val);\n    },\n  });\n  propertyChangeActiveElement.addEventListener(\n    'propertychange',\n    propertyChangeHandler,\n    false,\n  );\n}\n\n/* istanbul ignore next */\nfunction unbindOnPropertyChange() {\n  if (!propertyChangeActiveElement) {\n    return;\n  }\n  delete propertyChangeActiveElement.value;\n  propertyChangeActiveElement.removeEventListener(\n    'propertychange',\n    propertyChangeHandler,\n    false,\n  );\n\n  propertyChangeActiveElement = null;\n  propertyChangeActiveElementValue = null;\n  propertyChangeActiveElementValueProp = null;\n}\n\nfunction detectCanUseOnInputNode(node) {\n  const nodeName = node.nodeName && node.nodeName.toLowerCase();\n  const { type } = node;\n  return (\n    (nodeName === 'input' && /text|password/.test(type))\n    || nodeName === 'textarea'\n  );\n}\n\nfunction normalizeEventName(eventName: string) {\n  const reg = /^(on|bind|catch|capture-bind|capture-catch)/;\n\n  return eventName.replace(reg, '');\n}\n\nfunction fixEvent(node: Element, eventName: string) {\n  const tapEventReg = /([Tt]ap)$/;\n  if (eventName === 'onDoubleClick') {\n    eventName = 'ondblclick';\n  } else if (eventName === 'onTouchTap') {\n    eventName = 'onclick';\n    // tslint:disable-next-line:prefer-conditional-expression\n  } else if (eventName === 'onChange' && detectCanUseOnInputNode(node)) {\n    eventName = ONINPUT in window ? ONINPUT : ONPROPERTYCHANGE;\n  } else if (tapEventReg.test(eventName)) {\n    eventName = eventName.replace(tapEventReg, 'click');\n  } else {\n    eventName = eventName.toLowerCase();\n  }\n  return eventName;\n}\n\nfunction parseEventName(name) {\n  let event: any = null;\n\n  if (name.startsWith('on')) {\n    event = {\n      raw: name,\n      name: name.slice(2),\n      stop: false,\n    };\n  } else if (name.startsWith('bind')) {\n    event = {\n      raw: name,\n      name: name.slice(4),\n      stop: false,\n    };\n  } else if (name.startsWith('catch')) {\n    event = {\n      raw: name,\n      name: name.slice(5),\n      stop: true,\n    };\n  } else if (name.startsWith('capture-bind')) {\n    event = {\n      raw: name,\n      name: name.slice(12),\n      stop: false,\n      capture: true,\n    };\n  } else if (name.startsWith('capture-catch')) {\n    event = {\n      raw: name,\n      name: name.slice(13),\n      stop: true,\n      capture: true,\n    };\n  }\n\n  return event;\n}\n\nfunction attachEventToNode(node, parsedEvent, delegatedRoots) {\n  const eventHandler = (event) => {\n    const eventToTrigger = delegatedRoots.get(node);\n    if (eventToTrigger && eventToTrigger.eventHandler) {\n      const eventData = {\n        currentTarget: node,\n      };\n      /* istanbul ignore next */\n      Object.defineProperties(event, {\n        currentTarget: {\n          configurable: true,\n          get() {\n            return eventData.currentTarget;\n          },\n        },\n      });\n      eventToTrigger.eventHandler(event);\n    }\n  };\n\n  node.addEventListener(parsedEvent.name, eventHandler, parsedEvent.capture || supportedPassiveEventMap[parsedEvent.name] || false);\n\n  return eventHandler;\n}\n","export function Fragment (props) {\n  return props.children\n}\n","import { VType, CompositeComponent, Ref } from '@/nerv/shared';\nimport { isUndefined, isArray } from '@/nerv/utils';\nimport {\n  mountComponent,\n  reRenderComponent,\n  unmountComponent,\n  getContextByContextType,\n} from './lifecycle';\nimport Component from './component';\nimport options from './options';\n\nclass ComponentWrapper implements CompositeComponent {\n  vtype = VType.Composite\n\n  type: any\n\n  name: string\n\n  _owner: any\n\n  props: any\n\n  component: Component<any, any>\n\n  context: any\n\n  key: any\n\n  dom: Element | null\n\n  _rendered: any\n\n  ref: Ref\n\n  constructor(type, props) {\n    this.type = type;\n    this.name = type.name;\n    if (isUndefined(this.name)) {\n      const names = type.toString().match(/^function\\s*([^\\s(]+)/);\n      this.name = isArray(names) ? names[0] : 'Component';\n    }\n    type.displayName = this.name;\n    this._owner = props.owner;\n    delete props.owner;\n    if ((this.ref = props.ref)) {\n      delete props.ref;\n    }\n    if (type._forwarded) {\n      if (!isUndefined(this.ref)) {\n        props.ref = this.ref;\n      }\n      delete this.ref;\n    }\n    this.props = props;\n    this.key = props.key || null;\n    this.dom = null;\n    options.afterCreate(this);\n  }\n\n  init(parentContext, parentComponent) {\n    options.beforeMount(this);\n    const dom = mountComponent(this, parentContext, parentComponent);\n    options.afterMount(this);\n    return dom;\n  }\n\n  update(previous, current, parentContext, domNode?) {\n    this.context = getContextByContextType(this, parentContext);\n    options.beforeUpdate(this);\n    const dom = reRenderComponent(previous, this);\n    options.afterUpdate(this);\n    return dom;\n  }\n\n  destroy() {\n    options.beforeUnmount(this);\n    unmountComponent(this);\n  }\n}\n\nexport default ComponentWrapper;\n","import { isFunction, isUndefined, nextTick, isArray, objectIs } from '@/nerv/utils';\nimport { isNullOrUndef } from '@/nerv/shared';\nimport Current from './current-owner';\nimport Component from './component';\nimport { RefObject } from './create-ref';\nimport { Context } from './create-context';\nimport { enqueueRender } from './render-queue';\n\nexport function getHooks(index: number): Hook {\n  if (Current.current === null) {\n    throw new Error('invalid hooks call: hooks can only be called in a stateless component.');\n  }\n  const { hooks } = Current.current;\n  if (index >= hooks.length) {\n    hooks.push({} as any);\n  }\n  return hooks[index];\n}\n\ntype SetStateAction<S> = S | ((prevState: S) => S)\n\ntype Dispatch<A> = (value: A) => void\n\ntype EffectCallback = () => (void | (() => void))\n\ntype DependencyList = ReadonlyArray<any>\n\ntype Reducer<S, A> = (prevState: S, action: A) => S\n\ntype ReducerState<R extends Reducer<any, any>> = R extends Reducer<infer S, any> ? S : never\n\ntype ReducerAction<R extends Reducer<any, any>> = R extends Reducer<any, infer A> ? A : never\n\nexport interface HookEffect {\n  deps?: DependencyList;\n  effect: EffectCallback;\n  cleanup?: Function;\n}\n\nexport interface HookState<S> {\n  component: Component<any, any>;\n  state: [S, Dispatch<SetStateAction<S>>];\n}\n\nexport interface HookRef<T> {\n  ref?: RefObject<T>;\n}\n\nexport interface HookReducer<R extends Reducer<any, any>, I> {\n  component: Component<any, any>;\n  state: [ReducerState<R>, Dispatch<ReducerAction<R>>];\n}\n\nexport interface HookCallback<T> {\n  deps?: DependencyList;\n  callback: Function;\n  value: T;\n}\n\nexport interface HookContext {\n  context?: true;\n}\n\n// tslint:disable-next-line:max-line-length\nexport type Hook = HookEffect & HookState<unknown> & HookReducer<any, unknown> & HookRef<unknown> & HookCallback<any> & HookContext\n\nexport function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] {\n  if (isFunction(initialState)) {\n    initialState = initialState();\n  }\n  const hook = getHooks(Current.index++) as HookState<S>;\n  if (!hook.state) {\n    hook.component = Current.current!;\n    hook.state = [\n      initialState,\n      (action) => {\n        hook.state[0] = isFunction(action) ? action(hook.state[0]) : action;\n        hook.component._disable = false;\n        hook.component.setState({});\n      },\n    ];\n  }\n  return hook.state;\n}\n\nexport function useReducer<R extends Reducer<any, any>, I>(\n  reducer: R,\n  initialState: I & ReducerState<R>,\n  initializer?: (arg: I & ReducerState<R>) => ReducerState<R>,\n): [ReducerState<R>, Dispatch<ReducerAction<R>>] {\n  if (isFunction(initialState)) {\n    initialState = initialState();\n  }\n  const hook = getHooks(Current.index++) as HookReducer<R, I>;\n  if (!hook.state) {\n    hook.component = Current.current!;\n    hook.state = [\n      isUndefined(initializer) ? initialState : initializer(initialState),\n      (action) => {\n        hook.state[0] = reducer(hook.state[0], action);\n        hook.component._disable = false;\n        hook.component.setState({});\n      },\n    ];\n  }\n  return hook.state;\n}\n\nfunction areDepsChanged(prevDeps?: DependencyList, deps?: DependencyList) {\n  if (isNullOrUndef(prevDeps) || isNullOrUndef(deps)) {\n    return true;\n  }\n  return deps.some((d, i) => !objectIs(d, prevDeps[i]));\n}\n\nexport function invokeEffects(component: Component<any, any>, delay = false) {\n  const effects = delay ? component.effects : component.layoutEffects;\n  (effects || []).forEach((hook) => {\n    if (isFunction(hook.cleanup)) {\n      hook.cleanup();\n    }\n    const result = hook.effect();\n    if (isFunction(result)) {\n      hook.cleanup = result;\n    }\n  });\n\n  if (delay) {\n    component.effects = [];\n  } else {\n    component.layoutEffects = [];\n  }\n}\n\nlet scheduleEffectComponents: Array<Component<any, any>> = [];\n\nfunction invokeScheduleEffects(component: Component) {\n  if (!component._afterScheduleEffect) {\n    component._afterScheduleEffect = true;\n    scheduleEffectComponents.push(component);\n    if (scheduleEffectComponents.length === 1) {\n      nextTick(() => {\n        setTimeout(() => {\n          scheduleEffectComponents.forEach((c) => {\n            c._afterScheduleEffect = false;\n            invokeEffects(c, true);\n          });\n          scheduleEffectComponents = [];\n        }, 0);\n      });\n    }\n  }\n}\n\nfunction useEffectImpl(effect: EffectCallback, deps?: DependencyList, delay = false) {\n  const hook = getHooks(Current.index++);\n  if (areDepsChanged(hook.deps, deps)) {\n    hook.effect = effect;\n    hook.deps = deps;\n\n    if (delay) {\n      Current.current!.effects = Current.current!.effects.concat(hook);\n      invokeScheduleEffects(Current.current!);\n    } else {\n      Current.current!.layoutEffects = Current.current!.layoutEffects.concat(hook);\n    }\n  }\n}\n\nexport function useEffect(effect: EffectCallback, deps?: DependencyList): void {\n  useEffectImpl(effect, deps, true);\n}\n\nexport function useLayoutEffect(effect: EffectCallback, deps?: DependencyList): void {\n  useEffectImpl(effect, deps);\n}\n\nexport function useRef<T>(initialValue?: T): RefObject<T> {\n  const hook = getHooks(Current.index++) as HookRef<T>;\n  if (!hook.ref) {\n    hook.ref = {\n      current: initialValue,\n    };\n  }\n  return hook.ref;\n}\n\nexport function useMemo<T>(factory: () => T, deps?: DependencyList): T {\n  const hook = getHooks(Current.index++);\n  if (areDepsChanged(hook.deps, deps)) {\n    hook.deps = deps;\n    hook.callback = factory;\n    hook.value = factory();\n  }\n  return hook.value;\n}\n\nexport function useCallback<T extends(...args: never[]) => unknown> (callback: T, deps: DependencyList): T {\n  return useMemo(() => callback, deps);\n}\n\nexport function useContext<T>(context: Context<T>): T {\n  const provider = Current.current!.context[context._id];\n  if (isUndefined(provider)) {\n    return context._defaultValue;\n  }\n  const hook = getHooks(Current.index++);\n  // should update when value changes with shouldComponentUpdate:false Component on top\n  if (isUndefined(hook.context)) {\n    hook.context = true;\n    const c = Current.current!;\n    provider.on(() => enqueueRender(c));\n  }\n  return provider.value;\n}\n\nexport function useImperativeHandle<T, R extends T>(\n  ref: RefObject<T> | undefined,\n  init: () => R,\n  deps?: DependencyList,\n): void {\n  useLayoutEffect(() => {\n    if (isFunction(ref)) {\n      ref(init());\n      return () => ref(null);\n    } else if (!isUndefined(ref)) {\n      ref.current = init();\n      return () => {\n        delete ref.current;\n      };\n    }\n  }, isArray(deps) ? deps.concat([ref]) : undefined);\n}\n","// tslint:disable:no-conditional-assignment\nimport { render } from './render'\n\nexport function hydrate (vnode, container: Element, callback?: Function) {\n  if (container !== null) {\n    // lastChild causes less reflow than firstChild\n    let dom = container.lastChild as Element\n    // there should be only a single entry for the root\n    while (dom) {\n      const next = dom.previousSibling\n      container.removeChild(dom)\n      dom = next as Element\n    }\n    return render(vnode, container, callback)\n  }\n}\n","import { nextTick } from '@/nerv/utils';\nimport Component from './component';\nimport PureComponent from './pure-component';\nimport { render } from './render';\nimport createElement from './create-element';\nimport cloneElement from './clone-element';\nimport { Children } from './children';\nimport { hydrate } from './hydrate';\nimport options from './options';\nimport { createPortal } from './vdom/create-portal';\nimport { version } from './version';\nimport {\n  unmountComponentAtNode,\n  findDOMNode,\n  unstable_renderSubtreeIntoContainer,\n  createFactory,\n  unstable_batchedUpdates,\n  isValidElement,\n} from './dom';\nimport { PropTypes } from './prop-types'; // for React 15- compat\n// tslint:disable-next-line: max-line-length\nimport { getHooks, useEffect, useLayoutEffect, useReducer, useState, useRef, useCallback, useMemo, useImperativeHandle, useContext } from './hooks';\nimport { createRef, forwardRef } from './create-ref';\nimport { memo } from './memo';\nimport { createContext } from './create-context';\nimport { renderComponent } from './lifecycle';\nimport Current from './current-owner';\nimport { Fragment } from './fragment';\nimport createNervClass from './create-class';\n\nexport {\n  createNervClass,\n  Children,\n  Component,\n  PureComponent,\n  createElement,\n  cloneElement,\n  render,\n  nextTick,\n  options,\n  findDOMNode,\n  isValidElement,\n  unmountComponentAtNode,\n  createPortal,\n  unstable_renderSubtreeIntoContainer,\n  hydrate,\n  createFactory,\n  unstable_batchedUpdates,\n  version,\n  PropTypes,\n  createRef,\n  forwardRef,\n  memo,\n  createContext,\n  renderComponent,\n  getHooks,\n  Current,\n  Fragment,\n  useEffect, useLayoutEffect, useReducer, useState, useRef, useCallback, useMemo, useImperativeHandle, useContext,\n};\n\nexport default {\n  createNervClass,\n  Children,\n  Component,\n  PureComponent,\n  createElement,\n  cloneElement,\n  render,\n  nextTick,\n  options,\n  findDOMNode,\n  isValidElement,\n  unmountComponentAtNode,\n  createPortal,\n  unstable_renderSubtreeIntoContainer,\n  hydrate,\n  createFactory,\n  unstable_batchedUpdates,\n  version,\n  PropTypes,\n  createRef,\n  forwardRef,\n  memo,\n  createContext,\n  renderComponent,\n  getHooks,\n  Current,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  useImperativeHandle,\n  useContext,\n  Fragment,\n};\n","// import { extend, isFunction, isNumber, isString } from '@/nerv/utils'\nimport { extend, isFunction, isNumber, isString, clone, isUndefined, isArray } from '@/nerv/utils';\nimport {\n  isNullOrUndef,\n  CompositeComponent,\n  isComponent,\n  isInvalid,\n  VText,\n  VVoid,\n  VNode,\n  VType,\n  EMPTY_OBJ,\n  isComposite,\n} from '@/nerv/shared';\nimport CurrentOwner from './current-owner';\nimport createElement from './vdom/create-element';\nimport createVText from './vdom/create-vtext';\nimport { createVoid } from './vdom/create-void';\nimport patch from './vdom/patch';\nimport FullComponent from './full-component';\nimport { unmount } from './vdom/unmount';\nimport Ref from './vdom/ref';\nimport Component from './component';\nimport { invokeEffects } from './hooks';\nimport { Emiter } from './emiter';\n\nexport type ParentContext = Record<string, Emiter<any>>\n\nconst readyComponents: any[] = [];\n\nexport function errorCatcher(fn: Function, component: Component<any, any>) {\n  try {\n    return fn();\n  } catch (error) {\n    errorHandler(component, error);\n  }\n}\n\nfunction errorHandler(component: Component<any, any>, error) {\n  // if(!component) { throw error ; return }\n  let boundary;\n  while (true) {\n    const { getDerivedStateFromError } = (component as any).constructor;\n    if (isFunction(getDerivedStateFromError) || isFunction(component.componentDidCatch)) {\n      boundary = component;\n      break;\n    } else if (component._parentComponent) {\n      component = component._parentComponent;\n    } else {\n      break;\n    }\n  }\n  if (boundary) {\n    const { getDerivedStateFromError } = (boundary as any).constructor;\n    const { _disable } = boundary;\n    boundary._disable = false;\n    if (isFunction(getDerivedStateFromError)) {\n      component.setState(getDerivedStateFromError(error));\n    } else if (isFunction(component.componentDidCatch)) {\n      boundary.componentDidCatch(error);\n    }\n    boundary._disable = _disable;\n  } else {\n    throw error;\n  }\n}\n\nexport function ensureVirtualNode(rendered: any): VText | VVoid | VNode {\n  if (isNumber(rendered) || isString(rendered)) {\n    return createVText(rendered);\n  } else if (isInvalid(rendered)) {\n    return createVoid();\n  } else if (isArray(rendered)) {\n    rendered = rendered.length === 0 ? createVoid() : rendered.map(ensureVirtualNode);\n  }\n  return rendered;\n}\n\nexport function mountVNode(vnode, parentContext: any, parentComponent?) {\n  return createElement(vnode, false, parentContext, parentComponent);\n}\n\nexport function getContextByContextType(vnode: FullComponent, parentContext: ParentContext) {\n  const { contextType } = vnode.type;\n  const hasContextType = !isUndefined(contextType);\n  const provider = hasContextType ? (parentContext[contextType._id]) : null;\n  const context = hasContextType\n    ? (\n      !isNullOrUndef(provider) ? provider.value : contextType._defaultValue\n    )\n    : parentContext;\n  return context;\n}\n\nexport function mountComponent(\n  vnode: FullComponent,\n  parentContext: ParentContext,\n  parentComponent,\n) {\n  const { ref } = vnode;\n  if (vnode.type.prototype && vnode.type.prototype.render) {\n    const context = getContextByContextType(vnode, parentContext);\n    vnode.component = new vnode.type(vnode.props, context);\n  } else {\n    const c = new Component(vnode.props, parentContext);\n    c.render = () => vnode.type.call(c, c.props, c.context);\n    vnode.component = c;\n  }\n  const { component } = vnode;\n  component.vnode = vnode;\n  if (isComponent(parentComponent)) {\n    component._parentComponent = parentComponent as any;\n  }\n  const newState = callGetDerivedStateFromProps(vnode.props, component.state, component);\n  if (!isUndefined(newState)) {\n    component.state = newState;\n  }\n  if (!hasNewLifecycle(component) && isFunction(component.componentWillMount)) {\n    errorCatcher(() => {\n      (component as any).componentWillMount();\n    }, component);\n    component.state = component.getState();\n    component.clearCallBacks();\n  }\n  component._dirty = false;\n  const rendered = renderComponent(component);\n  rendered.parentVNode = vnode;\n  component._rendered = rendered;\n  if (!isNullOrUndef(ref)) {\n    Ref.attach(vnode, ref, vnode.dom as Element);\n  }\n  const dom = (vnode.dom = mountVNode(\n    rendered,\n    getChildContext(component, parentContext),\n    component,\n  ) as Element);\n  invokeEffects(component);\n  if (isFunction(component.componentDidMount)) {\n    readyComponents.push(component);\n  }\n  component._disable = false;\n  return dom;\n}\n\nexport function getChildContext(component, context = EMPTY_OBJ) {\n  if (isFunction(component.getChildContext)) {\n    return extend(clone(context), component.getChildContext());\n  }\n  return clone(context);\n}\n\nexport function renderComponent(component: Component<any, any>) {\n  CurrentOwner.current = component;\n  CurrentOwner.index = 0;\n  invokeEffects(component, true);\n  let rendered;\n  errorCatcher(() => {\n    rendered = component.render();\n  }, component);\n  rendered = ensureVirtualNode(rendered);\n  CurrentOwner.current = null;\n  return rendered;\n}\n\nexport function flushMount() {\n  if (!readyComponents.length) {\n    return;\n  }\n  // @TODO: perf\n  const queue = readyComponents.slice(0);\n  readyComponents.length = 0;\n  queue.forEach((item) => {\n    if (isFunction(item)) {\n      item();\n    } else if (item.componentDidMount) {\n      errorCatcher(() => {\n        item.componentDidMount();\n      }, item);\n    }\n  });\n}\n\nfunction getFragmentHostNode(children: VNode[]): Node | null {\n  const child = children[0];\n  if (isArray(child)) {\n    return getFragmentHostNode(child);\n  } else if (isComposite(child) && child.dom == null) {\n    return getFragmentHostNode(child.component._rendered);\n  }\n  return child != null ? child.dom : null;\n}\n\nexport function reRenderComponent(\n  prev: CompositeComponent,\n  current: CompositeComponent,\n) {\n  const component = (current.component = prev.component) as any;\n  const nextProps = current.props;\n  const nextContext = current.context;\n  component._disable = true;\n  if (!hasNewLifecycle(component) && isFunction(component.componentWillReceiveProps)) {\n    errorCatcher(() => {\n      component.componentWillReceiveProps(nextProps, nextContext);\n    }, component);\n  }\n  component._disable = false;\n  component.prevProps = component.props;\n  component.prevState = component.state;\n  component.prevContext = component.context;\n  component.props = nextProps;\n  component.context = nextContext;\n  if (!isNullOrUndef(current.ref)) {\n    Ref.update(prev, current);\n  }\n  return updateComponent(component);\n}\n\nfunction callShouldComponentUpdate(props, state, context, component) {\n  let shouldUpdate = true;\n  errorCatcher(() => {\n    shouldUpdate = component.shouldComponentUpdate(props, state, context);\n  }, component);\n  return shouldUpdate;\n}\n\nexport function updateComponent(component, isForce = false) {\n  let { vnode } = component;\n  let { dom } = vnode;\n  const { props } = component;\n  let state = component.getState();\n  const { context } = component;\n  const prevProps = component.prevProps || props;\n  const prevState = component.prevState || component.state;\n  const prevContext = component.prevContext || context;\n\n  const stateFromProps = callGetDerivedStateFromProps(props, state, component);\n\n  if (!isUndefined(stateFromProps)) {\n    state = stateFromProps;\n  }\n\n  component.props = prevProps;\n  component.context = prevContext;\n  let skip = false;\n  const onSCU = props.onShouldComponentUpdate;\n  if (\n    !isForce\n    && (\n      (isFunction(component.shouldComponentUpdate)\n      && callShouldComponentUpdate(props, state, context, component) === false)\n      || (isFunction(onSCU) && onSCU(prevProps, props) === false)\n    )\n  ) {\n    skip = true;\n  } else if (!hasNewLifecycle(component) && isFunction(component.componentWillUpdate)) {\n    errorCatcher(() => {\n      component.componentWillUpdate(props, state, context);\n    }, component);\n  }\n\n  if (!isUndefined(stateFromProps)) {\n    component.state = stateFromProps;\n  }\n\n  component.props = props;\n  component.state = state;\n  component.context = context;\n  component._dirty = false;\n  if (!skip) {\n    const lastRendered = component._rendered;\n    const rendered = renderComponent(component);\n    rendered.parentVNode = vnode;\n    const childContext = getChildContext(component, context);\n    const snapshot = callGetSnapshotBeforeUpdate(prevProps, prevState, component);\n    let parentDom = lastRendered.dom && lastRendered.dom.parentNode;\n    if (isArray(lastRendered)) {\n      const hostNode = getFragmentHostNode(lastRendered);\n      if (hostNode != null) {\n        parentDom = (lastRendered as any).dom = hostNode.parentNode;\n      }\n    }\n    dom = vnode.dom = patch(lastRendered, rendered, parentDom || null, childContext);\n    component._rendered = rendered;\n    if (isFunction(component.componentDidUpdate)) {\n      errorCatcher(() => {\n        component.componentDidUpdate(prevProps, prevState, snapshot);\n      }, component);\n    }\n    while (vnode = vnode.parentVNode) {\n      if ((vnode.vtype & (VType.Composite)) > 0) {\n        vnode.dom = dom;\n      }\n    }\n  }\n  component.prevProps = component.props;\n  component.prevState = component.state;\n  component.prevContext = component.context;\n  component.clearCallBacks();\n  flushMount();\n  invokeEffects(component);\n  return dom;\n}\n\nexport function unmountComponent(vnode: FullComponent) {\n  const { component } = vnode;\n  component.hooks.forEach((hook) => {\n    if (isFunction(hook.cleanup)) {\n      hook.cleanup();\n    }\n  });\n  if (isFunction(component.componentWillUnmount)) {\n    errorCatcher(() => {\n      (component as any).componentWillUnmount();\n    }, component);\n  }\n  component._disable = true;\n  unmount(component._rendered);\n  if (!isNullOrUndef(vnode.ref)) {\n    Ref.detach(vnode, vnode.ref, vnode.dom as any);\n  }\n}\n\nfunction callGetDerivedStateFromProps(props, state, inst) {\n  const { getDerivedStateFromProps } = inst.constructor;\n  let newState;\n  // @TODO show warning\n  errorCatcher(() => {\n    if (isFunction(getDerivedStateFromProps)) {\n      const partialState = getDerivedStateFromProps.call(\n        null,\n        props,\n        state,\n      );\n      if (!isUndefined(partialState)) {\n        newState = extend(clone(state), partialState);\n      }\n    }\n  }, inst);\n  return newState;\n}\n\nfunction callGetSnapshotBeforeUpdate(props, state, inst) {\n  const { getSnapshotBeforeUpdate } = inst;\n  let snapshot;\n  errorCatcher(() => {\n    if (isFunction(getSnapshotBeforeUpdate)) {\n      snapshot = getSnapshotBeforeUpdate.call(inst, props, state);\n    }\n  }, inst);\n  return snapshot;\n}\n\nfunction hasNewLifecycle(component) {\n  if (isFunction(component.constructor.getDerivedStateFromProps)) {\n    return true;\n  }\n  return false;\n}\n","import { shallowEqual, isFunction } from '@/nerv/utils';\nimport Ref from './vdom/ref';\nimport createElement from './create-element';\nimport Component from './component';\n\nexport function memo(component: Function, propsAreEqual?: Function) {\n  function shouldComponentUpdate(this: Component, nextProps): boolean {\n    const prevRef = this.props.ref;\n    const nextRef = nextProps.ref;\n    if (prevRef !== nextRef) {\n      Ref.detach(this.vnode, prevRef, this.dom);\n      Ref.attach(this.vnode, nextRef, this.dom);\n      return true;\n    }\n    return isFunction(propsAreEqual) ? !propsAreEqual(this.props, nextProps) : !shallowEqual(this.props, nextProps);\n  }\n\n  function Memoed(this: Component, props) {\n    this.shouldComponentUpdate = shouldComponentUpdate;\n    return createElement(component, { ...props });\n  }\n\n  Memoed._forwarded = true;\n\n  Memoed.isMemo = true;\n\n  return Memoed;\n}\n","import { noop, CompositeComponent, StatelessComponent, VirtualNode, Component } from '@/nerv/shared';\n\nexport type optionsHook = (vnode: CompositeComponent | StatelessComponent) => void\n\nconst options: {\n  afterMount: optionsHook;\n  afterUpdate: optionsHook;\n  beforeUpdate: optionsHook;\n  beforeUnmount: optionsHook;\n  beforeMount: optionsHook;\n  afterCreate: optionsHook;\n  beforeRender: (component: Component<any, any>) => void;\n  roots: VirtualNode[];\n  debug: boolean;\n} = {\n  afterMount: noop,\n  afterUpdate: noop,\n  beforeUpdate: noop,\n  beforeUnmount: noop,\n  beforeRender: noop,\n  beforeMount: noop,\n  afterCreate: noop,\n  roots: [],\n  debug: false,\n};\n\nexport default options;\n","const defaultOptions = {\n  passive: false,\n  capture: false\n}\n\nconst eventListenerOptionsSupported = () => {\n  let supported = false\n\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supported = true\n      }\n    })\n    window.addEventListener('test', null as any, opts)\n    window.removeEventListener('test', null as any, opts)\n  } catch (e) {\n    supported = false\n  }\n\n  return supported\n}\n\nfunction getDefaultPassiveOption () {\n  const passiveOption = !eventListenerOptionsSupported() ? false : defaultOptions\n  return () => {\n    return passiveOption\n  }\n}\n\nconst getPassiveOption = getDefaultPassiveOption()\n\nexport const supportedPassiveEventMap = {\n  scroll: getPassiveOption(),\n  wheel: getPassiveOption(),\n  touchstart: getPassiveOption(),\n  touchmove: getPassiveOption(),\n  touchenter: getPassiveOption(),\n  touchend: getPassiveOption(),\n  touchleave: getPassiveOption(),\n  mouseout: getPassiveOption(),\n  mouseleave: getPassiveOption(),\n  mouseup: getPassiveOption(),\n  mousedown: getPassiveOption(),\n  mousemove: getPassiveOption(),\n  mouseenter: getPassiveOption(),\n  mousewheel: getPassiveOption(),\n  mouseover: getPassiveOption()\n}\n","import { noop } from '@/nerv/shared';\n\nconst shim = noop as any;\nshim.isRequired = noop;\n\nfunction getShim() {\n  return shim;\n}\n\nconst PropTypes = {\n  array: shim,\n  bool: shim,\n  func: shim,\n  number: shim,\n  object: shim,\n  string: shim,\n\n  any: shim,\n  arrayOf: getShim,\n  element: shim,\n  instanceOf: getShim,\n  node: shim,\n  objectOf: getShim,\n  oneOf: getShim,\n  oneOfType: getShim,\n  shape: getShim,\n  exact: getShim,\n  PropTypes: {},\n  checkPropTypes: noop,\n};\n\nPropTypes.PropTypes = PropTypes;\n\nexport { PropTypes };\n","import { shallowEqual } from '@/nerv/utils';\nimport Component from './component';\n\nclass PureComponent<P, S> extends Component<P, S> {\n  isPureComponent = true\n\n  shouldComponentUpdate(nextProps: P, nextState: S) {\n    return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n  }\n}\n\nexport default PureComponent;\n","import { nextTick } from '@/nerv/utils';\nimport { updateComponent } from './lifecycle';\n\nlet items: any[] = [];\n\nexport function enqueueRender(component) {\n  // tslint:disable-next-line:no-conditional-assignment\n  if (!component._dirty && (component._dirty = true) && items.push(component) === 1) {\n    nextTick(rerender);\n  }\n}\n\nexport function rerender(isForce = false) {\n  let p;\n  const list = items;\n  items = [];\n  // tslint:disable-next-line:no-conditional-assignment\n  while ((p = list.pop())) {\n    if (p._dirty) {\n      updateComponent(p, isForce);\n    }\n  }\n}\n","import { VirtualNode, isComposite } from '@/nerv/shared';\nimport { mountVNode, flushMount } from './lifecycle';\nimport { patch } from './vdom/patch';\nimport options from './options';\nimport { mountElement } from './vdom/create-element';\n\nexport function render(\n  vnode: VirtualNode,\n  container: Element,\n  callback?: Function,\n) {\n  if (!container) {\n    throw new Error(`${container} should be a DOM Element`);\n  }\n  const lastVnode = (container as any)._component;\n  let dom;\n  options.roots.push(vnode);\n\n  if (typeof lastVnode !== 'undefined') {\n    options.roots = options.roots.filter((item) => item !== lastVnode);\n    dom = patch(lastVnode, vnode, container, {});\n  } else {\n    dom = mountVNode(vnode, {});\n    mountElement(dom, container);\n  }\n\n  if (container) {\n    (container as any)._component = vnode;\n  }\n  flushMount();\n  if (callback) {\n    callback();\n  }\n\n  return isComposite(vnode) ? vnode.component : dom;\n}\n","export interface Widget {\n  vtype: VType\n  name: string\n  _owner: any\n  props: any\n  _rendered: any\n  context: any\n  init (parentContext, parentComponent): Element | null\n  update (\n    previous: ComponentInstance,\n    current: ComponentInstance,\n    context: any,\n    dom?: Element\n  ): Element | null\n  destroy (dom?: Element)\n}\n\nexport interface Portal {\n  type: Element\n  vtype: VType\n  children: VirtualNode\n  dom: null | Element\n}\n\nexport type ComponentInstance = CompositeComponent | StatelessComponent\n\nexport interface CompositeComponent extends Widget {\n  type: any\n  component: Component<any, any>\n  ref?: Ref\n  dom: Element | null\n}\n\nexport interface StatelessComponent extends Widget {\n  type: Function\n  dom: Element | null\n}\n\nexport const EMPTY_CHILDREN: any[] = []\n\nexport const EMPTY_OBJ = {}\n\nexport interface VText {\n  vtype: VType\n  text: string | number\n  dom: Text | null\n}\n\nexport interface VVoid {\n  dom: Text | null\n  vtype: VType\n}\n\nexport interface VNode {\n  vtype: VType\n  type: string\n  props: Props\n  children: VirtualChildren\n  key: string | number | undefined\n  namespace: string | null\n  _owner: Component<any, any> // TODO: this is a component\n  isSvg?: boolean\n  parentContext?: any\n  dom: Element | null\n  ref: Function | string | null\n}\n\nexport type VirtualNode =\n  | VNode\n  | VText\n  | CompositeComponent\n  | StatelessComponent\n  | VVoid\n  | Portal\n\nexport type VirtualChildren = Array<string | number | VirtualNode> | VirtualNode\n\nexport type Ref = (node?: Element | null) => void | null | string\n\nexport interface Props {\n  children?: VirtualChildren\n  ref?: Ref\n  key?: any\n  className?: string | object\n  [k: string]: any\n}\n\nexport interface ComponentLifecycle<P, S> {\n  componentWillMount? (): void\n  componentDidMount? (): void\n  componentWillReceiveProps? (nextProps: Readonly<P>, nextContext: any): void\n  shouldComponentUpdate? (\n    nextProps: Readonly<P>,\n    nextState: Readonly<S>,\n    nextContext: any\n  ): boolean\n  componentWillUpdate? (\n    nextProps: Readonly<P>,\n    nextState: Readonly<S>,\n    nextContext: any\n  ): void\n  componentDidUpdate? (\n    prevProps: Readonly<P>,\n    prevState: Readonly<S>,\n    prevContext: any\n  ): void\n  componentWillUnmount? (): void\n  componentDidCatch? (error?): void\n  getDerivedStateFromProps? (nextProps: Readonly<P>, prevState: Readonly<S>): object | null\n  getDerivedStateFromError? (error?): object | null\n  getSnapshotBeforeUpdate? (prevProps: Readonly<P>, prevState: Readonly<S>): object | null\n}\n\nexport interface Refs {\n  [k: string]: any\n}\n\nexport interface Component<P, S> extends ComponentLifecycle<P, S> {\n  state: Readonly<S>\n  props: Readonly<P> & Readonly<any>\n  context: any\n  _dirty: boolean\n  _disable: boolean\n  _rendered: any\n  _parentComponent: Component<any, any>\n  prevProps: P\n  prevState: S\n  prevContext: object\n  isReactComponent: object\n  dom: any\n  vnode: CompositeComponent\n  clearCallBacks: () => void\n  getState (): S\n  // tslint:disable-next-line:member-ordering\n  refs: Refs\n  render (props?, context?): VirtualNode\n}\n\nexport function isNullOrUndef (o: any): o is undefined | null {\n  return o === undefined || o === null\n}\n\nexport function isInvalid (o: any): o is undefined | null | true | false {\n  return isNullOrUndef(o) || o === true || o === false\n}\n\nexport function isVNode (node): node is VNode {\n  return !isNullOrUndef(node) && node.vtype === VType.Node\n}\n\nexport function isVText (node): node is VText {\n  return !isNullOrUndef(node) && node.vtype === VType.Text\n}\n\nexport function isComponent (instance): instance is Component<any, any> {\n  return !isInvalid(instance) && instance.isReactComponent === EMPTY_OBJ\n}\n\nexport function isWidget (\n  node\n): node is CompositeComponent | StatelessComponent {\n  return (\n    !isNullOrUndef(node) &&\n    (node.vtype & (VType.Composite)) > 0\n  )\n}\n\nexport function isPortal (vtype: VType, node): node is Portal {\n  return (vtype & VType.Portal) > 0\n}\n\nexport function isComposite (node): node is CompositeComponent {\n  return !isNullOrUndef(node) && node.vtype === VType.Composite\n}\n\nexport function isValidElement (node): node is VirtualNode {\n  return !isNullOrUndef(node) && node.vtype\n}\n\nexport function isHook (arg) {\n  return !isNullOrUndef(arg) && typeof arg.vhook === 'number'\n}\n\n// tslint:disable-next-line:no-empty\nexport function noop () {}\n\n// typescript will compile the enum's value for us.\n// eg.\n// Composite = 1 << 2  => Composite = 4\nexport const enum VType {\n  Text = 1,\n  Node = 1 << 1,\n  Composite = 1 << 2,\n  Void = 1 << 4,\n  Portal = 1 << 5\n}\n","// tslint:disable-next-line\nexport const global = (function () {\n  let local;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      // tslint:disable-next-line:function-constructor\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('global object is unavailable in this environment');\n    }\n  }\n  return local;\n})();\n\nexport const isBrowser = typeof window !== 'undefined';\n\n// tslint:disable-next-line:no-empty\nfunction noop() {}\n\nconst fakeDoc: any = {\n  createElement: noop,\n  createElementNS: noop,\n  createTextNode: noop,\n};\n\nexport const doc: Document = isBrowser ? document : fakeDoc;\n\nexport const UA = isBrowser && window.navigator.userAgent.toLowerCase();\n\nexport const isMacSafari = isBrowser && UA && window.navigator.platform\n  && /mac/i.test(window.navigator.platform) && /^((?!chrome|android).)*safari/i.test(UA);\n\nexport const isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\nexport const isiOS = (UA && /iphone|ipad|ipod|ios/.test(UA));\n","export { default as nextTick } from './next-tick';\nexport { default as shallowEqual } from './shallow-equal';\nexport { SimpleMap, MapClass } from './simple-map';\nexport * from './is';\nexport * from './env';\n\nexport function getPrototype(obj) {\n  /* istanbul ignore next */\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(obj);\n  } else if (obj.__proto__) {\n    return obj.__proto__;\n  }\n  /* istanbul ignore next */\n  return obj.constructor.prototype;\n}\n\nexport function isAttrAnEvent(attr: string): boolean {\n  if (attr[0] === 'o' && attr[1] === 'n') {\n    return true;\n  }\n\n  if (/^(bind|catch|capture-bind|capture-catch)([A-Za-z_]+)/.test(attr)) {\n    return true;\n  }\n\n  return false;\n}\n\nconst extend = ((): (<S, F>(source: S, from: F) => S | F & S) => {\n  return <S, F>(source: S, from: F): S | F & S => {\n    if (!from) {\n      return source;\n    }\n    Object.assign(source, from);\n    return source;\n  };\n})();\n\nexport { extend };\n\nexport function clone<T>(obj: T): T | {} {\n  return extend({}, obj);\n}\n","import { doc } from './env';\n\nexport function isNumber(arg): arg is number {\n  return typeof arg === 'number';\n}\n\nexport const isSupportSVG = isFunction(doc.createAttributeNS);\n\nexport function isString(arg): arg is string {\n  return typeof arg === 'string';\n}\n\nexport function isFunction(arg): arg is Function {\n  return typeof arg === 'function';\n}\n\nexport function isBoolean(arg): arg is true | false {\n  return arg === true || arg === false;\n}\n\nexport const { isArray } = Array;\n\nexport function isObject(arg): arg is Record<string, any> {\n  return arg === Object(arg) && !isFunction(arg);\n}\nexport function isNative(Ctor) {\n  return isFunction(Ctor) && /native code/.test(Ctor.toString());\n}\n\nexport function isUndefined(o): o is undefined {\n  return o === undefined;\n}\n\n// Object.is polyfill\n// https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nexport function objectIs(x: any, y: any) {\n  if (x === y) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  }\n  // eslint-disable-next-line no-self-compare\n  return x !== x && y !== y;\n}\n","import { global, isMacSafari } from './env';\nimport { isFunction } from './is';\n\nconst canUsePromise = 'Promise' in global && !isMacSafari;\n\nlet resolved;\nif (canUsePromise) {\n  resolved = Promise.resolve();\n}\n\nconst nextTick: (fn, ...args) => void = (fn, ...args) => {\n  fn = isFunction(fn) ? fn.bind(null, ...args) : fn;\n  if (canUsePromise) {\n    return resolved.then(fn);\n  }\n  const timerFunc = 'requestAnimationFrame' in global && !isMacSafari ? requestAnimationFrame : setTimeout;\n  timerFunc(fn);\n};\n\nexport default nextTick;\n","/* istanbul ignore next */\n// tslint:disable-next-line\nObject.is = Object.is || function (x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  }\n  return x !== x && y !== y;\n};\n\nexport default function shallowEqual(obj1, obj2) {\n  if (obj1 === null || obj2 === null) {\n    return false;\n  }\n  if (Object.is(obj1, obj2)) {\n    return true;\n  }\n  const obj1Keys = obj1 ? Object.keys(obj1) : [];\n  const obj2Keys = obj2 ? Object.keys(obj2) : [];\n  if (obj1Keys.length !== obj2Keys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < obj1Keys.length; i++) {\n    const obj1KeyItem = obj1Keys[i];\n    if (!obj2.hasOwnProperty(obj1KeyItem) || !Object.is(obj1[obj1KeyItem], obj2[obj1KeyItem])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { global } from './env';\n\nexport interface Cache<Key, Value> {\n  k: Key;\n  v: Value;\n}\n\nexport class SimpleMap<Key, Value> {\n  cache: Array<Cache<Key, Value>>\n\n  size: number\n\n  constructor() {\n    this.cache = [];\n    this.size = 0;\n  }\n\n  set(k, v) {\n    const len = this.cache.length;\n    if (!len) {\n      this.cache.push({ k, v });\n      this.size += 1;\n      return;\n    }\n    for (let i = 0; i < len; i++) {\n      const item = this.cache[i];\n      if (item.k === k) {\n        item.v = v;\n        return;\n      }\n    }\n    this.cache.push({ k, v });\n    this.size += 1;\n  }\n\n  get(k) {\n    const len = this.cache.length;\n    if (!len) {\n      return;\n    }\n    for (let i = 0; i < len; i++) {\n      const item = this.cache[i];\n      if (item.k === k) {\n        return item.v;\n      }\n    }\n  }\n\n  has(k) {\n    const len = this.cache.length;\n    if (!len) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      const item = this.cache[i];\n      if (item.k === k) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  delete(k) {\n    const len = this.cache.length;\n    for (let i = 0; i < len; i++) {\n      const item = this.cache[i];\n      if (item.k === k) {\n        this.cache.splice(i, 1);\n        this.size -= 1;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  clear() {\n    let len = this.cache.length;\n    this.size = 0;\n    if (!len) {\n      return;\n    }\n    while (len) {\n      this.cache.pop();\n      len--;\n    }\n  }\n}\n\nexport const MapClass: MapConstructor = 'Map' in global ? Map : (SimpleMap as any);\n","import { isSupportSVG, isArray, isString, isNumber, doc, isBoolean } from '@/nerv/utils';\nimport {\n  isNullOrUndef,\n  VirtualNode,\n  VType,\n  VNode,\n  isValidElement,\n  EMPTY_OBJ,\n  CompositeComponent,\n  isPortal,\n} from '@/nerv/shared';\nimport { patchProp } from './patch';\nimport Ref from './ref';\n\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nfunction createElement(\n  vnode: VirtualNode | VirtualNode[],\n  isSvg?: boolean,\n  parentContext?,\n  parentComponent?,\n): Element | Text | Comment | Array<Element | Text | Comment> {\n  let domNode;\n  if (isValidElement(vnode)) {\n    const { vtype } = vnode;\n    if (vtype & (VType.Composite)) {\n      domNode = (vnode as CompositeComponent).init(parentContext, parentComponent);\n    } else if (vtype & VType.Text) {\n      domNode = doc.createTextNode((vnode as any).text);\n      (vnode as any).dom = domNode;\n    } else if (vtype & VType.Node) {\n      domNode = mountVNode(vnode as any, isSvg, parentContext, parentComponent);\n    } else if (vtype & VType.Void) {\n      domNode = (vnode as any).dom = doc.createTextNode('');\n    } else if (isPortal(vtype, vnode)) {\n      vnode.type.appendChild(\n        createElement(vnode.children, isSvg, parentContext, parentComponent) as Element,\n      );\n      domNode = doc.createTextNode('');\n    }\n  } else if (isString(vnode) || isNumber(vnode)) {\n    domNode = doc.createTextNode(vnode as string);\n  } else if (isNullOrUndef(vnode) || isBoolean(vnode)) {\n    domNode = doc.createTextNode('');\n  } else if (isArray(vnode)) {\n    domNode = vnode.map((child) => createElement(child, isSvg, parentContext, parentComponent));\n  } else {\n    throw new Error('Unsupported VNode.');\n  }\n  return domNode;\n}\n\nexport function mountVNode(vnode: VNode, isSvg?: boolean, parentContext?, parentComponent?) {\n  if (vnode.isSvg) {\n    isSvg = true;\n  } else if (vnode.type === 'svg') {\n    isSvg = true;\n  /* istanbul ignore next */\n  } else if (!isSupportSVG) {\n    isSvg = false;\n  }\n  if (isSvg) {\n    vnode.namespace = SVG_NAMESPACE;\n    vnode.isSvg = isSvg;\n  }\n  const domNode = !isSvg\n    ? doc.createElement(vnode.type)\n    : doc.createElementNS(vnode.namespace, vnode.type);\n  setProps(domNode, vnode, isSvg as boolean);\n  if (vnode.type === 'foreignObject') {\n    isSvg = false;\n  }\n  const { children } = vnode;\n  if (isArray(children)) {\n    for (let i = 0, len = children.length; i < len; i++) {\n      mountChild(children[i] as VNode, domNode, parentContext, isSvg, parentComponent);\n    }\n  } else {\n    mountChild(children as VNode, domNode, parentContext, isSvg, parentComponent);\n  }\n  vnode.dom = domNode;\n  if (vnode.ref !== null) {\n    Ref.attach(vnode, vnode.ref, domNode);\n  }\n  return domNode;\n}\n\nexport function mountChild(\n  child: VNode,\n  domNode: Element,\n  parentContext: Record<string, any>,\n  isSvg?: boolean,\n  parentComponent?,\n) {\n  child.parentContext = parentContext || EMPTY_OBJ;\n  const childNode = createElement(child as VNode, isSvg, parentContext, parentComponent);\n  mountElement(childNode, domNode);\n}\n\nexport function mountElement(\n  element: Element | Text | Comment | Array<Element | Text | Comment>,\n  parentNode: Element,\n  refChild?: Node | null,\n) {\n  if (isArray(element)) {\n    for (let i = 0; i < element.length; i++) {\n      const el = element[i];\n      mountElement(el, parentNode);\n    }\n  } else {\n    refChild != null ? parentNode.insertBefore(element, refChild) : parentNode.appendChild(element);\n  }\n}\n\nexport function insertElement(\n  element: Element | Text | Comment | Array<Element | Text | Comment>,\n  parentNode: Element,\n  lastDom: Element,\n) {\n  if (isArray(element)) {\n    for (let i = 0; i < element.length; i++) {\n      const el = element[i];\n      insertElement(el, parentNode, lastDom);\n    }\n  } else {\n    parentNode.insertBefore(element, lastDom);\n  }\n}\n\nfunction setProps(domNode: Element, vnode: VNode, isSvg: boolean) {\n  const { props } = vnode;\n  for (const p in props) {\n    patchProp(domNode, p, null, props[p], null, isSvg);\n  }\n}\n\nexport default createElement;\n","import { VirtualNode, VType, Portal } from '@/nerv/shared';\n\nexport function createPortal(children: VirtualNode, container: Element): Portal {\n  return {\n    type: container,\n    vtype: VType.Portal,\n    children,\n    dom: null,\n  };\n}\n","import {\n  Props,\n  VType,\n  VNode,\n  VirtualChildren,\n  Component,\n  EMPTY_OBJ,\n} from '@/nerv/shared';\n\nfunction createVNode(\n  type: string,\n  props: Props,\n  children: VirtualChildren,\n  key,\n  namespace: string,\n  owner: Component<any, any>,\n  ref: Function | string | null | undefined,\n): VNode {\n  return {\n    type,\n    key: key || null,\n    vtype: VType.Node,\n    props: props || EMPTY_OBJ,\n    children,\n    namespace: namespace || null,\n    _owner: owner,\n    dom: null,\n    ref: ref || null,\n  };\n}\n\nexport default createVNode;\n","import { VType } from '@/nerv/shared';\n\nexport function createVoid() {\n  return {\n    dom: null,\n    vtype: VType.Void,\n  };\n}\n","import { VType, VText } from '@/nerv/shared';\n\nexport default function createVText(text: string | number): VText {\n  return {\n    text,\n    vtype: VType.Text,\n    dom: null,\n  };\n}\n","import {\n  Props,\n  VirtualChildren,\n  VirtualNode,\n  isValidElement,\n  EMPTY_CHILDREN,\n  VNode,\n} from '@/nerv/shared';\nimport { isString, isArray, isNumber } from '@/nerv/utils';\nimport createVNode from './create-vnode';\nimport createVText from './create-vtext';\nimport { createVoid } from './create-void';\n\nfunction h(type: string, props: Props, children?: VirtualChildren) {\n  let childNodes;\n  if (props.children) {\n    if (!children) {\n      children = props.children;\n    }\n  }\n  if (isArray(children)) {\n    childNodes = [];\n    addChildren(childNodes, children as any, type);\n  } else if (isString(children) || isNumber(children)) {\n    children = createVText(String(children));\n  } else if (!isValidElement(children)) {\n    children = EMPTY_CHILDREN;\n  }\n  props.children = childNodes !== undefined ? childNodes : children;\n  return createVNode(\n    type,\n    props,\n    props.children as any[],\n    props.key,\n    props.namespace,\n    props.owner,\n    props.ref,\n  ) as VNode;\n}\n\nfunction addChildren(\n  childNodes: VirtualNode[],\n  children: VirtualNode | VirtualNode[],\n  type: string,\n) {\n  if (isString(children) || isNumber(children)) {\n    childNodes.push(createVText(String(children)));\n  } else if (isValidElement(children)) {\n    childNodes.push(children);\n  } else if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      addChildren(childNodes, children[i], type);\n    }\n  } else {\n    childNodes.push(createVoid());\n  }\n}\n\nexport default h;\n","/* tslint:disable: no-empty */\nimport {\n  isString,\n  isAttrAnEvent,\n  isNumber,\n  isArray,\n  isFunction,\n  MapClass,\n} from '@/nerv/utils';\nimport {\n  Props,\n  VText,\n  isInvalid,\n  VNode,\n  isNullOrUndef,\n  isValidElement,\n  EMPTY_CHILDREN,\n  VType,\n} from '@/nerv/shared';\nimport createElement, { mountChild, mountElement, insertElement } from './create-element';\nimport { unmount, unmountChildren } from './unmount';\nimport Ref from './ref';\nimport { attachEvent, detachEvent } from '../event';\nimport SVGPropertyConfig from './svg-property-config';\n\nexport function patch(\n  lastVnode,\n  nextVnode,\n  parentNode: Element,\n  context: object,\n  isSvg?: boolean,\n) {\n  const lastDom = lastVnode.dom;\n  let newDom;\n  const lastVnodeIsArray = isArray(lastVnode);\n  const nextVnodeisArray = isArray(nextVnode);\n  if (isSameVNode(lastVnode, nextVnode)) {\n    const { vtype } = nextVnode;\n    if (vtype & VType.Node) {\n      isSvg = isNullOrUndef(isSvg) ? lastVnode.isSvg : isSvg;\n      if (isSvg) {\n        nextVnode.isSvg = isSvg;\n      }\n      patchProps(lastDom, nextVnode.props, lastVnode.props, lastVnode, isSvg);\n      patchChildren(\n        lastDom,\n        lastVnode.children,\n        nextVnode.children,\n        context,\n        isSvg as boolean,\n      );\n      if (nextVnode.ref !== null) {\n        Ref.update(lastVnode, nextVnode, lastDom);\n      }\n      newDom = lastDom;\n    } else if ((vtype & (VType.Composite)) > 0) {\n      newDom = nextVnode.update(lastVnode, nextVnode, context);\n    } else if (vtype & VType.Text) {\n      return patchVText(lastVnode, nextVnode);\n    } else if (vtype & VType.Portal) {\n      patchChildren(lastVnode.type, lastVnode.children, nextVnode.children, context, isSvg as boolean);\n    }\n    // @TODO: test case\n    nextVnode.dom = newDom || lastDom;\n  } else if (isArray(lastVnode) && isArray(nextVnode)) {\n    patchArrayChildren(lastDom, lastVnode, nextVnode, context, false);\n  } else if (lastVnodeIsArray && !nextVnodeisArray) {\n    patchArrayChildren(parentNode, lastVnode, [nextVnode], context, false);\n  } else if (!lastVnodeIsArray && nextVnodeisArray) {\n    newDom = createElement(nextVnode, isSvg, context);\n    insertElement(newDom, parentNode, lastDom);\n    parentNode.removeChild(lastDom);\n  } else {\n    unmount(lastVnode);\n    newDom = createElement(nextVnode, isSvg, context);\n    if (nextVnode !== null) {\n      nextVnode.dom = newDom;\n    }\n    const newDomIsArray = isArray(newDom);\n    const lastDomIsArray = isArray(lastDom);\n    if (newDomIsArray) {\n      insertElement(newDom, parentNode, lastDom);\n      parentNode.removeChild(lastDom);\n    } else if (lastDomIsArray) {\n      parentNode = lastDom[0].parentNode;\n      parentNode.insertBefore(newDom, lastDom[0]);\n      for (let i = 0; i < lastDom.length; i++) {\n        parentNode.removeChild(lastDom[i]);\n      }\n    } else if (parentNode !== null) {\n      if (lastDom != null) {\n        parentNode.replaceChild(newDom, lastDom);\n      } else {\n        parentNode.appendChild(newDom);\n      }\n    }\n  }\n  return newDom;\n}\n\nfunction patchArrayChildren(\n  parentDom: Element,\n  lastChildren,\n  nextChildren,\n  context: object,\n  isSvg: boolean,\n) {\n  const lastLength = lastChildren.length;\n  const nextLength = nextChildren.length;\n  if (lastLength === 0) {\n    if (nextLength > 0) {\n      for (let i = 0; i < nextLength; i++) {\n        mountChild(nextChildren[i], parentDom, context, isSvg);\n      }\n    }\n  } else if (nextLength === 0) {\n    unmountChildren(lastChildren);\n    parentDom.textContent = '';\n  } else if (isKeyed(lastChildren, nextChildren)) {\n    patchKeyedChildren(\n      lastChildren,\n      nextChildren,\n      parentDom,\n      context,\n      isSvg,\n      lastLength,\n      nextLength,\n    );\n  } else {\n    patchNonKeyedChildren(\n      parentDom,\n      lastChildren,\n      nextChildren,\n      context,\n      isSvg,\n      lastLength,\n      nextLength,\n    );\n  }\n}\n\nexport function patchChildren(\n  parentDom: Element,\n  lastChildren,\n  nextChildren,\n  context: object,\n  isSvg: boolean,\n) {\n  // @TODO: is a better way to compatible with react-router?\n  // if (lastChildren === nextChildren) {\n  //   return\n  // }\n  const lastChildrenIsArray = isArray(lastChildren);\n  const nextChildrenIsArray = isArray(nextChildren);\n  if (lastChildrenIsArray && nextChildrenIsArray) {\n    patchArrayChildren(parentDom, lastChildren, nextChildren, context, isSvg);\n  } else if (!lastChildrenIsArray && !nextChildrenIsArray) {\n    patch(lastChildren, nextChildren, parentDom, context, isSvg);\n  } else if (lastChildrenIsArray && !nextChildrenIsArray) {\n    patchArrayChildren(parentDom, lastChildren, [nextChildren], context, isSvg);\n  } else if (!lastChildrenIsArray && nextChildrenIsArray) {\n    patchArrayChildren(parentDom, [lastChildren], nextChildren, context, isSvg);\n  }\n}\n\nfunction patchNonKeyedChildren(\n  parentDom: Element,\n  lastChildren,\n  nextChildren,\n  context: object,\n  isSvg: boolean,\n  lastLength: number,\n  nextLength: number,\n) {\n  const minLength = Math.min(lastLength, nextLength);\n  let i = 0;\n  while (i < minLength) {\n    patch(lastChildren[i], nextChildren[i], parentDom, context, isSvg);\n    i++;\n  }\n  if (lastLength < nextLength) {\n    for (i = minLength; i < nextLength; i++) {\n      if (parentDom !== null) {\n        const refVnode = lastChildren[i - 1];\n        mountElement(\n          createElement(\n            nextChildren[i],\n            isSvg,\n            context,\n          ),\n          parentDom,\n          isValidElement(refVnode) && refVnode.dom != null\n            ? refVnode.dom.nextSibling\n            : null,\n        );\n      }\n    }\n  } else if (lastLength > nextLength) {\n    for (i = minLength; i < lastLength; i++) {\n      unmount(lastChildren[i], parentDom);\n    }\n  }\n}\n\n/**\n *\n * Virtual DOM patching algorithm based on ivi by\n * Boris Kaul (@localvoid)\n * Licensed under the MIT License\n * https://github.com/ivijs/ivi/blob/master/LICENSE\n *\n */\nfunction patchKeyedChildren(\n  a: VNode[],\n  b: VNode[],\n  dom: Element,\n  context,\n  isSvg: boolean,\n  aLength: number,\n  bLength: number,\n) {\n  let aEnd = aLength - 1;\n  let bEnd = bLength - 1;\n  let aStart = 0;\n  let bStart = 0;\n  let i;\n  let j;\n  let aNode;\n  let bNode;\n  let nextNode;\n  let nextPos;\n  let node;\n  let aStartNode = a[aStart];\n  let bStartNode = b[bStart];\n  let aEndNode = a[aEnd];\n  let bEndNode = b[bEnd];\n\n  // Step 1\n  // tslint:disable-next-line\n  outer: {\n    // Sync nodes with the same key at the beginning.\n    while (aStartNode.key === bStartNode.key) {\n      patch(aStartNode, bStartNode, dom, context, isSvg);\n      aStart++;\n      bStart++;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aStartNode = a[aStart];\n      bStartNode = b[bStart];\n    }\n\n    // Sync nodes with the same key at the end.\n    while (aEndNode.key === bEndNode.key) {\n      patch(aEndNode, bEndNode, dom, context, isSvg);\n      aEnd--;\n      bEnd--;\n      if (aStart > aEnd || bStart > bEnd) {\n        break outer;\n      }\n      aEndNode = a[aEnd];\n      bEndNode = b[bEnd];\n    }\n  }\n\n  if (aStart > aEnd) {\n    if (bStart <= bEnd) {\n      nextPos = bEnd + 1;\n      nextNode = nextPos < bLength ? b[nextPos].dom : null;\n      while (bStart <= bEnd) {\n        node = b[bStart];\n        bStart++;\n        attachNewNode(dom, createElement(node, isSvg, context), nextNode);\n      }\n    }\n  } else if (bStart > bEnd) {\n    while (aStart <= aEnd) {\n      unmount(a[aStart++], dom);\n    }\n  } else {\n    const aLeft = aEnd - aStart + 1;\n    const bLeft = bEnd - bStart + 1;\n    const sources = new Array(bLeft);\n\n    // Mark all nodes as inserted.\n    for (i = 0; i < bLeft; i++) {\n      sources[i] = -1;\n    }\n    let moved = false;\n    let pos = 0;\n    let patched = 0;\n\n    // When sizes are small, just loop them through\n    if (bLeft <= 4 || aLeft * bLeft <= 16) {\n      for (i = aStart; i <= aEnd; i++) {\n        aNode = a[i];\n        if (patched < bLeft) {\n          for (j = bStart; j <= bEnd; j++) {\n            bNode = b[j];\n            if (aNode.key === bNode.key) {\n              sources[j - bStart] = i;\n\n              if (pos > j) {\n                moved = true;\n              } else {\n                pos = j;\n              }\n              patch(aNode, bNode, dom, context, isSvg);\n              patched++;\n              a[i] = null as any;\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      const keyIndex = new MapClass();\n\n      for (i = bStart; i <= bEnd; i++) {\n        keyIndex.set(b[i].key, i);\n      }\n\n      for (i = aStart; i <= aEnd; i++) {\n        aNode = a[i];\n\n        if (patched < bLeft) {\n          j = keyIndex.get(aNode.key);\n\n          if (j !== undefined) {\n            bNode = b[j];\n            sources[j - bStart] = i;\n            if (pos > j) {\n              moved = true;\n            } else {\n              pos = j;\n            }\n            patch(aNode, bNode, dom, context, isSvg);\n            patched++;\n            a[i] = null as any;\n          }\n        }\n      }\n    }\n    if (aLeft === aLength && patched === 0) {\n      unmountChildren(a);\n      dom.textContent = '';\n      while (bStart < bLeft) {\n        node = b[bStart];\n        bStart++;\n        attachNewNode(dom, createElement(node, isSvg, context), null);\n      }\n    } else {\n      i = aLeft - patched;\n      while (i > 0) {\n        aNode = a[aStart++];\n        if (aNode !== null) {\n          unmount(aNode, dom);\n          i--;\n        }\n      }\n      if (moved) {\n        const seq = lis(sources);\n        j = seq.length - 1;\n        for (i = bLeft - 1; i >= 0; i--) {\n          if (sources[i] === -1) {\n            pos = i + bStart;\n            node = b[pos];\n            nextPos = pos + 1;\n            attachNewNode(\n              dom,\n              createElement(node, isSvg, context),\n              nextPos < bLength ? b[nextPos].dom : null,\n            );\n          } else if (j < 0 || i !== seq[j]) {\n            pos = i + bStart;\n            node = b[pos];\n            nextPos = pos + 1;\n            attachNewNode(\n              dom,\n              node.dom,\n              nextPos < bLength ? b[nextPos].dom : null,\n            );\n          } else {\n            j--;\n          }\n        }\n      } else if (patched !== bLeft) {\n        for (i = bLeft - 1; i >= 0; i--) {\n          if (sources[i] === -1) {\n            pos = i + bStart;\n            node = b[pos];\n            nextPos = pos + 1;\n            attachNewNode(\n              dom,\n              createElement(node, isSvg, context),\n              nextPos < bLength ? b[nextPos].dom : null,\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachNewNode(parentDom, newNode, nextNode) {\n  if (isNullOrUndef(nextNode)) {\n    parentDom.appendChild(newNode);\n  } else {\n    parentDom.insertBefore(newNode, nextNode);\n  }\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * http://en.wikipedia.org/wiki/Longest_increasing_subsequence\n *\n * @param a Array of numbers.\n * @returns Longest increasing subsequence.\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result.push(0);\n  let u: number;\n  let v: number;\n\n  for (let i = 0, il = a.length; i < il; ++i) {\n    if (a[i] === -1) {\n      continue;\n    }\n\n    const j = result[result.length - 1];\n    if (a[j] < a[i]) {\n      p[i] = j;\n      result.push(i);\n      continue;\n    }\n\n    u = 0;\n    v = result.length - 1;\n\n    while (u < v) {\n      const c = ((u + v) / 2) | 0;\n      if (a[result[c]] < a[i]) {\n        u = c + 1;\n      } else {\n        v = c;\n      }\n    }\n\n    if (a[i] < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\nfunction isKeyed(lastChildren: VNode[], nextChildren: VNode[]): boolean {\n  return (\n    nextChildren.length > 0\n    && !isNullOrUndef(nextChildren[0])\n    && !isNullOrUndef(nextChildren[0].key)\n    && lastChildren.length > 0\n    && !isNullOrUndef(lastChildren[0])\n    && !isNullOrUndef(lastChildren[0].key)\n  );\n}\n\nfunction isSameVNode(a, b) {\n  if (isInvalid(a) || isInvalid(b) || isArray(a) || isArray(b)) {\n    return false;\n  }\n  return a.type === b.type && a.vtype === b.vtype && a.key === b.key;\n}\n\nfunction patchVText(lastVNode: VText, nextVNode: VText) {\n  const { dom } = lastVNode;\n  if (dom === null) {\n    return;\n  }\n  const nextText = nextVNode.text;\n  nextVNode.dom = dom;\n\n  if (lastVNode.text !== nextText) {\n    dom.nodeValue = nextText as string;\n  }\n  return dom;\n}\n\nconst skipProps = {\n  children: 1,\n  key: 1,\n  ref: 1,\n  owner: 1,\n  /* 编译小程序，生成的prop */\n  __owner: 1,\n  __page: 1,\n};\n\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\nfunction setStyle(domStyle, style, value) {\n  if (isNullOrUndef(value) || (isNumber(value) && isNaN(value))) {\n    domStyle[style] = '';\n    return;\n  }\n  if (style === 'float') {\n    domStyle.cssFloat = value;\n    domStyle.styleFloat = value;\n    return;\n  }\n  domStyle[style] = !isNumber(value) || IS_NON_DIMENSIONAL.test(style) ? value : `${value}px`;\n}\n\nfunction patchEvent(\n  eventName: string,\n  lastEvent: Function,\n  nextEvent: Function,\n  domNode: Element,\n) {\n  if (lastEvent !== nextEvent) {\n    if (isFunction(lastEvent)) {\n      detachEvent(domNode, eventName, lastEvent);\n    }\n    attachEvent(domNode, eventName, nextEvent);\n  }\n}\n\nconst BASE_DEVICE_WIDTH = 750;\nconst isIOS = navigator.userAgent.match('iPhone');\nconst deviceWidth = window.screen.width || 375;\nconst deviceDPR = window.devicePixelRatio || 2;\nconst eps = 1e-4;\n\nfunction rpx2px(number) {\n  if (number === 0) {\n    return 0;\n  }\n  number = number / BASE_DEVICE_WIDTH * deviceWidth;\n  number = Math.floor(number + eps);\n  if (number === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number;\n}\n\nfunction transformRpx(str: string) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  let state = 0;\n  let res = '';\n  let number = '';\n  for (let i = 0, l = str.length; i < l; i++) {\n    const char = str[i];\n    if (/[\\d.]/.test(char) && i < l - 1 && state !== 2) {\n      state = 3;\n      number += char;\n      continue;\n    } else if (state === 1) {\n      if (char === '\\n' || char === '\\r' || char === ' ' && res.slice(-1) === ' ') {\n        continue;\n      }\n      if (char === '(' && res.endsWith('url')) {\n        state = 2;\n      }\n      if (char === ';') {\n        state = 0;\n      }\n      res += char;\n    } else if (state === 2) {\n      if (char === ')') {\n        state = 1;\n      }\n      res += char;\n    } else if (state === 3) {\n      if (!/[\\d.]/.test(char)) {\n        const safeNum = Number(number);\n        if (str.slice(i, i + 4).match(/rpx([\\s;),}]|$)/) && !isNaN(safeNum)) {\n          res += `${rpx2px(safeNum)}px`;\n          i += 2;\n        } else {\n          res += number;\n          res += char;\n        }\n        state = 1;\n        number = '';\n        continue;\n      }\n      number += char;\n      if (i === l - 1) {\n        // 结束了，number还没处理\n        res += number;\n      }\n    } else {\n      if (char === ':') {\n        state = 1;\n      }\n      res += char;\n    }\n  }\n  return res;\n}\n\nfunction patchStyle(lastAttrValue: CSSStyleSheet, nextAttrValue: CSSStyleSheet, dom: HTMLElement) {\n  const domStyle = dom.style;\n  let style;\n  let value;\n\n  if (isString(nextAttrValue)) {\n    domStyle.cssText = transformRpx(nextAttrValue);\n    return;\n  }\n  if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\n    for (style in nextAttrValue) {\n      value = nextAttrValue[style];\n      if (value !== lastAttrValue[style]) {\n        setStyle(domStyle, style, value);\n      }\n    }\n    for (style in lastAttrValue) {\n      if (isNullOrUndef(nextAttrValue[style])) {\n        domStyle[style] = '';\n      }\n    }\n  } else {\n    for (style in nextAttrValue) {\n      value = nextAttrValue[style];\n      setStyle(domStyle, style, value);\n    }\n  }\n}\n\nexport function patchProp(\n  domNode: Element,\n  prop: string,\n  lastValue,\n  nextValue,\n  lastVnode: VNode | null,\n  isSvg?: boolean,\n) {\n  // fix the value update for textarea/input\n  if (lastValue !== nextValue || prop === 'value') {\n    if (prop === 'className') {\n      prop = 'class';\n    }\n    if (skipProps[prop] === 1) {\n\n    } else if (prop === 'class' && !isSvg) {\n      domNode.className = nextValue;\n    } else if (prop === 'dangerouslySetInnerHTML') {\n      const lastHtml = lastValue && lastValue.__html;\n      const nextHtml = nextValue && nextValue.__html;\n\n      if (lastHtml !== nextHtml) {\n        if (!isNullOrUndef(nextHtml)) {\n          if (\n            isValidElement(lastVnode)\n            && lastVnode.children !== EMPTY_CHILDREN\n          ) {\n            unmountChildren(lastVnode.children);\n            lastVnode.children = [];\n          }\n          domNode.innerHTML = nextHtml;\n        }\n      }\n    } else if (isAttrAnEvent(prop)) {\n      patchEvent(prop, lastValue, nextValue, domNode);\n    } else if (prop === 'style') {\n      patchStyle(lastValue, nextValue, domNode as HTMLElement);\n    } else if (\n      prop !== 'list'\n      && prop !== 'type'\n      && !isSvg\n      && prop in domNode\n    ) {\n      setProperty(domNode, prop, nextValue == null ? '' : nextValue);\n      if (nextValue == null || nextValue === false) {\n        domNode.removeAttribute(prop);\n      }\n    } else if (isNullOrUndef(nextValue) || nextValue === false) {\n      domNode.removeAttribute(prop);\n    } else {\n      const namespace = SVGPropertyConfig.DOMAttributeNamespaces[prop];\n      if (isSvg && namespace) {\n        if (nextValue) {\n          domNode.setAttributeNS(namespace, prop, nextValue);\n        } else {\n          const colonPosition = prop.indexOf(':');\n          const localName = colonPosition > -1 ? prop.substr(colonPosition + 1) : prop;\n          domNode.removeAttributeNS(namespace, localName);\n        }\n      } else {\n        if (!isFunction(nextValue)) {\n          domNode.setAttribute(prop, nextValue);\n        }\n        // WARNING: Non-event attributes with function values:\n        // https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html#changes-in-detail\n      }\n    }\n  }\n}\n\nexport function setProperty(node, name, value) {\n  try {\n    node[name] = value;\n  } catch (e) {}\n}\n\nfunction patchProps(\n  domNode: Element,\n  nextProps: Props,\n  previousProps: Props,\n  lastVnode: VNode,\n  isSvg?: boolean,\n) {\n  for (const propName in previousProps) {\n    const value = previousProps[propName];\n    if (isNullOrUndef(nextProps[propName]) && !isNullOrUndef(value)) {\n      if (isAttrAnEvent(propName)) {\n        detachEvent(domNode, propName, value);\n      } else if (propName === 'dangerouslySetInnerHTML') {\n        domNode.textContent = '';\n      } else if (propName === 'className') {\n        domNode.removeAttribute('class');\n      } else {\n        domNode.removeAttribute(propName);\n      }\n    }\n  }\n  for (const propName in nextProps) {\n    patchProp(\n      domNode,\n      propName,\n      previousProps[propName],\n      nextProps[propName],\n      lastVnode,\n      isSvg,\n    );\n  }\n}\n\nexport default patch;\n","import { isFunction, isString, isObject } from '@/nerv/utils';\nimport { isComposite } from '@/nerv/shared';\nimport { errorCatcher } from '../lifecycle';\n\nexport default {\n  update(lastVnode, nextVnode, domNode?) {\n    const prevRef = lastVnode != null && lastVnode.ref;\n    const nextRef = nextVnode != null && nextVnode.ref;\n\n    if (prevRef !== nextRef) {\n      this.detach(lastVnode, prevRef, lastVnode.dom);\n      this.attach(nextVnode, nextRef, domNode);\n    }\n  },\n  attach(vnode, ref, domNode: Element) {\n    const node = isComposite(vnode) ? vnode.component : domNode;\n    if (isFunction(ref)) {\n      const componentForCatcher = isComposite(vnode) ? vnode.component : vnode;\n      errorCatcher(() => {\n        ref(node);\n      }, componentForCatcher);\n    } else if (isString(ref)) {\n      const inst = vnode._owner;\n      if (inst && isFunction(inst.render)) {\n        inst.refs[ref] = node;\n      }\n    } else if (isObject(ref)) {\n      ref.current = node;\n    }\n  },\n  detach(vnode, ref, domNode: Element) {\n    const node = isComposite(vnode) ? vnode.component : domNode;\n    if (isFunction(ref)) {\n      const componentForCatcher = isComposite(vnode) ? vnode.component : vnode;\n      errorCatcher(() => {\n        ref(null);\n      }, componentForCatcher);\n    } else if (isString(ref)) {\n      const inst = vnode._owner;\n      if (inst.refs[ref] === node && isFunction(inst.render)) {\n        delete inst.refs[ref];\n      }\n    } else if (isObject(ref)) {\n      ref.current = null;\n    }\n  },\n};\n","const NS = {\n  ev: 'http://www.w3.org/2001/xml-events',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n}\n\nconst ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  evEvent: 'ev:event',\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  in: 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlId: 'xml:id',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n}\n\nconst SVGPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    'ev:event': NS.ev,\n    'xlink:actuate': NS.xlink,\n    'xlink:arcrole': NS.xlink,\n    'xlink:href': NS.xlink,\n    'xlink:role': NS.xlink,\n    'xlink:show': NS.xlink,\n    'xlink:title': NS.xlink,\n    'xlink:type': NS.xlink,\n    'xml:base': NS.xml,\n    'xml:id': NS.xml,\n    'xml:lang': NS.xml,\n    'xml:space': NS.xml\n  },\n  DOMAttributeNames: {}\n}\n\nObject.keys(ATTRS).forEach((key) => {\n  SVGPropertyConfig.Properties[key] = 0\n  if (ATTRS[key]) {\n    SVGPropertyConfig.DOMAttributeNames[key] = ATTRS[key]\n  }\n})\n\nexport default SVGPropertyConfig\n","import { isNullOrUndef, isInvalid, VType, VirtualChildren } from '@/nerv/shared';\nimport { isAttrAnEvent, isArray } from '@/nerv/utils';\nimport Ref from './ref';\nimport { detachEvent } from '../event';\n\nexport function unmountChildren(\n  children: VirtualChildren,\n  parentDom?: Element,\n) {\n  if (isArray(children)) {\n    for (let i = 0, len = children.length; i < len; i++) {\n      unmount(children[i], parentDom);\n    }\n  } else {\n    unmount(children, parentDom);\n  }\n}\n\nexport function unmount(vnode, parentDom?) {\n  if (isInvalid(vnode)) {\n    return;\n  }\n  const { vtype } = vnode;\n  // Bitwise operators for better performance\n  // see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\n  const { dom } = vnode;\n\n  if ((vtype & (VType.Composite)) > 0) {\n    vnode.destroy();\n  } else if ((vtype & VType.Node) > 0) {\n    const { props, children, ref } = vnode;\n    unmountChildren(children);\n    for (const propName in props) {\n      if (isAttrAnEvent(propName)) {\n        detachEvent(dom, propName, props[propName]);\n      }\n    }\n    if (ref !== null) {\n      Ref.detach(vnode, ref, dom);\n    }\n  } else if (vtype & VType.Portal) {\n    unmountChildren(vnode.children, vnode.type);\n  }\n\n  if (!isNullOrUndef(parentDom) && !isNullOrUndef(dom)) {\n    if (isArray(dom)) {\n      for (let i = 0; i < dom.length; i++) {\n        parentDom.removeChild(dom[i]);\n      }\n    } else {\n      parentDom.removeChild(dom);\n    }\n  }\n  // vnode.dom = null\n}\n","// some library check React version\n// see: https://github.com/NervJS/nerv/issues/46\nexport const version = '15.4.2'\n","import Nerv, { createNervClass } from '@/nerv';\n\nlet test;\nconst cache = {};\nfunction getLiteralText(text) {\n  if (cache[text]) {\n    return cache[text];\n  }\n  if (!test) {\n    test = document.createElement('div');\n  }\n  test.innerHTML = text;\n  cache[text] = test.textContent;\n  return cache[text];\n}\nconst validSpace = {\n  ensp: 1,\n  emsp: 1,\n};\nfunction transformSpace(str, o) {\n  if (validSpace[o]) {\n    return str.replace(/ /g, getLiteralText(`&${o};`));\n  }\n  return str;\n}\nconst keys = ['&nbsp;', '&lt;', '&gt;', '&amp;', '&apos;', '&ensp;', '&emsp;'];\nconst replaceEncodeReg = new RegExp(keys.join('|'), 'g');\nfunction decodeStr(str) {\n  return str.replace(replaceEncodeReg, (m) => {\n    return getLiteralText(m);\n  });\n}\n\nexport default createNervClass({\n  displayName: 'Text',\n  mixins: [\n\n  ],\n  render: function render() {\n    const { children, style, selectable, id, space, decode, $mp, ...rest } = this.props;\n    let { className = '', numberOfLines } = this.props;\n\n    let retStyle = { WebkitUserSelect: selectable ? 'text' : 'none', ...style };\n    className += ` a-text-${space ? '' : 'no'}-space`;\n    if (typeof numberOfLines === 'string') {\n      numberOfLines = parseInt(numberOfLines, 10);\n    }\n    if (numberOfLines > 0) {\n      retStyle = { overflow: 'hidden', textOverflow: 'ellipsis', display: '-webkit-box', WebkitLineClamp: numberOfLines, WebkitBoxOrient: 'vertical', ...retStyle };\n    }\n    const nodes = [];\n\n    Nerv.Children.forEach(children, (c) => {\n      if (typeof c === 'string') {\n        if (decode) {\n          c = decodeStr(c);\n        }\n        if (space && space !== 'nbsp') {\n          c = transformSpace(c, space);\n        }\n        // compatible\n        c = c.replace(/\\\\n/g, '\\n');\n      }\n      nodes.push(c);\n    });\n\n    return Nerv.createElement('span', {\n      className,\n      style: retStyle,\n      id,\n      ...$mp.getAriaProps(),\n      ...rest,\n    }, nodes);\n  },\n});\n","import { createComponent } from '../framework';\nimport Text from './Text';\n\nexport default createComponent({\n  name: 'text',\n})(Text);\n","import gerror from './gerror';\n\nexport default class EventEmitter {\n  constructor() {\n    this.allListeners = {};\n  }\n\n  _addListener(_types, listener, options = {}) {\n    const _this = this;\n\n    let types = _types;\n    if (!Array.isArray(types)) {\n      types = [types];\n    }\n    const { allListeners } = this;\n\n    types.forEach((type) => {\n      const fns = allListeners[type] = allListeners[type] || [];\n      if (fns.indexOf(listener) !== -1) {\n        return;\n      }\n      if (options.prepend) {\n        fns.unshift(listener);\n      } else {\n        fns.push(listener);\n      }\n    });\n    return {\n      remove: function remove() {\n        _this.removeListener(types, listener);\n      },\n    };\n  }\n\n  addListener(types, listener) {\n    return this._addListener(types, listener);\n  }\n\n  prependListener(types, listener) {\n    return this._addListener(types, listener, { prepend: true });\n  }\n\n  listeners(type) {\n    return type ? this.allListeners[type] || [] : this.allListeners;\n  }\n\n  listenerCount(type) {\n    if (type) {\n      return this.listeners(type).length;\n    } else {\n      const { allListeners } = this;\n\n      const keys = Object.keys(allListeners);\n      let count = 0;\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        count += allListeners[key] && allListeners[key].length || 0;\n      }\n      return count;\n    }\n  }\n\n  emit(_types, ...args) {\n    let types = _types;\n    if (!Array.isArray(types)) {\n      types = [types];\n    }\n    const loopListeners = { ...this.allListeners };\n    types.forEach((type) => {\n      const fns = loopListeners[type];\n      if (fns) {\n        fns.concat().forEach((f) => {\n          try {\n            f.apply(undefined, args);\n          } catch (e) {\n            gerror(e);\n          }\n        });\n      }\n    });\n  }\n\n  removeListener(_types, listener) {\n    let types = _types;\n    if (!Array.isArray(types)) {\n      types = [types];\n    }\n    const { allListeners } = this;\n\n    types.forEach((type) => {\n      const fns = allListeners[type];\n      if (fns) {\n        if (listener) {\n          const index = fns.indexOf(listener);\n          if (index !== -1) {\n            fns.splice(index, 1);\n          }\n        } else {\n          delete allListeners[type];\n        }\n      }\n    });\n  }\n\n  on(...args) {\n    this.addListener(...args);\n  }\n\n  off(...args) {\n    this.removeListener(...args);\n  }\n}\n","import { getStartupParams } from '@/framework/';\n\nlet id = 0;\nlet isTest;\nconst empty = {};\nfunction isTesting() {\n  if (isTest !== undefined) {\n    return isTest;\n  }\n  isTest = getStartupParams().runStage === 'test';\n  return isTest;\n}\nexport default ({\n  getTestProps: function getTestProps() {\n    if (isTesting()) {\n      let testProps = {};\n      const props = this.props || {};\n      this.dataTestId = this.dataTestId || ++id;\n      testProps = {\n        'data-testid': this.dataTestId,\n      };\n      if (props.onTap || props.catchTap) {\n        testProps['data-is-bind-on-tap'] = true;\n      }\n      return testProps;\n    } else {\n      return empty;\n    }\n  },\n  logTestId: function logTestId() {\n    if (isTesting()) {\n      const testProps = this.getTestProps();\n      console.log(`[data-testid]=${testProps['data-testid']} response`);\n    }\n  },\n});\n","import objectKeys from './objectKeys';\n\nexport default function addEvents(target, fns) {\n  const names = objectKeys(fns);\n  names.forEach((name) => {\n    target.addEventListener(name, fns[name]);\n  });\n  return {\n    remove: function remove() {\n      names.forEach((name) => {\n        target.removeEventListener(name, fns[name]);\n      });\n    },\n  };\n}\n","export default function callBridge(method, param, callback) {\n  const g = self;\n  const { JSBridge } = g;\n\n  function done(res) {\n    if (res && res.error) {\n      if (method === 'internalAPI') {\n        if (param && param.method !== 'onAppPerfEvent') {\n          console.error(`callInternalAPI error: ${param.method}`, param, res);\n        }\n      } else {\n        console.error(`callBridge error: ${method}`, param, res);\n      }\n    }\n    if (callback) {\n      callback(res);\n    }\n  }\n\n  if (JSBridge) {\n    JSBridge.call(method, param, done);\n  } else {\n    document.addEventListener('JSBridgeReady', () => {\n      g.JSBridge.call(method, param, done);\n    });\n  }\n}\n","import { getStartupParams } from '@/framework/startupParams';\nimport callBridge from './callBridge';\n\nconst ddOrAp = true || false;\n\nexport default function callInternalAPI(method, param = {}, callback) {\n  if (ddOrAp && !getStartupParams().isInternalApp) {\n    const internalParams = {\n      method,\n      param,\n    };\n    if ('viewId' in param) {\n      internalParams.viewId = param.viewId;\n    }\n    callBridge('internalAPI', internalParams, callback);\n  } else {\n    callBridge(method, param, callback);\n  }\n}\n","export const PendingKeyType = 'PendingKeyType';\n\nexport const PendingKeyId = 'PendingKeyId';\n\nexport const PendingKeyData = 'PendingKeyData';\n\nexport const PendingKeyOp = 'PendingKeyOp';\n\nexport const PendingValuePage = 1;\n\nexport const PendingValueComponent = 2;\n\nexport const OpSet = 1;\n\nexport const OpSplice = 2;\n\nexport const PayloadKeyMountedComponents = 'PayloadKeyMountedComponents';\n\nexport const PayloadKeyUnmountedComponents = 'PayloadKeyUnmountedComponents';\n\nexport const ComponentKeyId = 'ComponentKeyId';\n\nexport const ComponentKeyIs = 'ComponentKeyIs';\n\nexport const ComponentKeyDiffProps = 'ComponentKeyDiffProps';\n\nexport const ComponentKeyOwnerId = 'ComponentKeyOwnerId';\n\nexport const DiffKeyUpdated = 'DiffKeyUpdated';\n\nexport const DiffKeyDeleted = 'DiffKeyDeleted';\n\nexport const ComponentKeyName = 'ComponentKeyName';\n\nexport const ComponentPropsId = 'ComponentPropsId';\n","export default function debounce(func, wait, options) {\n  let lastArgs;\n  let lastThis;\n  let maxWait;\n  let result;\n  let timerId;\n  let lastCallTime;\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && typeof requestAnimationFrame === 'function';\n  wait = +wait || 0;\n  if (options) {\n    leading = options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n  function startTimer(pendingFunc, localWait) {\n    if (useRAF) {\n      return requestAnimationFrame(pendingFunc);\n    }\n    return setTimeout(pendingFunc, localWait);\n  }\n  function cancelTimer(id) {\n    if (useRAF) {\n      return cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n  function timerExpired() {\n    const time = Date.now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n  function trailingEdge(time) {\n    timerId = undefined;\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n  function pending() {\n    return timerId !== undefined;\n  }\n  const debounced = function debounced() {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    lastThis = this;\n    lastCallTime = time;\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n    return result;\n  };\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n  return debounced;\n}\n","import objectKeys from './objectKeys';\n\nexport default function escapeLogParams(params) {\n  if (!params) {\n    return '';\n  }\n  if (typeof params === 'string') {\n    return params;\n  }\n  return objectKeys(params).map((key) => {\n    let escaped = `${key}=`;\n    escaped += String(params[key]).replace(/,/g, ';').replace(/\\^/g, '@').replace(/\\=/g, '~');\n    return escaped;\n  }).join('^');\n}\n","import { noop } from './types';\n\nexport function getPropsEventName(name, isCatch = false, capture = false) {\n  let str = '';\n\n  str += isCatch ? 'catch' : 'bind';\n\n  if (name) {\n    str += name;\n  }\n  if (capture) {\n    str = `capture-${str}`;\n  }\n\n  return str;\n}\n\nexport function getPropsEvent(name, isCatch = false, capture = false) {\n  let str = '';\n\n  str += isCatch ? 'catch' : 'bind';\n\n  if (name) {\n    str += name;\n  }\n  if (capture) {\n    str = `capture-${str}`;\n  }\n\n  const handler = this.props[str];\n\n  if (typeof handler === 'function') {\n    return handler;\n  }\n  return noop;\n}\n","import { isAndroid, compareUCVersion } from './system';\nimport callInternalAPI from './callInternalAPI';\n\nconst { devicePixelRatio } = window;\n\nexport default function focusInput(node, inputFocus4Android, supportNative) {\n  if (node) {\n    node.focus();\n    if (isAndroid) {\n      // android系统 input native化后 非页面初次进入时调用inputFocus4Android反而出错\n      if (compareUCVersion('2.13') >= 0 || supportNative === true && node.type !== 'password' && inputFocus4Android === false) {\n        return null;\n      }\n\n      const { right, bottom } = node.getBoundingClientRect();\n\n      callInternalAPI('inputFocus4Android', {\n        coordinateX: String(right * devicePixelRatio),\n        coordinateY: String(bottom * devicePixelRatio),\n      });\n    }\n  }\n}\n","const g = self;\n\nexport default function gerror(e) {\n  if (!e.message) {\n    e = new Error(e);\n  }\n  if (g.onerror) {\n    g.onerror(e.message, e.sourceURL, e.line, e.column, e);\n  } else {\n    console.error(e);\n  }\n}\n","import objectKeys from './objectKeys';\nimport stringToPath from './stringToPath';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * get(object, 'a[0].b.c');\n * // => 3\n *\n */\nfunction getData(object, path) {\n  if (object) {\n    path = stringToPath(path);\n    let index = 0;\n    const { length } = path;\n    while (object && index < length) {\n      object = object[path[index++]];\n    }\n    return index && index === length ? object : undefined;\n  }\n  return object;\n}\n\nexport default function (data, dataConfig) {\n  if (!data) {\n    return undefined;\n  }\n  const ret = {};\n  objectKeys(dataConfig).forEach((k) => {\n    ret[k] = getData(data, dataConfig[k]);\n  });\n  return ret;\n}\n","import { getStartupParams } from './startupParams';\n\nconst debugMatchCache = {};\n\nexport function isDebug() {\n  return !!getStartupParams().debug;\n}\n\nexport function isDebugFramework() {\n  return isDebugSupported('framework');\n}\n\nexport function isDebugSupported(type) {\n  let isMatch = debugMatchCache[type];\n  if (typeof isMatch === 'undefined') {\n    const _getStartupParams = getStartupParams();\n    const { debug } = _getStartupParams;\n\n    if (debug) {\n      isMatch = !!debug.match(new RegExp(`\\\\b${type}\\\\b`));\n      debugMatchCache[type] = isMatch;\n    }\n  }\n\n  return isMatch;\n}\n","// 判断两个矩阵是否相交\nconst isRectIntersect = function isRectIntersect(rect1, rect2, appearOffset) {\n  const newLeft = Math.max(rect1.left - appearOffset, rect2.left);\n  const newTop = Math.max(rect1.top - appearOffset, rect2.top);\n  const newRight = Math.min(rect1.right, rect2.right);\n  const newBottom = Math.min(rect1.bottom, rect2.bottom);\n  return !(newLeft > newRight || newTop > newBottom);\n};\nexport default function isNodeVisible(element, scrollParent, appearOffset = 0) {\n  if (!element) {\n    return false;\n  }\n  const elementRect = element.getBoundingClientRect();\n  // 面积为0\n  if (elementRect.width * elementRect.height === 0) {\n    return false;\n  }\n  const docEl = document.documentElement;\n  const viewport = {\n    top: 0,\n    left: 0,\n    bottom: docEl.clientHeight,\n    right: docEl.clientWidth,\n  };\n    // 没有局部滚动的父元素\n  if (scrollParent === undefined) {\n    return isRectIntersect(elementRect, viewport, appearOffset);\n  } else {\n    const parentRect = scrollParent.getBoundingClientRect();\n    // 父元素是否可见\n    const parentNodeIsVisible = isRectIntersect(parentRect, viewport, appearOffset);\n    if (parentNodeIsVisible) {\n      // 父元素 且子元素在父元素和window下都可见\n      return isRectIntersect(elementRect, viewport, appearOffset) && isRectIntersect(elementRect, parentRect, appearOffset);\n    } else {\n      return false;\n    }\n  }\n}\n","import { isDebug, isDebugSupported } from './isDebug';\n\nfunction internalLog(args) {\n  console.log.apply(console, args);\n}\n\nexport default function log(...args) {\n  if (isDebug()) {\n    internalLog(args);\n  }\n}\n\nexport function debug(type, ...rest) {\n  if (isDebugSupported(type)) {\n    internalLog([`[${type}]`].concat(rest));\n  }\n}\n","export default function mergeArray(target, from) {\n  from.forEach((f) => {\n    if (target.indexOf(f) === -1) {\n      target.push(f);\n    }\n  });\n  return target;\n}\n","export default function objectKeys(obj) {\n  if (obj && typeof obj === 'object') {\n    return Object.keys(obj);\n  }\n  return [];\n}\n","import callInternalAPI from './callInternalAPI';\nimport callBridge from './callBridge';\nimport { SDKVersion, systemVersion } from './system';\nimport escapeLogParams from './escapeLogParams';\n\nlet did = '';\nlet version = '';\nlet appId = '';\nlet fromIDE;\nlet cluePID;\nfunction stringify(obj) {\n  const arr = [];\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      arr.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}`);\n    }\n  }\n  return arr.join('&');\n}\nfunction _reportError(code, e) {\n  if (appId === '') {\n    const startupParams = window.JSBridge && window.JSBridge.startupParams;\n    if (startupParams && startupParams.version) {\n      version = startupParams.version;\n      fromIDE = startupParams.fromIDE;\n      appId = startupParams.appId;\n    }\n    if (cluePID === undefined && startupParams && startupParams.cluePID) {\n      cluePID = startupParams.cluePID;\n    }\n  }\n  if (!fromIDE && did !== 'unknown') {\n    const ua = navigator.userAgent;\n    const error = e.error || {};\n    const col = error.column || `_${e.col || '-1'}`;\n    const line = error.line || `_${e.line || '-1'}`;\n    const msg = `${error.message || e.msg}^${line}^${col}`;\n    const errorUrl = error.sourceURL || `_${e.url || '__errorUrl'}`;\n    const option = {\n      pid: 'miniprogram',\n      code,\n      msg,\n      uid: did,\n      page: location.href,\n      ua,\n      rel: version,\n      c1: SDKVersion,\n      c2: appId,\n      c3: systemVersion,\n      c4: errorUrl,\n      c5: error.stack,\n    };\n    const fsp = new Image();\n    fsp.src = `https://gm.mmstat.com/fsp.1.1?${stringify(option)}`;\n    if (appId !== '') {\n      const fspForSingleApp = new Image();\n      option.pid = `miniprogram-${cluePID || appId}`;\n      fspForSingleApp.src = `https://gm.mmstat.com/fsp.1.1?${stringify(option)}`;\n    }\n    callBridge('remoteLog', {\n      type: 'error',\n      seedId: 'H5_CUSTOM_ERROR',\n      param1: `H5_CUSTOM_ERROR_TINY_${code}`,\n      param3: escapeLogParams({\n        errorMsg: msg,\n        errorUrl,\n        SDKVersion,\n      }),\n    });\n  }\n}\nexport default function reportError(code, e) {\n  if ( true && !did) {\n    callInternalAPI('getUserInfo', (result) => {\n      if (result && result.userId) {\n        did = result.userId;\n        _reportError(code, e);\n      } else {\n        callInternalAPI('getConfig', {\n          configKeys: ['did'],\n        }, (result) => {\n          if (result && result.data && result.data.did) {\n            did = result.data.did;\n          } else {\n            did = 'unknown';\n          }\n          _reportError(code, e);\n        });\n      }\n    });\n  } else {\n    _reportError(code, e);\n  }\n}\n","window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n\nexport default (window.requestAnimationFrame || (window.requestAnimationFrame = function (callback) {\n  typeof callback === 'function' && setTimeout(() => {\n    callback();\n  }, 17);\n}));\n","export default function rgba2Color(rgba) {\n  // 如果是rgba颜色表示\n  if (/^(rgb|RGB)/.test(rgba)) {\n    const aColor = rgba.replace(/(?:\\(|\\)|rgba|RGBA)*/g, '').replace(/(?:\\(|\\)|rgb|RGB)*/g, '').split(',');\n    let strHex = '#';\n    for (let i = 0; i < aColor.length; i++) {\n      let color = Number(aColor[i]);\n      if (i === 3) {\n        color = parseInt(`${color * 255}`);\n      }\n      let hex = color.toString(16);\n      if (hex.length < 2) {\n        hex = `0${hex}`;\n      }\n      strHex += hex;\n    }\n    if (strHex.length === 7) {\n      strHex += 'ff';\n    }\n    if (strHex.length !== 9) {\n      strHex = rgba;\n    }\n    return strHex;\n  }\n  return rgba;\n}\n","import objectKeys from './objectKeys';\nimport stringToPath from './stringToPath';\nimport shallowEqual from './shallowEqual';\nimport { OpSet, OpSplice } from './consts';\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nfunction isArray(obj) {\n  return Array.isArray(obj);\n}\nfunction clone(obj, assumeArray) {\n  if (!obj) {\n    return assumeArray ? [] : {};\n  } else if (isArray(obj)) {\n    return obj.slice();\n  }\n  return { ...obj };\n}\nfunction set(dest, src, path, changeCallback, deepLevel) {\n  const currentPath = path[0];\n  if (deepLevel && dest === src || !dest) {\n    dest = clone(src, isNumber(currentPath));\n  }\n  if (path.length === 1) {\n    return changeCallback(dest, currentPath);\n  }\n  if (src) {\n    src = src[currentPath];\n  }\n  dest[currentPath] = set(dest[currentPath], src, path.slice(1), changeCallback, true);\n  return dest;\n}\n\nexport default function setData(data, changedData) {\n  const ret = { ...data };\n  objectKeys(changedData).forEach((pathString) => {\n    const path = stringToPath(pathString);\n    set(ret, ret, path, (clonedObj, finalPath) => {\n      clonedObj[finalPath] = changedData[pathString];\n      return clonedObj;\n    });\n  });\n  if (shallowEqual(ret, data)) {\n    return data;\n  }\n  return ret;\n}\n\nexport function spliceData(data, changedData) {\n  const ret = { ...data };\n  objectKeys(changedData).forEach((pathString) => {\n    const path = stringToPath(pathString);\n    set(ret, ret, path, (clonedObj, finalPath) => {\n      let arr = clonedObj[finalPath];\n      if (Array.isArray(arr)) {\n        arr = arr.concat();\n        arr.splice.apply(arr, changedData[pathString]);\n        clonedObj[finalPath] = arr;\n      }\n      return clonedObj;\n    });\n  });\n  if (shallowEqual(ret, data)) {\n    return data;\n  }\n  return ret;\n}\nexport function getOpStr(op) {\n  return op === setData ? OpSet : OpSplice;\n}\nexport function getOpFn(op) {\n  return op === OpSet ? setData : spliceData;\n}\n","import objectKeys from './objectKeys';\n\nexport default function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = objectKeys(objA);\n  const keysB = objectKeys(objB);\n  const len = keysA.length;\n  if (len !== keysB.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    const key = keysA[i];\n    if (!objB.hasOwnProperty(key)) {\n      return false;\n    }\n    const valueA = objA[key];\n    const valueB = objB[key];\n    if (valueA !== valueB) {\n      return false;\n    }\n  }\n  return true;\n}\n","export default function startsWith(str, prefix) {\n  if (!str || !prefix) {\n    return false;\n  }\n  return str.slice(0, prefix.length) === prefix;\n}\n","import { getValue, setValue } from './startupParamsHolder';\n\nconst g = self;\n\nexport function getStartupParams() {\n  if (g.__mpStartupParams) {\n    return g.__mpStartupParams;\n  }\n  return getValue() || {};\n}\n\nexport const setStartupParams = setValue;\n","import objectKeys from '../objectKeys';\n\nlet v;\n\nexport function setValue(o) {\n  if (objectKeys(o).length) {\n    v = o;\n  }\n}\nexport function getValue() {\n  return v;\n}\n\nself.__getStartupParams = getValue;\n","const reLeadingDot = /^\\./;\n// a..b\n// a[][]b\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\nconst reEscapeChar = /\\\\(\\\\)?/g;\nconst stringToPathCache = {};\n\nexport default function stringToPath(stringPath) {\n  if (stringToPathCache[stringPath]) {\n    return stringToPathCache[stringPath];\n  }\n  const result = [];\n  if (reLeadingDot.test(stringPath)) {\n    result.push('');\n  }\n  stringPath.replace(rePropName, (match, num, quote, str) => {\n    let part = match;\n    if (quote) {\n      part = str.replace(reEscapeChar, '$1');\n    } else if (num) {\n      part = parseInt(num, 10);\n    }\n    result.push(part);\n  });\n  stringToPathCache[stringPath] = result;\n  return result;\n}\n","// Test via a getter in the options object to see if the passive property is accessed\nlet supportsPassive = false;\ntry {\n  const n = null;\n  const opts = Object.defineProperty({}, 'passive', {\n    get() {\n      supportsPassive = true;\n    },\n  });\n  window.addEventListener('testPassive', n, opts);\n  window.removeEventListener('testPassive', n, opts);\n} catch (e) {}\n\nexport default supportsPassive;\n","import log from './log';\n\nconst ua = navigator.userAgent || navigator.swuserAgent;\nconst _systemVersion = ua.match(/AlipayClient\\/(\\d+\\.\\d+\\.\\d+)/);\nconst _UCVersion = ua.match(/UCBS\\/(\\d+\\.\\d+)/);\n// expose all functions for ant fortune app\nconst systemVersion = _systemVersion && _systemVersion[1] || '100.0.0';\nconst UCVersion = _UCVersion && _UCVersion[1] || '2.12';\nconst isAndroid = ua.indexOf('Android') > -1;\nconst isIOS = !!ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\nconst isIDE = ua.indexOf('AlipayIDE') > -1;\nconst SDKVersion = '0.0.1';\nconst caches = {};\nconst cacheIntArray = {};\nconst isUC = !!(_UCVersion && _UCVersion[1]);\nconst isNativeComponent = isUC || isIOS;\n\nfunction toIntArray(v) {\n  if (cacheIntArray[v]) {\n    return cacheIntArray[v];\n  }\n  const ret = [];\n  const version = v.split('.');\n  for (let i = 0; i < version.length; i+=1) {\n    ret.push(parseInt(version[i], 10));\n  }\n  cacheIntArray[v] = ret;\n  return ret;\n}\n\nfunction compareVersion(version, targetVersion) {\n  if (version && targetVersion) {\n    const key = `${version}__${targetVersion}`;\n    if (key in caches) {\n      return caches[key];\n    }\n    version = toIntArray(version);\n    targetVersion = toIntArray(targetVersion);\n    for (let i = 0, n1, n2; i < version.length; i+=1) {\n      n1 = targetVersion[i] || 0;\n      n2 = version[i] || 0;\n      if (n1 > n2) {\n        caches[key] = -1;\n        break;\n      }\n      if (n1 < n2) {\n        caches[key] = 1;\n        break;\n      }\n    }\n    caches[key] = caches[key] || 0;\n    return caches[key];\n  }\n  return 0;\n}\n\nfunction logSystemInfo() {\n  log(`${'version: '}${SDKVersion}`);\n}\n\nfunction compareSystemVersion(targetVersion) {\n  return compareVersion(systemVersion, targetVersion);\n}\n\nfunction compareUCVersion(targetVersion) {\n  return compareVersion(UCVersion, targetVersion);\n}\n\nexport {\n  systemVersion,\n  UCVersion,\n  isAndroid,\n  isIOS,\n  isIDE,\n  SDKVersion,\n  isUC,\n  isNativeComponent,\n  compareVersion,\n  logSystemInfo,\n  compareSystemVersion,\n  compareUCVersion,\n};\n","import debounce from './debounce';\n\nexport default function throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n  if (options) {\n    leading = 'leading' in options ? options.leading : leading;\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    leading,\n    maxWait: wait,\n    trailing,\n  });\n}\n","import trackerStore from './trackerStore';\nimport startsWith from './startsWith';\nimport getData from './getData';\nimport objectKeys from './objectKeys';\n\nconst DATASET_KEY = '$DATASET.';\nfunction matchElement(view, element) {\n  if (element.charAt(0) === '.') {\n    const className = element.slice(1);\n    const cs = view.props.className && view.props.className.trim().split(/\\s+/);\n    return cs && cs.indexOf(className) !== -1;\n  } else if (element.charAt(0) === '#') {\n    const viewId = view.props.id;\n    const id = element.slice(1);\n    return viewId === id;\n  }\n  return false;\n}\n\nexport default function trackTap(instance) {\n  const { trackerConfig } = trackerStore;\n\n  if (trackerConfig) {\n    // click\n    const dataset = instance.props.$mp.getDataset();\n    const $bridge = instance.props.$mp.bridge;\n    trackerConfig.forEach((event) => {\n      const { eventCode } = event;\n\n      event.eventTarget.forEach(({ data, action, element }) => {\n        if (matchElement(instance, element)) {\n          const dataConfig = {};\n          const datasetConfig = {};\n          objectKeys(data).forEach((k) => {\n            const c = data[k];\n            if (startsWith(c, DATASET_KEY)) {\n              datasetConfig[k] = c.slice(DATASET_KEY.length);\n            } else {\n              dataConfig[k] = c;\n            }\n          });\n          const params = getData(dataset, datasetConfig);\n          const method = action === 'collect' ? 'collectRemoteTrackerData' : 'reportRemoteTrackerData';\n          $bridge[method](eventCode, {\n            dataConfig,\n            params,\n          });\n        }\n      });\n    });\n  }\n}\n","export default ({});\n","export function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nexport function isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function noop() { /* no opration */ }\n\n/**\n * 获取类型名字\n * @param x\n */\nexport function getType(x) {\n  return Object.prototype.toString.call(x).slice(8, -1);\n}\n","export default ({\n  isValidAnimation(anim) {\n    const animation = anim || this.props.animation;\n    return animation && animation.length;\n  },\n  componentDidMount: function componentDidMount() {\n    this._animTimer = [];\n    if (this.isValidAnimation()) {\n      this.doAnimation();\n    }\n  },\n  componentDidUpdate(prevProps) {\n    if (this.props.animation !== prevProps.animation) {\n      if (this.isValidAnimation(prevProps.animation)) {\n        this.stopAnimation();\n      }\n      if (this.isValidAnimation()) {\n        this.doAnimation();\n      }\n    }\n  },\n  componentWillUnmount() {\n    this.deleteAllAnimTimers();\n  },\n  createAnimTimeout(fn, ms) {\n    const _this = this;\n\n    var timer = setTimeout(() => {\n      _this.deleteAnimTimer(timer);\n      fn();\n    }, ms);\n    this._animTimer.push(timer);\n  },\n  deleteAllAnimTimers: function deleteAllAnimTimers() {\n    this._animTimer.forEach((t) => {\n      clearTimeout(t);\n    });\n    this._animTimer = [];\n  },\n  deleteAnimTimer(t) {\n    const index = this._animTimer.indexOf(t);\n    if (index !== -1) {\n      clearTimeout(this._animTimer[index]);\n      this._animTimer.splice(index, 1);\n    }\n  },\n});\n","import Nerv, { createNervClass } from '@/nerv';\nimport addEvents from '@/utils/addEvents';\nimport isNodeVisible from '@/utils/isNodeVisible';\nimport throttle from '@/utils/throttle';\nimport objectKeys from '@/utils/objectKeys';\nimport {\n  lengthCssPropNames,\n  colorCssPropNames,\n  translateProperties,\n  rotateProperties,\n  skewProperties,\n  expandAnimation,\n} from './utils';\nimport AnimationViewMixin from './AnimationViewMixin';\n\nfunction transformUnit(v) {\n  if (typeof v === 'number') {\n    return `${v}px`;\n  }\n  return v;\n}\nfunction getDegreeTransform(property, value) {\n  return `${property}(${value.map((s) => {\n    return `${s}deg`;\n  }).join(',')})`;\n}\nfunction getNormalTransform(property, value) {\n  return `${property}(${value.join(',')})`;\n}\nfunction getTranslateTransform(property, value) {\n  return `${property}(${value.map((s) => {\n    return transformUnit(s);\n  }).join(',')})`;\n}\nfunction removeTransform(transform, property) {\n  if (transform) {\n    const reg = new RegExp(`${property}\\\\([^)]+\\\\)`, 'gi');\n    return transform.replace(reg, '');\n  }\n  return transform;\n}\nfunction getStyleFromAnimation(component, _animation, node) {\n  const style = {};\n  const animation = expandAnimation(_animation || []);\n  let transform = node.style.transform || '';\n  animation.forEach((a) => {\n    const p = a[0];\n    const value = a[1];\n    if (lengthCssPropNames[p]) {\n      style[p] = transformUnit(value[0]);\n    } else if (colorCssPropNames[p]) {\n      style[p] = value[0];\n    } else {\n      transform = removeTransform(transform, p);\n      if (p === 'rotate3d') {\n        const newValue = value.concat();\n        if (newValue.length === 4) {\n          newValue[3] += 'deg';\n        }\n        transform += ` ${p}(${newValue.join(',')})`;\n      } else if (rotateProperties[p] || skewProperties[p]) {\n        transform += ` ${getDegreeTransform(p, value)}`;\n      } else if (translateProperties[p]) {\n        transform += ` ${getTranslateTransform(p, value)}`;\n      } else {\n        transform += ` ${getNormalTransform(p, value)}`;\n      }\n    }\n  });\n  if (transform) {\n    style.transform = transform.trim();\n  }\n  return component.props.$mp.getNormalizedStyle({ style });\n}\n\nexport default createNervClass({\n  displayName: 'View',\n\n  mixins: [\n    AnimationViewMixin,\n  ],\n\n  componentDidMount() {\n    this.firstAppeared = false;\n    this.checkVisible = throttle(this.checkVisible, 300, {\n      leading: false,\n    });\n    this.handleAppear();\n  },\n\n  componentDidUpdate() {\n    this.handleAppear();\n  },\n\n  componentWillUnMount() {\n    this.removeAllScrollEventLister();\n  },\n\n  fireFirstAppear() {\n    const { onFirstAppear, $mp } = this.props;\n\n    if (onFirstAppear && !this.firstAppeared) {\n      onFirstAppear($mp.getNormalizedEvent('firstAppear'));\n      this.firstAppeared = true;\n      if (!this.hasAppearEvent()) {\n        this.removeAllScrollEventLister();\n      }\n    }\n  },\n\n  hasAppearEvent() {\n    const { onAppear, onDisappear, onFirstAppear } = this.props;\n\n    if (onFirstAppear && !this.firstAppeared) {\n      return true;\n    }\n    return !!(onAppear || onDisappear);\n  },\n\n  removeAllScrollEventLister() {\n    this.viewAppear = undefined;\n    if (this.scrollEvent) {\n      this.scrollEvent.remove();\n      this.scrollEvent = null;\n    }\n    if (this.scrollParentEvent) {\n      this.scrollParentEvent.remove();\n      this.scrollParentEvent = null;\n    }\n  },\n\n  getScrollParent() {\n    if (this.scrollParent) {\n      return this.scrollParent;\n    }\n    this.scrollParent = this.findScrollParent(this.root);\n    return this.scrollParent;\n  },\n\n  handleAppear() {\n    // 当外部传入的onAppear、onDisappear都不存在时，移除相关的事件监听\n    if (!this.hasAppearEvent()) {\n      this.removeAllScrollEventLister();\n    } else {\n      // 当viewAppear、alreadyAppear 未赋值时，做初始化\n      if (this.viewAppear === undefined) {\n        this.viewAppear = false;\n      }\n      this.checkVisible();\n      if (!this.scrollEvent) {\n        this.scrollEvent = addEvents(window, {\n          scroll: this.checkVisible,\n        });\n      }\n      if (!this.scrollParentEvent) {\n        const scrollParent = this.getScrollParent();\n        if (scrollParent) {\n          this.scrollParentEvent = addEvents(scrollParent, {\n            scroll: this.checkVisible,\n          });\n        }\n      }\n    }\n  },\n  findScrollParent(element) {\n    const { parentNode } = element;\n    if (parentNode && parentNode !== document.body) {\n      const parentNodeStyle = window.getComputedStyle(parentNode);\n      const parentNodeOverflowX = parentNodeStyle['overflow-x'];\n      const parentNodeOverflowY = parentNodeStyle['overflow-y'];\n      if (parentNodeOverflowX === 'auto' || parentNodeOverflowY === 'auto' || parentNodeOverflowX === 'scroll' || parentNodeOverflowY === 'scroll') {\n        return parentNode;\n      } else {\n        return this.findScrollParent(parentNode);\n      }\n    } else {\n      return undefined;\n    }\n  },\n  checkVisible() {\n    // 由于throttle的原因，在执行checkVisible时，this.root可能已经被销毁。\n    if (!this.root) {\n      return;\n    }\n\n    const { onAppear, onDisappear, appearOffset = 0, $mp } = this.props;\n\n    const viewVisible = isNodeVisible(this.root, this.scrollParent, appearOffset);\n    // 是否可见\n    if (viewVisible) {\n      // 之前不可见\n      if (!this.viewAppear) {\n        if (onAppear) {\n          onAppear($mp.getNormalizedEvent('appear'));\n        }\n        this.fireFirstAppear();\n      }\n      this.viewAppear = true;\n    } else {\n      // 之前可见\n      if (this.viewAppear && onDisappear) {\n        onDisappear($mp.getNormalizedEvent('disappear'));\n      }\n      this.viewAppear = false;\n    }\n  },\n  doAnimation() {\n    const _this = this;\n\n    const { props } = this;\n\n    let time = 0;\n    const { animation } = props;\n\n    const rootStyle = this.root.style;\n    const animationLength = animation.length;\n    animation.forEach((anim, index) => {\n      const { timeFunction, delay = 0, duration, transformOrigin } = anim.config;\n\n      time += delay;\n      _this.createAnimTimeout(() => {\n        Object.assign(rootStyle, props.$mp.getNormalizedStyle({\n          style: {\n            transitionTimingFunction: timeFunction,\n            transitionProperty: 'all',\n            transitionDelay: `${delay}ms`,\n            transitionDuration: `${duration}ms`,\n            transformOrigin,\n          },\n        }));\n        const animStyle = getStyleFromAnimation(_this, anim.animation, _this.root);\n        _this.createAnimTimeout(() => {\n          Object.assign(rootStyle, animStyle);\n        }, 0);\n        if (index === animationLength - 1) {\n          const resetTime = duration + delay + 10;\n          _this.createAnimTimeout(() => {\n            _this.stopAnimation();\n          }, resetTime);\n        }\n      }, time);\n      time += duration + 10;\n    });\n  },\n  stopAnimation() {\n    this.deleteAllAnimTimers();\n    const rootStyle = this.root.style;\n    Object.assign(rootStyle, this.props.$mp.getNormalizedStyle({\n      style: {\n        transitionTimingFunction: '',\n        transitionProperty: '',\n        transitionDelay: '',\n        transitionDuration: '',\n        transformOrigin: '',\n      },\n    }));\n  },\n  saveRoot(root) {\n    this.root = root;\n  },\n  render: function render() {\n    const { props } = this;\n    const { children, hidden, userProps, testProps = {}, tagName: TagName = 'div', $mp, ...rest } = props;\n\n    let { style } = props;\n    const touchableProps = {};\n\n    if (props.hoverClass) {\n      touchableProps.activeClassName = props.hoverClass;\n    }\n    if (props.hoverStartTime) {\n      touchableProps.delayPressIn = props.hoverStartTime;\n    }\n    if (props.hoverStayTime) {\n      touchableProps.delayPressOut = props.hoverStayTime;\n    }\n    // if (this.hasEvent('longtap')) {\n    //   touchableProps.onLongPress = this.onLongTap;\n    // }\n    if (hidden) {\n      style = { ...style, display: 'none' };\n    }\n\n    const content = Nerv.createElement(TagName, {\n      className: props.className,\n      style,\n      id: props.id,\n      ...this.props.$mp.getAriaProps(),\n      ref: this.saveRoot,\n      ...rest,\n    }, children);\n\n    return content;\n  },\n});\n","const lengthCssPropNames = {\n  width: 1,\n  height: 1,\n  top: 1,\n  left: 1,\n  bottom: 1,\n  right: 1,\n};\nconst colorCssPropNames = {\n  opacity: 1,\n  backgroundColor: 1,\n};\nconst translateProperties = {\n  translateX: 1,\n  translateY: 1,\n  translateZ: 1,\n};\nconst rotateProperties = {\n  rotateX: 1,\n  rotateY: 1,\n  rotateZ: 1,\n};\nconst skewProperties = {\n  skewX: 1,\n  skewY: 1,\n};\nfunction expandAnimation(animation) {\n  const ret = [];\n  animation.forEach((a) => {\n    const p = a[0];\n    const value = a[1];\n    if (p === 'rotate') {\n      ret.push(['rotateZ', value]);\n    } else if (p === 'scale') {\n      ret.push(['scaleX', [value[0]]]);\n      ret.push(['scaleY', value[1] !== undefined ? [value[1]] : [value[0]]]);\n    } else if (p === 'scale3d') {\n      ret.push(['scaleX', [value[0]]]);\n      ret.push(['scaleY', [value[1]]]);\n      ret.push(['scaleZ', [value[2]]]);\n    } else if (p === 'translate') {\n      ret.push(['translateX', [value[0]]]);\n      ret.push(['translateY', [value[1]]]);\n    } else if (p === 'translate3d') {\n      ret.push(['translateX', [value[0]]]);\n      ret.push(['translateY', [value[1]]]);\n      ret.push(['translateZ', [value[2]]]);\n    } else if (p === 'skew') {\n      ret.push(['skewX', [value[0]]]);\n      ret.push(['skewY', [value[1]]]);\n    } else {\n      ret.push(a);\n    }\n  });\n  return ret;\n}\n\nexport {\n  lengthCssPropNames,\n  colorCssPropNames,\n  translateProperties,\n  rotateProperties,\n  skewProperties,\n  expandAnimation,\n};\n","export default function Base(SuperClass) {\n  class BaseMixin extends SuperClass {\n    static get properties() {\n      return {\n        hidden: {\n          type: Boolean,\n          reflectToAttribute: true,\n        },\n        __fields: {\n          type: Object,\n        },\n      };\n    }\n\n    constructor(...args) {\n      super(...args);\n      this.triggerReRender = () => {\n        this.emitter.emit('RE_RENDER', 'base');\n      };\n    }\n\n    get bridge() {\n      return this.__fields.bridge;\n    }\n\n    get emitter() {\n      return this.__fields.emitter;\n    }\n\n    get pageStatus() {\n      return this.__fields.status;\n    }\n\n    get trackFn() {\n      return this.__fields.trackFn;\n    }\n\n    get publish() {\n      return this.bridge.publish;\n    }\n\n    get subscribe() {\n      return this.bridge.subscribe;\n    }\n\n    get unsubscribe() {\n      return this.bridge.unsubscribe;\n    }\n\n    get onNative() {\n      return this.bridge.onNative;\n    }\n\n    get offNative() {\n      return this.bridge.offNative;\n    }\n\n    get invokeNative() {\n      return this.bridge.invokeNative;\n    }\n\n    get invokeService() {\n      return this.bridge.invokeService;\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n    }\n\n    ready() {\n      super.ready();\n\n      if (this.listeners) {\n        const eventKeys = Object.keys(this.listeners);\n\n        function loop(i, l) {\n          const item = eventKeys[i];\n          const eventHandler = this.listeners[item];\n          const m = item.split('.');\n          const eventTarget = m.length > 1 ? m[0] : null;\n          const eventKey = eventTarget ? m[1] : m[0];\n\n          addListenerToElement(eventTarget ? this.$[eventTarget] : this, eventKey, function (e) {\n            return this[eventHandler].call(this, e);\n          });\n        }\n\n        for (let i = 0, l = eventKeys.length; i < l; i+=1) {\n          loop.call(this, i, l);\n        }\n      }\n    }\n\n    hasBehavior(type) {\n      // simple mock of hasBehavior method\n      if (type === 'base') {\n        return true;\n      }\n\n      return false;\n    }\n\n    invoke(methodName, params, option) {\n      this.invokeMethod(methodName, params, option);\n    }\n\n    async invokeMethod(method, params = {}, option = {}) {\n      const pureParams = omitBy(params, isFunction);\n      const call = (obj, key) => {\n        const fn = get$3(obj, key);\n\n        if (typeof fn === 'function') {\n          fn(res);\n        }\n      };\n\n      const res = await this.invokeNative(method, pureParams);\n      res.errMsg = res.errMsg || `${method}:ok`;\n      const status = res.errMsg.startsWith(`${method}:ok`) ? 'ok' : res.errMsg.startsWith(`${method}:cancel`) ? 'cancel' : 'fail';\n\n      if (status === 'ok') {\n        call(option, 'beforeSuccess');\n        call(params, 'success');\n        call(option, 'afterSuccess');\n      } else if (status === 'cancel') {\n        // FIXME: 这里在 cancel 中调用 fail 是为了兼容老逻辑\n        // 未来重构会去掉在基础库内部使用 invokeMethod 的逻辑`\n        call(params, 'fail');\n        call(option, 'cancel');\n      } else if (status === 'fail') {\n        call(option, 'beforeFail');\n        call(params, 'fail');\n        call(option, 'beforeFail');\n      }\n      call(params, 'complete');\n      call(option, 'afterAll');\n    }\n\n    triggerEvent(eventName, detail = {}) {\n      // 这个api用来触发组件自己独有的事件，比如swiper的change，input的focus，\n      const e = new CustomEvent(eventName, {\n        detail,\n        bubbles: false,\n        // 微信的做法，这些事件都不会冒泡\n        composed: false,\n      });\n      this.dispatchEvent(e);\n    }\n\n    parentCustomComponent() {\n      // find parent custom component\n      const cc = isInCustomComponent(this);\n\n      if (!cc) {\n        return null;\n      }\n\n      return cc._id;\n    }\n\n    _deserializeValue(value, type) {\n      if (type === Boolean) {\n        return !!value;\n      }\n\n      if (type === String) {\n        if (value === undefined || value === null) {\n          return '';\n        }\n        // compiler会把value=\"\"编译成value: true, 兼容一下\n        if (typeof value === 'boolean' && value) {\n          return '';\n        }\n\n        return value.toString();\n      }\n\n      return super._deserializeValue(value, type);\n    }\n  }\n\n  return BaseMixin;\n}\n","export default function Hover(SuperClass) {\n  class HoverMixin extends SuperClass {\n    static get properties() {\n      return {\n        hoverStartTime: {\n          type: Number,\n          value: 50,\n        },\n        hoverStayTime: {\n          type: Number,\n          value: 400,\n        },\n        hoverClass: {\n          type: String,\n          observer: '_hoverClassChange',\n        },\n        hoverStopPropagation: {\n          type: Boolean,\n          observer: '_hoverStopChange',\n        },\n      };\n    }\n\n    constructor() {\n      super();\n      this._hoverClass = [];\n    }\n\n    hasBehavior(type) {\n      // simple mock of hasBehavior method\n      if (type === 'hover') {\n        return true;\n      }\n\n      if (super.hasBehavior) {\n        return super.hasBehavior(type);\n      }\n    }\n\n    bindHover() {\n      if (!this._bindHover) {\n        this._bindHover = true;\n        this._hoverTouchStartId = this.hoverTouchStart.bind(this);\n        this._hoverTouchEndId = this.hoverTouchEnd.bind(this);\n        this._hoverCancelId = this.hoverCancel.bind(this);\n        this.addEventListener('touchstart', this._hoverTouchStartId, PASSIVE_TOUCH);\n        this.addEventListener('touchend', this._hoverTouchEndId);\n        this.addEventListener('touchcancel', this._hoverCancelId);\n        this.addEventListener('touchmove', this._hoverCancelId, PASSIVE_TOUCH);\n      }\n    }\n\n    unbindHover() {\n      if (this._bindHover) {\n        this._bindHover = false;\n        this.removeEventListener('touchstart', this._hoverTouchStartId);\n        this.removeEventListener('touchend', this._hoverTouchEndId);\n        this.removeEventListener('touchcancel', this._hoverCancelId);\n        this.removeEventListener('touchmove', this._hoverCancelId);\n      }\n    }\n\n    hoverTouchStart(e) {\n      if (!e._hoverPropagationStopped) {\n        if (this.hoverStopPropagation) {\n          e._hoverPropagationStopped = true;\n        }\n\n        if (this._hoverTouch && e.touches.length > 1 && !this._hovering) {\n          this.hoverCancel();\n          return;\n        }\n\n        this._hoverTouch = true;\n\n        if (this.hoverClass === 'none' || this.disabled) {\n          return;\n        }\n\n        this._hoverStyleTimeId = setTimeout(() => {\n          this._hovering = true;\n\n          if (this._hoverClass.length > 0) {\n            for (let e = 0; e < this._hoverClass.length; e++) {\n              this.classList.toggle(this._hoverClass[e], true);\n            }\n          }\n\n          if (!this._hoverTouch) {\n            window.requestAnimationFrame(() => {\n              clearTimeout(this._hoverStayTimeId);\n              this._hoverStayTimeId = setTimeout(() => {\n                this._hoverReset();\n              }, this.hoverStayTime);\n            });\n          }\n        }, this.hoverStartTime);\n      }\n    }\n\n    hoverTouchEnd() {\n      this._hoverTouch = false;\n\n      if (this._hovering) {\n        window.requestAnimationFrame(() => {\n          clearTimeout(this._hoverStayTimeId);\n          this._hoverStayTimeId = setTimeout(() => {\n            this._hoverReset();\n          }, this.hoverStayTime);\n        });\n      }\n    }\n\n    hoverCancel() {\n      this._hoverTouch = false;\n      clearTimeout(this._hoverStyleTimeId);\n\n      this._hoverReset();\n    }\n\n    _hoverClassChange(targetClassName) {\n      if (!targetClassName) {\n        return;\n      }\n\n      const classes = targetClassName.split(/\\s/);\n      this._hoverClass = [];\n\n      // remove hover effects\n      if (targetClassName === 'none' && !this.hoverStopPropagation) {\n        return this.unbindHover();\n      }\n\n      for (let n = 0; n < classes.length; n++) {\n        classes[n] && this._hoverClass.push(classes[n]);\n      }\n\n      this.bindHover();\n    }\n\n    _hoverStopChange(e) {\n      if (this.hoverClass === 'none' && !e) {\n        return this.unbindHover();\n      }\n\n      this.bindHover();\n    }\n\n    _hoverReset() {\n      if (this._hovering) {\n        this._hovering = false;\n\n        if (this.hoverClass !== 'none' && this._hoverClass.length > 0) {\n          for (let e = 0; e < this._hoverClass.length; e++) {\n            if (this.classList.contains(this._hoverClass[e])) {\n              this.classList.toggle(this._hoverClass[e], false);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return HoverMixin;\n}\n","import './view';\nimport './label';\n","import { PolymerElement, html } from '@polymer/polymer';\nimport Base from './common/base';\nimport { perfix } from './utils/config';\n\nclass Label extends Base(PolymerElement) {\n  static get is() {\n    return `${perfix}-label`;\n  }\n\n  static get properties() {\n    return {};\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n        }     \n      </style>     \n      <slot></slot>\n    `;\n  }\n\n  get listeners() {\n    return {\n      tap: 'onTap',\n    };\n  }\n\n  _dfs(parent) {\n    // 查找子节点中isLabelTarget为true的结点\n    if (parent.isLabelTarget) {\n      return parent;\n    }\n\n    const children = Array.from(parent.children);\n\n    for (let i = 0; i < children.length; i+=1) {\n      const target = this._dfs(children[i]);\n\n      if (target) {\n        return target;\n      }\n    }\n  }\n\n  onTap(e) {\n    let labelTarget;\n    const labelFor = this.htmlFor; // tma-html-compiler会把for输出到htmlFor\n\n    if (labelFor) {\n      labelTarget = this.querySelector(`#${labelFor}`) || document.getElementById(labelFor);\n    } else {\n      labelTarget = this._dfs(this);\n    }\n\n    if (labelTarget && labelTarget.handleLabelTap && e.target !== labelTarget) {\n      labelTarget.handleLabelTap(e);\n    }\n  }\n}\n\nwindow.customElements.define(Label.is, Label);\n","export const perfix = 'mp';\n","export const IS_IOS_11 = window.navigator.userAgent.match(/iPhone OS 11_[34]/);\n","import { PolymerElement, html } from '@polymer/polymer';\nimport Base from './common/base';\nimport Hover from './common/hover';\nimport { perfix } from './utils/config';\nimport { IS_IOS_11 } from './utils/tools';\n\nclass View extends Hover(Base(PolymerElement)) {\n  static get is() {\n    return `${perfix}-view`;\n  }\n\n  static get template() {\n    return html`\n      <style>      \n        :host {        \n          display: block;        \n          white-space: normal;      \n        }      \n        :host([ hidden ]) {        \n          display: none!important;\n        }      \n        #main {        \n          /* ios12 special */        \n          text-decoration: inherit;      \n        }    \n      </style>\n      <slot id=\"main\"></slot>\n    `;\n  }\n\n  ready() {\n    super.ready();\n    if (IS_IOS_11) {\n      // ios 11.4或者11.3的兼容问题, 文本节点的text-decoration没了\n      this.$.main.style.textDecoration = 'inherit';\n    }\n  }\n}\n\nwindow.customElements.define(View.is, View);\n","import Nerv from '@/nerv';\n\nexport default function EmptyComponent(props) {\n  const { children = null } = props || {};\n\n  return children;\n}\n","const caches = {};\n\nexport default function EmptyComponentFactory(type) {\n  if (caches[type]) {\n    return caches[type];\n  }\n\n  function EmptyComponent(props) {\n    const { children = null } = props;\n\n    return children;\n  }\n\n  EmptyComponent.displayName = type;\n  caches[type] = EmptyComponent;\n  return EmptyComponent;\n}\n","import Nerv, { Fragment } from '@/nerv';\n\nexport default function createBlock(element, props) {\n  let arrayElements = element;\n  if (!Array.isArray(arrayElements)) {\n    arrayElements = [arrayElements];\n  }\n  if (Fragment) {\n    return <Fragment {...props}>{arrayElements}</Fragment>;\n  } else {\n    return arrayElements;\n  }\n}\n","import Nerv, { Fragment } from '@/nerv';\n\nexport default function createRoot(element) {\n  if (Array.isArray(element) && Fragment) {\n    return <Fragment>{element}</Fragment>;\n  }\n  return element;\n}\n","import Nerv, { PureComponent } from '@/nerv';\n\nfunction transformChildrenToSlots(children) {\n  const slots = {};\n  Nerv.Children.forEach(children, (c) => {\n    const slot = c && c.props && c.props.slot || '$default';\n    const holder = slots[slot] || [];\n    holder.push(c);\n    slots[slot] = holder;\n  });\n  return slots;\n}\n\nexport default function (name, elementFactory) {\n  class RMLTemplate extends PureComponent {\n    render() {\n      const { $context, slot, children, ...props } = this.props;\n\n      props.$slots = transformChildrenToSlots(children);\n      const renderChildren = elementFactory.call($context, props);\n\n      return renderChildren;\n    }\n  }\n\n  RMLTemplate.displayName = name;\n\n  return RMLTemplate;\n}\n","import { noop } from '@/utils/types';\n\nconst F = Function;\nconst E = eval;\n\nfunction danger(ret) {\n  if (ret === F || ret === E) {\n    return true;\n  }\n  return false;\n}\n\nexport default function (fullArgs, isFunction) {\n  const args = fullArgs.slice(1);\n  let ret = fullArgs[0];\n  let lastArg;\n  for (let i = 0; i < args.length; i+=1) {\n    if (danger(ret)) {\n      return noop;\n    }\n    /* eslint eqeqeq:0 */\n    if (ret == null) {\n      break;\n    }\n    lastArg = ret;\n    ret = ret[args[i]];\n  }\n  if (isFunction) {\n    if (typeof ret !== 'function' || danger(ret)) {\n      return noop;\n    }\n    return ret.bind(lastArg);\n  }\n  if (danger(ret)) {\n    return noop;\n  }\n  return ret;\n}\n","import { noop } from '@/utils/types';\n\nconst PREFIX = '$sjs_';\nconst messageReg = new RegExp(PREFIX, 'g');\nconst stackReg = new RegExp(`\\\\s${PREFIX}`, 'g');\nconst SJS_FUNC = 1;\n\nfunction startsWithPrefix(str) {\n  return str.lastIndexOf(PREFIX, 0) === 0;\n}\n\nfunction is(target, type) {\n  return Object.prototype.toString.call(target) === `[object ${type}]`;\n}\n\nexport function prefix(target, p = true, r) {\n  if (!target) {\n    return target;\n  }\n  const { constructor } = target;\n\n  if (is(target, 'String') || is(target, 'Boolean') || is(target, 'Number')) {\n    return target;\n  }\n  if (is(target, 'Object')) {\n    const ret = {};\n    for (let k in target) {\n      if (target.hasOwnProperty(k)) {\n        const v = prefix(target[k], p, r);\n        if (p) {\n          if (!startsWithPrefix(k)) {\n            k = PREFIX + k;\n          }\n          ret[k] = v;\n        } else {\n          if (startsWithPrefix(k)) {\n            k = k.slice(PREFIX.length);\n          }\n          ret[k] = v;\n        }\n      }\n    }\n    return ret;\n  } else if (Array.isArray(target)) {\n    const _ret = [];\n    for (let i = 0; i < target.length; i+=1) {\n      _ret.push(prefix(target[i], p, r));\n    }\n    return _ret;\n  } else if (is(target, 'Date')) {\n    const _ret2 = new Date();\n    _ret2.setTime(target.getTime());\n    return _ret2;\n  } else if (is(target, 'RegExp')) {\n    let f = '';\n    if (target.global) {\n      f += 'g';\n    }\n    if (target.ignoreCase) {\n      f += 'i';\n    }\n    if (target.multiline) {\n      f += 'm';\n    }\n    return new RegExp(target.source, f);\n  } else if (is(target, 'Function')) {\n    if (r === SJS_FUNC) return target;\n  }\n  return null;\n}\n\nexport default function (fullArgs, isFunction) {\n  const args = fullArgs.slice(1);\n  let ret = fullArgs[0];\n  let lastArg = void 0;\n  for (let i = 0; i < args.length; i++) {\n    /* eslint eqeqeq:0 */\n    if (ret == null) {\n      break;\n    }\n    lastArg = ret;\n    let key = args[i];\n    if (typeof key === 'string') {\n      key = PREFIX + key;\n    }\n    ret = ret[key];\n  }\n  if (isFunction) {\n    if (typeof ret !== 'function') {\n      return noop;\n    }\n    return function (...runArgs) {\n      runArgs = runArgs.map((arg) => {\n        return prefix(arg);\n      });\n      try {\n        return prefix(ret.apply(lastArg, runArgs), false);\n      } catch (e) {\n        e.message = e.message.replace(messageReg, '');\n        e.stack = e.stack.substring(0, e.stack.indexOf('\\n', e.stack.lastIndexOf(`at ${PREFIX}`)));\n        e.stack = e.stack.replace(stackReg, ' ');\n        throw e;\n      }\n    };\n  }\n  /** TIPS: SJS handler 不支持axml中调用函数返回函数的场景\n   * 若用户调用了在 sjs 内的一个函数，然后这个函数返回了一个函数。\n   * 这个时候这个返回值（函数）不能作为 SJS 事件handler。\n   * 虽然类型也是函数，但是会在上面直接判掉\n   */\n  if (typeof ret === 'function') {\n    ret.sjs = true;\n    ret.prefix = prefix;\n    return ret;\n  }\n  return prefix(ret, false);\n}\n","import createBlock from './createBlock';\nimport createRoot from './createRoot';\nimport createTemplate from './createTemplate';\nimport EmptyComponent from './EmptyComponent';\nimport EmptyComponentFactory from './EmptyComponentFactory';\nimport getLooseDataMember from './getLooseDataMember';\nimport getSJSMember from './getSJSMember';\nimport iterate from './iterate';\nimport renderSlot from './renderSlot';\nimport resolveScopedSlots from './resolveScopedSlots';\nimport toString from './toString';\nimport useTemplate from './useTemplate';\n\nexport default {\n  createBlock,\n  createRoot,\n  createTemplate,\n  EmptyComponent,\n  EmptyComponentFactory,\n  getLooseDataMember,\n  getSJSMember,\n  iterate,\n  renderSlot,\n  resolveScopedSlots,\n  toString,\n  useTemplate,\n};\n","const { isArray } = Array;\n\nexport default function iterate(items, fn) {\n  let ret = null;\n  if (items) {\n    ret = [];\n    if (isArray(items)) {\n      ret = items.map(fn);\n    } else if (typeof items === 'number') {\n      for (let i = 0; i < items; i+=1) {\n        ret.push(fn(i + 1, i));\n      }\n    } else if (typeof items === 'object') {\n      Object.keys(items).forEach((key) => {\n        ret.push(fn(items[key], key));\n      });\n    }\n  }\n  return ret;\n}\n","const empty = {};\n\nexport default function renderSlot(data, slot, fallback, props) {\n  const { $scopedSlots = empty, $slots = empty } = data;\n\n  const scopedSlotFn = $scopedSlots[slot];\n  let nodes;\n  if (scopedSlotFn) {\n    nodes = [];\n    let isEmptyChildren = true;\n    scopedSlotFn.forEach((f) => {\n      const ret = f(props);\n      if (ret) {\n        isEmptyChildren = false;\n      }\n      nodes.push(ret);\n    });\n    if (isEmptyChildren) {\n      nodes = fallback;\n    }\n  } else {\n    const slotNodes = $slots[slot];\n    nodes = slotNodes || fallback;\n  }\n  return nodes;\n}\n","export default function resolveScopedSlots(arrScopedSlots) {\n  const objScopedSlots = {};\n  arrScopedSlots.forEach((arr) => {\n    const { fn, slot = '$default' } = arr;\n\n    objScopedSlots[slot] = objScopedSlots[slot] || [];\n    objScopedSlots[slot].push(fn);\n  });\n  return objScopedSlots;\n}\n","export default function toString(str) {\n  if (str == null) {\n    return str;\n  }\n  return `${str}`;\n}\n","import Nerv from '@/nerv';\n\nexport default function useTemplate(template, data, key, context) {\n  const Component = template && template.Component;\n  return Component ? Nerv.createElement(Component, { ...data, $context: context, key }) : null;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAzFA;AA2FA;AAEA;;;;;;;;;;;;ACnlgBA;AACA;AAogBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC93BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAghhBA;AACA;AAkhBA;AACA;;;;;;;;;;;;ACzkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AA3HA;AACA;AA6HA;AAEA;;;;;;;;;;;;AChbA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvBA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAhNA;AACA;AAkNA;AAEA;;;;;;;;;;;;ACvzDA;AACA;AA8zDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACpoGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AARA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAhZA;AACA;AAkZA;AAEA;;;;;;;;;;;;AC9jtCA;AAuCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAsBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAzBA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAlCA;;;;;;;;;;;;;AC/KA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACltjRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACjDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,WAEA;AACA;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvjBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAbA;AACA;AAyBA;AACA;AA/BA;AAipLA;AACA;AACA,aAEA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AACA;AADA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArMA;AAyMA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3uBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAhDA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAjFA;AACA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAYA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7MA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AA3BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAmBA;AA/IA;AAkJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAzCA;AA4CA;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAvHA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AAEA;AAAA;AAFA;AAGA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAoBA;AAlJA;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAxCA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAFA;AA0BA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AApbA;AAubA;;;;;;;;;;;;;;;;;;;;;;AC5cA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAFA;AAOA;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA9BA;AAiCA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAxHA;AA2HA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClxPA;AA0PA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChSA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AASA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAKA;AACA;AANA;AAOA;AAAA;AAGA;;;;AA9BA;AACA;AAgCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;AAnBA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;;;;AAhBA;AACA;AAkBA;;;;;;;;;;;;ACxBA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArCA;AA0CA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAPA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;ACHA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAlEA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AATA;AAYA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAEA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;;;;;;;;;;;;AClBA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAmCA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAXA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AAEA;AACA;AANA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AA1JA;AA6JA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AChOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAhBA;AAmBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AASA;AA3NA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AA/QA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;;;;AAhBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArMA;;;;;;;;;;;;ACznHA;AAsHA;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;ACRA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AArBA;AAwBA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAyBA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACLA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AAEA;AACA;AAmBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AACA;AAAA;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAQA;AAyCA;AApBA;AAEA;AAEA;AAEA;AAMA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIA;AACA;AACA;AAwxBA;AAEA;AAEA;AAEA;AAmBA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnNA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAqBA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;;AAiBA;AAfA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAlBA;AAmBA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AA9BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AAvCA;AAwCA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAIA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;;AASA;AARA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAMA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAKA;AAFA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;;;ACzPA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAEA;AAuBA;AAtBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;AChFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxOA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACflGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrWA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAIA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;AAKA;AAHA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;ACGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAkGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAOA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AASA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AASA;AAEA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAUA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AASA;AAAA;AACA;AASA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAEA;;;;;;;;;;;;;ACxvBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;ACpRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAOA;AAxCA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;ACdA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;;ACldA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7FA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnDA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AA7CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AALA;AASA;AACA;AA1NA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AACA;AADA;AACA;AAaA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAKA;AACA;AApBA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AAAA;AA0BA;AACA;AA3BA;AAAA;AAAA;AA8BA;AACA;AA/BA;AAAA;AAAA;AAkCA;AACA;AAnCA;AAAA;AAAA;AAsCA;AACA;AAvCA;AAAA;AAAA;AA0CA;AACA;AA3CA;AAAA;AAAA;AA8CA;AACA;AA/CA;AAAA;AAAA;AAkDA;AACA;AAnDA;AAAA;AAAA;AAsDA;AACA;AAvDA;AAAA;AAAA;AA0DA;AACA;AA3DA;AAAA;AAAA;AA8DA;AACA;AA/DA;AAAA;AAAA;AAkEA;AACA;AAnEA;AAAA;AAAA;AAsEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAbA;AACA;AAaA;AACA;AACA;AACA;AACA;AA3FA;AAAA;AAAA;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AApGA;AAAA;AAAA;AAuGA;AACA;AAxGA;AAAA;AAAA;AAAA;AA0GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AACA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3GA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAnJA;AAAA;AAAA;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9JA;AAAA;AAAA;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlLA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AAZA;AACA;AADA;AAAA;AACA;AAoLA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtLA;AAAA;AAAA;AACA;AADA;AACA;AAsBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AA3BA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;AAAA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAAA;AAAA;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAAA;AAAA;AA8DA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGA;AAAA;AAAA;AAoGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;AAAA;AAAA;AAkHA;AACA;AACA;AACA;AACA;AAtHA;AAAA;AAAA;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1IA;AAAA;AAAA;AA6IA;AACA;AACA;AACA;AACA;AACA;AAlJA;AAAA;AAAA;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhKA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAbA;AAkBA;AArBA;AACA;AADA;AAAA;AACA;AAkKA;AACA;;;;;;;;;;;;ACpKA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAoBA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvDA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAQA;;;;AAlBA;AACA;AA0DA;;;;;;;;;;;;AC/DA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAwBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AA7BA;AACA;AACA;;;AAEA;AACA;AAgBA;;;;AAtBA;AACA;AAgCA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AATA;AACA;AADA;AAAA;AACA;AAWA;AAEA;AACA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACrpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}